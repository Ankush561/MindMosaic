/* Graph.css */

/* Remove * box-sizing if already in index.css */
/* * {
  box-sizing: border-box;
} */

.graph-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  position: relative; /* Keep relative for positioning children like graph-controls */
  background-color: #EFF3EE; /* Very Light Sage Tint - New graph background */
}

.graph-svg {
  flex-grow: 1; /* Allows SVG to take up all space not used by other flex items (none in this case) */
  width: 100%;
  height: 100%; /* Make SVG fill the entire wrapper */
  display: block; /* Remove extra space below SVG */
}

.background { /* The clickable background rect in D3 */
  cursor: default;
  fill: transparent; /* Ensure it doesn't obscure the .graph-svg background */
}

/* Empty state for the graph */
.empty-graph-placeholder {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: #556B2F; /* Dark Olive/Sage for placeholder text */
}

.empty-graph-message {
  /* Optional: further styling for the message box itself if needed */
}

.empty-graph-message p {
  margin: 0;
  font-size: 1.1rem;
  color: #555;
  font-weight: 500;
}

/* Commented out ::before/::after overlays for a cleaner look */
/* .graph-svg::before {
  content: '';
  ...
}
.graph-svg::after {
  content: '';
  ...
} */

.node circle {
  /* Default fill can be set here if not overridden by D3 attributes */
  /* stroke: #333; */ /* Example: Charcoal stroke */
  /* stroke-width: 1.5px; */
}

.node text {
  font-family: 'Roboto', sans-serif;
  font-size: 10px;
  fill: #333333; /* Charcoal text for node titles */
  pointer-events: none; /* So click goes to circle/group */
}

.link {
  /* stroke: #A8C3A4; */ /* Sage for links, set in JS */
  /* stroke-width: 2px; */ /* Set in JS */
  /* fill: none; */ /* Set in JS */
}

.link.selected {
  stroke: #B87333; /* Copper for selected link */
  stroke-width: 3px;
}

.temp-link {
  stroke-dasharray: 5,5;
  /* stroke: #A8C3A4; */ /* Sage, set in JS */
}

.node.selected-for-connection circle {
  stroke: #fd7e14; /* Bright orange for selection cue */
  stroke-width: 2.5px;
  fill: #ffe0b2; /* Light orange fill */
}

/* REMOVE styles below this line if they are indeed for react-flow and not used, */
/* or if they are defined/overridden in App.css (like .button-group, .save-btn etc.) */
/* It seems like many of these are either duplicates or belong to a different component/library. */

/* Add to existing App.css -- THIS SECTION SHOULD BE MOVED OR REMOVED */
/* .button-group {
  display: flex;
  gap: 10px;
  margin-top: 20px;
}

.save-btn {
  background: #4CAF50;
  ...
}

.cancel-btn {
  background: #f0f0f0;
  ...
}

.delete-btn {
  background: #f44336;
  ...
}

.empty-state {
  text-align: center;
  ...
}

.empty-state button {
  background: #2196F3;
  ...
}

.create-btn {
  background: #2196F3;
 ...
}

.graph-container { 
  width: 100%; 
 ... 
} 

.graph-container::before { 
 ... 
} */

/* All .react-flow__* styles are kept as is for now, assuming they might be used elsewhere */
/* or are part of a library you intend to keep. If not, they can be removed. */

/* Grid pattern background */
.graph-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    linear-gradient(rgba(0, 0, 0, 0.05) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 0, 0, 0.05) 1px, transparent 1px);
  background-size: 20px 20px;
  z-index: 0;
  pointer-events: none;
}

/* Graph nodes */
.react-flow__node {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  position: absolute !important;
  /* Prevent force-directed layout from moving nodes */
  transform: none !important;
}

.react-flow__node:hover {
  transform: translateY(-2px) !important;
}

.react-flow__node-default {
  background: white;
  border-radius: 8px;
  border: none;
  padding: 12px 20px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

.react-flow__node-default.selected,
.react-flow__node-default.selected:hover {
  box-shadow: 0 0 0 2px #4a90e2, 0 4px 10px rgba(74, 144, 226, 0.2);
}

.react-flow__node-default:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* Node content styling */
.node-content {
  min-width: 150px;
}

.node-title {
  font-weight: 600;
  color: #2c3e50;
  margin: 0 0 4px 0;
  font-size: 0.95rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.node-description {
  color: #6c757d;
  font-size: 0.85rem;
  margin: 0;
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

/* Edge styling */
.react-flow__edge {
  transition: stroke-width 0.2s ease;
  pointer-events: all;
  position: absolute;
  z-index: 1;
}

.react-flow__edge-path {
  stroke: #95a5a6;
  stroke-width: 1.5;
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
}

.react-flow__edge:hover .react-flow__edge-path {
  stroke: #4a90e2;
  stroke-width: 2;
}

.react-flow__edge.selected .react-flow__edge-path {
  stroke: #4a90e2;
  stroke-width: 2.5;
}

/* Handle styling */
.react-flow__handle {
  width: 8px;
  height: 8px;
  background: #95a5a6;
  border: 2px solid white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.react-flow__handle:hover {
  background: #4a90e2;
}

.react-flow__handle-top {
  top: -4px;
}

.react-flow__handle-bottom {
  bottom: -4px;
}

.react-flow__handle-left {
  left: -4px;
}

.react-flow__handle-right {
  right: -4px;
}

/* Controls styling */
.react-flow__controls {
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  border-radius: 8px;
  overflow: hidden;
  background: white;
  border: none;
  padding: 4px;
}

.react-flow__controls-button {
  border: none;
  background: transparent;
  padding: 6px;
  color: #6c757d;
  transition: all 0.2s ease;
}

.react-flow__controls-button:hover {
  background: #f8f9fa;
  color: #4a90e2;
}

/* Mini map styling */
.react-flow__minimap {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
  border: none;
  overflow: hidden;
}

/* Background styling */
.react-flow__background {
  background-color: transparent;
}

/* Attribution styling */
.react-flow__attribution {
  background: transparent;
  color: #95a5a6;
}

/* Node dragging states */
.react-flow__node-default.dragging {
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

/* Connection line styling */
.react-flow__connection-path {
  stroke: #4a90e2;
  stroke-width: 2;
  stroke-dasharray: 5 3;
  animation: flowingDash 1s linear infinite;
}

@keyframes flowingDash {
  to {
    stroke-dashoffset: -8;
  }
}

/* Zoom pane styling */
.react-flow__renderer {
  background: transparent;
}

.react-flow__pane {
  cursor: grab;
}

.react-flow__pane.dragging {
  cursor: grabbing;
}

/* Selection styling */
.react-flow__selection {
  background: rgba(74, 144, 226, 0.1);
  border: 2px solid #4a90e2;
  border-radius: 4px;
}

/* Node deletion preview */
.react-flow__node.deleting {
  opacity: 0.5;
  box-shadow: 0 0 0 2px #dc3545;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .react-flow__node-default {
    padding: 8px 16px;
  }

  .node-content {
    min-width: 120px;
  }

  .node-title {
    font-size: 0.9rem;
  }

  .node-description {
    font-size: 0.8rem;
    max-width: 150px;
  }

  .react-flow__controls,
  .react-flow__minimap {
    display: none;
  }
}

/* Node position stability */
.react-flow__node {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  position: absolute !important;
  /* Prevent force-directed layout from moving nodes */
  transform: none !important;
}

.react-flow__node:hover {
  transform: translateY(-2px) !important;
}

.react-flow__viewport {
  transform-origin: 0 0;
  position: absolute;
  pointer-events: none;
  z-index: 0;
  width: 100%;
  height: 100%;
  overflow: visible !important;
  /* Prevent viewport from affecting node positions */
  transform: none !important;
}

/* Ensure edges follow node positions */
.react-flow__edge {
  pointer-events: all;
  position: absolute;
  z-index: 1;
}

/* Prevent force-directed layout effects */
.react-flow {
  position: relative !important;
}

.react-flow__nodes {
  position: absolute !important;
  top: 0;
  left: 0;
  pointer-events: none;
  transform: none !important;
  width: 100%;
  height: 100%;
}

.react-flow__node {
  position: absolute !important;
  transform: none !important;
  /* Enable pointer events for individual nodes */
  pointer-events: all !important;
  /* Prevent nodes from affecting each other */
  isolation: isolate;
  /* Ensure z-index stacking works properly */
  z-index: 2;
}

.react-flow__node.dragging {
  /* Maintain position during drag */
  position: absolute !important;
  z-index: 1000;
  pointer-events: all !important;
}

.react-flow__edges {
  position: absolute !important;
  top: 0;
  left: 0;
  pointer-events: none;
  transform: none !important;
  width: 100%;
  height: 100%;
  z-index: 1;
}

/* Ensure dragged node stays on top */
.react-flow__node.dragging {
  z-index: 1000 !important;
}

.graph-controls {
  position: absolute;
  bottom: 20px; /* Position from the bottom */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Fine-tune horizontal centering */
  display: flex;
  flex-direction: row; /* Arrange buttons/button-row horizontally */
  align-items: center; /* Align items vertically if they have different heights */
  gap: 0.75rem; /* Space between "Remove Edge" button and the button-row */
  z-index: 100; /* Ensure it's above graph elements */
  padding: 0.5rem 1rem; /* Add some padding */
  background-color: rgba(240, 244, 248, 0.85); /* Light, slightly transparent background */
  border-radius: 8px; /* Rounded corners */
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15); /* Subtle shadow */
}

.graph-controls .button-row {
  display: flex; /* Use flexbox to arrange buttons in a row */
  gap: 0.75rem; /* Add space between the buttons */
}