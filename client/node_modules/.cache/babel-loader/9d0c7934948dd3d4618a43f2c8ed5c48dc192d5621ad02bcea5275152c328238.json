{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mind Mosaic\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Graph from './components/graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport NodeViewer from './components/NodeViewer.js';\nimport FileList from './components/FileList.js';\nimport FileEditor from './components/FileEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport PencilIcon from './components/icons/PencilIcon.js';\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\nimport logo from './assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [interactionMode, setInteractionMode] = useState('select');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingFile, setIsEditingFile] = useState(false);\n  const [newNodeInitialPositionArgs, setNewNodeInitialPositionArgs] = useState(null);\n\n  // Determine if any panel that affects graph layout is visible\n  const isAnyPanelVisible = selectedNode && isEditing || selectedNode && !isEditing && !isCreating || isEditingFile;\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData();\n    } else {\n      setNodes([]);\n      setEdges([]);\n    }\n  }, [selectedFile]);\n  const loadFileData = async () => {\n    setNodes([]);\n    setEdges([]);\n    try {\n      const response = await api.getFile(selectedFile._id);\n      if (!response.data.nodes) {\n        setNodes([]);\n        setEdges([]);\n        return;\n      }\n      const nodesWithPositions = response.data.nodes.map(node => {\n        if (!node.position || node.position.x === null && node.position.y === null) {\n          return {\n            ...node,\n            position: {\n              x: Math.random() * 600 + 100,\n              y: Math.random() * 400 + 100\n            }\n          };\n        }\n        return node;\n      });\n      setNodes(nodesWithPositions);\n      const edgesResponse = await api.getEdges();\n      const relevantEdges = edgesResponse.data.filter(edge => response.data.nodes.some(node => node._id === edge.source) && response.data.nodes.some(node => node._id === edge.target));\n      setEdges(relevantEdges);\n    } catch (err) {\n      console.error('Error loading file data:', err);\n    }\n  };\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n  };\n  const handleNodeClick = node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(false);\n      setIsCreating(false);\n    }\n  };\n  const handleNodeDoubleClick = node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(true);\n      setIsCreating(false);\n    }\n  };\n  const handleCreateNode = async graphDimensions => {\n    if (graphDimensions) {\n      setNewNodeInitialPositionArgs(graphDimensions);\n    }\n    setSelectedNode(null);\n    setIsCreating(true);\n    setIsEditing(true);\n  };\n  const handleSave = async nodeData => {\n    try {\n      if (!nodeData._id) {\n        let initialX = 300,\n          initialY = 300;\n        const minDistance = 100;\n        const padding = 50;\n        if (newNodeInitialPositionArgs && newNodeInitialPositionArgs.graphWidth && newNodeInitialPositionArgs.graphHeight) {\n          const {\n            graphWidth,\n            graphHeight\n          } = newNodeInitialPositionArgs;\n          let targetX = graphWidth * 0.70;\n          let targetY = graphHeight * 0.40;\n          let positionFound = false;\n          for (let attempt = 0; attempt < 30; attempt++) {\n            let currentX = targetX;\n            let currentY = targetY;\n            if (attempt > 0) {\n              const angle = Math.random() * 2 * Math.PI;\n              const radius = 25 * Math.ceil(attempt / 8);\n              currentX = targetX + radius * Math.cos(angle);\n              currentY = targetY + radius * Math.sin(angle);\n            }\n            currentX = Math.max(padding, Math.min(graphWidth - padding, currentX));\n            currentY = Math.max(padding, Math.min(graphHeight - padding, currentY));\n            let collision = false;\n            for (const node of nodes) {\n              if (node.position) {\n                const dist = Math.sqrt(Math.pow(node.position.x - currentX, 2) + Math.pow(node.position.y - currentY, 2));\n                if (dist < minDistance) {\n                  collision = true;\n                  break;\n                }\n              }\n            }\n            if (!collision) {\n              initialX = currentX;\n              initialY = currentY;\n              positionFound = true;\n              break;\n            }\n          }\n          if (!positionFound) {\n            console.warn(\"Could not find an empty spot for new node, using last attempted or default.\");\n            initialX = Math.max(padding, Math.min(graphWidth - padding, targetX));\n            initialY = Math.max(padding, Math.min(graphHeight - padding, targetY));\n          }\n          setNewNodeInitialPositionArgs(null);\n        } else {\n          console.warn(\"Graph dimensions not available for new node positioning, using defaults.\");\n        }\n        nodeData.position = {\n          x: initialX,\n          y: initialY\n        };\n      }\n      const isNewNodeCreation = !nodeData._id;\n      const response = isNewNodeCreation ? await api.createNode(nodeData) : await api.updateNode(nodeData._id, nodeData);\n      if (isNewNodeCreation && response.data && response.data._id) {\n        const newNodeFromServer = response.data;\n\n        // Ensure the position we calculated is on the node object\n        newNodeFromServer.position = nodeData.position; // Calculated position is in nodeData.position\n        // **Also explicitly set x and y for D3's initial understanding**\n        newNodeFromServer.x = nodeData.position.x;\n        newNodeFromServer.y = nodeData.position.y;\n\n        // The console.warn for server position mismatch can be removed or adjusted\n        // if we now prioritize the calculated position by setting x, y directly.\n        // console.warn(\"Server response for new node didn't match calculated position. Using calculated one for initial render.\");\n\n        setNodes(prevNodes => [...prevNodes, newNodeFromServer]);\n        if (selectedFile) {\n          await api.addNodeToFile(selectedFile._id, newNodeFromServer._id);\n        }\n      } else if (!isNewNodeCreation) {\n        // For existing node updates, we might want to update just that node in local state\n        // for faster feedback, but loadFileData() will refresh anyway.\n      }\n      await loadFileData();\n    } catch (err) {\n      console.error('Save failed:', err);\n    } finally {\n      setSelectedNode(null);\n      setIsCreating(false);\n      setIsEditing(false);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      if (selectedFile) {\n        await api.removeNodeFromFile(selectedFile._id, id);\n      }\n      await api.deleteNode(id);\n      await loadFileData();\n\n      // If the deleted node was the selected one, clear selectedNode\n      if (selectedNode && selectedNode._id === id) {\n        setSelectedNode(null);\n        setIsEditing(false); // Also reset editing mode\n        // isCreating should already be false if we are deleting an existing node\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(`Deletion failed: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n    }\n  };\n  const handleCreateEdge = async (sourceId, targetId) => {\n    try {\n      const existingEdge = edges.find(edge => edge.source === sourceId && edge.target === targetId || edge.source === targetId && edge.target === sourceId);\n      if (existingEdge) return;\n      const newEdgeResponse = await api.createEdge({\n        source: sourceId,\n        target: targetId\n      });\n      await loadFileData();\n      setInteractionMode('select');\n    } catch (err) {\n      console.error('Edge creation error:', err);\n    }\n  };\n  const handleDeleteEdge = async edgeId => {\n    try {\n      await api.deleteEdge(edgeId);\n      await loadFileData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(`Edge deletion failed: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message}`);\n    }\n  };\n\n  // const handleEdgeAnimationEnd = (edgeId) => {\n  //   setAnimatedEdgeId(null);\n  //   console.log(\"Edge animation ended for:\", edgeId);\n  // };\n\n  // const handleNodeAppearAnimationEnd = (nodeId) => {\n  //   setAppearingNodeId(null);\n  //   console.log(\"Node appearance animation ended for:\", nodeId);\n  // };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (isCreating) {\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n  const handleStartEdit = () => setIsEditing(true);\n  const handleBackgroundClick = () => {\n    setSelectedNode(null);\n    setIsCreating(false);\n    setIsEditing(false);\n  };\n  const handleEditFile = () => setIsEditingFile(true);\n  const handleFileEditSave = async updatedFile => {\n    try {\n      const response = await api.updateFile(updatedFile._id, {\n        name: updatedFile.name,\n        description: updatedFile.description\n      });\n      if (response.status === 200) {\n        setSelectedFile(response.data);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to update file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      alert('Failed to update file: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const handleFileEditCancel = () => setIsEditingFile(false);\n  const handleFileDelete = async fileId => {\n    try {\n      const response = await api.deleteFile(fileId);\n      if (response.status === 200 || response.status === 204) {\n        setSelectedFile(null);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to delete file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      alert('Failed to delete file: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  const isEditorVisible = selectedNode && isEditing || isCreating;\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${selectedFile ? 'graph-view-active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-title-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Mind Mosaic Logo\",\n        className: \"project-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), !selectedFile ? /*#__PURE__*/_jsxDEV(FileList, {\n      onFileSelect: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedFile(null),\n          className: \"back-btn\",\n          children: [/*#__PURE__*/_jsxDEV(BackArrowIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), \"Back to Files\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditFile,\n          className: \"edit-file-btn\",\n          children: [/*#__PURE__*/_jsxDEV(PencilIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), \"Edit File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), isEditingFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-editor-container\",\n        children: /*#__PURE__*/_jsxDEV(FileEditor, {\n          file: selectedFile,\n          onSave: handleFileEditSave,\n          onCancel: handleFileEditCancel,\n          onDelete: handleFileDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-container\",\n          children: /*#__PURE__*/_jsxDEV(Graph, {\n            nodes: nodes,\n            edges: edges,\n            onNodeClick: handleNodeClick,\n            onNodeDoubleClick: handleNodeDoubleClick,\n            onCreateNew: handleCreateNode,\n            onCreateEdge: handleCreateEdge,\n            onDeleteEdge: handleDeleteEdge,\n            interactionMode: interactionMode,\n            setInteractionMode: setInteractionMode,\n            onBackgroundClick: handleBackgroundClick,\n            isAnyPanelVisible: isAnyPanelVisible\n            // newlyCreatedEdgeId={animatedEdgeId}\n            // onEdgeAnimationComplete={handleEdgeAnimationEnd}\n            ,\n            appearingNodeId: appearingNodeId\n            // onNodeAppearAnimationComplete={handleNodeAppearAnimationEnd}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`,\n          children: isEditorVisible ? /*#__PURE__*/_jsxDEV(NodeEditor, {\n            node: selectedNode || {\n              title: '',\n              content: '',\n              tags: []\n            },\n            onSave: handleSave,\n            onDelete: selectedNode ? () => handleDelete(selectedNode._id) : null,\n            onCancel: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }, this) : isViewerVisible ? /*#__PURE__*/_jsxDEV(NodeViewer, {\n            node: selectedNode,\n            onEdit: handleStartEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 19\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E8pV0VDNNYAY1dSMdNP661qADLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Graph","NodeEditor","NodeViewer","FileList","FileEditor","api","PencilIcon","BackArrowIcon","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","isCreating","setIsCreating","interactionMode","setInteractionMode","selectedFile","setSelectedFile","isEditing","setIsEditing","isEditingFile","setIsEditingFile","newNodeInitialPositionArgs","setNewNodeInitialPositionArgs","isAnyPanelVisible","loadFileData","response","getFile","_id","data","nodesWithPositions","map","node","position","x","y","Math","random","edgesResponse","getEdges","relevantEdges","filter","edge","some","source","target","err","console","error","handleFileSelect","file","handleNodeClick","handleNodeDoubleClick","handleCreateNode","graphDimensions","handleSave","nodeData","initialX","initialY","minDistance","padding","graphWidth","graphHeight","targetX","targetY","positionFound","attempt","currentX","currentY","angle","PI","radius","ceil","cos","sin","max","min","collision","dist","sqrt","pow","warn","isNewNodeCreation","createNode","updateNode","newNodeFromServer","prevNodes","addNodeToFile","handleDelete","id","removeNodeFromFile","deleteNode","_err$response","_err$response$data","message","handleCreateEdge","sourceId","targetId","existingEdge","find","newEdgeResponse","createEdge","handleDeleteEdge","edgeId","deleteEdge","_err$response2","_err$response2$data","handleCancel","handleStartEdit","handleBackgroundClick","handleEditFile","handleFileEditSave","updatedFile","updateFile","name","description","status","alert","_err$response3","_err$response3$data","handleFileEditCancel","handleFileDelete","fileId","deleteFile","_err$response4","_err$response4$data","isEditorVisible","isViewerVisible","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","onClick","style","width","height","marginRight","onSave","onCancel","onDelete","onNodeClick","onNodeDoubleClick","onCreateNew","onCreateEdge","onDeleteEdge","onBackgroundClick","appearingNodeId","title","content","tags","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mind Mosaic/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Graph from './components/graph.js';\r\nimport NodeEditor from './components/NodeEditor.js';\r\nimport NodeViewer from './components/NodeViewer.js';\r\nimport FileList from './components/FileList.js';\r\nimport FileEditor from './components/FileEditor.js';\r\nimport api from './services/api.js';\r\nimport './App.css';\r\nimport PencilIcon from './components/icons/PencilIcon.js';\r\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\r\nimport logo from './assets/logo.png';\r\n\r\nfunction App() {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [interactionMode, setInteractionMode] = useState('select');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingFile, setIsEditingFile] = useState(false);\r\n  const [newNodeInitialPositionArgs, setNewNodeInitialPositionArgs] = useState(null);\r\n\r\n  // Determine if any panel that affects graph layout is visible\r\n  const isAnyPanelVisible = (selectedNode && isEditing) || (selectedNode && !isEditing && !isCreating) || isEditingFile;\r\n\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      loadFileData();\r\n    } else {\r\n      setNodes([]);\r\n      setEdges([]);\r\n    }\r\n  }, [selectedFile]);\r\n\r\n  const loadFileData = async () => {\r\n    setNodes([]);\r\n    setEdges([]);\r\n    try {\r\n      const response = await api.getFile(selectedFile._id);\r\n      if (!response.data.nodes) {\r\n        setNodes([]);\r\n        setEdges([]);\r\n        return;\r\n      }\r\n      const nodesWithPositions = response.data.nodes.map(node => {\r\n        if (!node.position || (node.position.x === null && node.position.y === null)) {\r\n          return {\r\n            ...node,\r\n            position: {\r\n              x: Math.random() * 600 + 100,\r\n              y: Math.random() * 400 + 100\r\n            }\r\n          };\r\n        }\r\n        return node;\r\n      });\r\n      setNodes(nodesWithPositions);\r\n      const edgesResponse = await api.getEdges();\r\n      const relevantEdges = edgesResponse.data.filter(edge =>\r\n        response.data.nodes.some(node => node._id === edge.source) &&\r\n        response.data.nodes.some(node => node._id === edge.target)\r\n      );\r\n      setEdges(relevantEdges);\r\n    } catch (err) {\r\n      console.error('Error loading file data:', err);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (file) => {\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleNodeClick = (node) => {\r\n    if (interactionMode !== 'connect') {\r\n      setSelectedNode(node);\r\n      setIsEditing(false);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleNodeDoubleClick = (node) => {\r\n    if (interactionMode !== 'connect') {\r\n      setSelectedNode(node);\r\n      setIsEditing(true);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateNode = async (graphDimensions) => {\r\n    if (graphDimensions) {\r\n      setNewNodeInitialPositionArgs(graphDimensions);\r\n    }\r\n    setSelectedNode(null);\r\n    setIsCreating(true);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = async (nodeData) => {\r\n    try {\r\n      if (!nodeData._id) {\r\n        let initialX = 300, initialY = 300;\r\n        const minDistance = 100;\r\n        const padding = 50;\r\n\r\n        if (newNodeInitialPositionArgs && newNodeInitialPositionArgs.graphWidth && newNodeInitialPositionArgs.graphHeight) {\r\n          const { graphWidth, graphHeight } = newNodeInitialPositionArgs;\r\n          let targetX = graphWidth * 0.70;\r\n          let targetY = graphHeight * 0.40;\r\n\r\n          let positionFound = false;\r\n          for (let attempt = 0; attempt < 30; attempt++) {\r\n            let currentX = targetX;\r\n            let currentY = targetY;\r\n\r\n            if (attempt > 0) {\r\n              const angle = Math.random() * 2 * Math.PI;\r\n              const radius = 25 * Math.ceil(attempt / 8);\r\n              currentX = targetX + radius * Math.cos(angle);\r\n              currentY = targetY + radius * Math.sin(angle);\r\n            }\r\n\r\n            currentX = Math.max(padding, Math.min(graphWidth - padding, currentX));\r\n            currentY = Math.max(padding, Math.min(graphHeight - padding, currentY));\r\n\r\n            let collision = false;\r\n            for (const node of nodes) {\r\n              if (node.position) {\r\n                const dist = Math.sqrt(Math.pow(node.position.x - currentX, 2) + Math.pow(node.position.y - currentY, 2));\r\n                if (dist < minDistance) {\r\n                  collision = true;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (!collision) {\r\n              initialX = currentX;\r\n              initialY = currentY;\r\n              positionFound = true;\r\n              break;\r\n            }\r\n          }\r\n          if (!positionFound) {\r\n            console.warn(\"Could not find an empty spot for new node, using last attempted or default.\");\r\n            initialX = Math.max(padding, Math.min(graphWidth - padding, targetX));\r\n            initialY = Math.max(padding, Math.min(graphHeight - padding, targetY));\r\n          }\r\n          setNewNodeInitialPositionArgs(null);\r\n        } else {\r\n          console.warn(\"Graph dimensions not available for new node positioning, using defaults.\");\r\n        }\r\n        nodeData.position = { x: initialX, y: initialY };\r\n      }\r\n      \r\n      const isNewNodeCreation = !nodeData._id;\r\n\r\n      const response = isNewNodeCreation ? await api.createNode(nodeData) : await api.updateNode(nodeData._id, nodeData);\r\n      \r\n      if (isNewNodeCreation && response.data && response.data._id) { \r\n        const newNodeFromServer = response.data;\r\n        \r\n        // Ensure the position we calculated is on the node object\r\n        newNodeFromServer.position = nodeData.position; // Calculated position is in nodeData.position\r\n        // **Also explicitly set x and y for D3's initial understanding**\r\n        newNodeFromServer.x = nodeData.position.x;\r\n        newNodeFromServer.y = nodeData.position.y;\r\n\r\n        // The console.warn for server position mismatch can be removed or adjusted\r\n        // if we now prioritize the calculated position by setting x, y directly.\r\n        // console.warn(\"Server response for new node didn't match calculated position. Using calculated one for initial render.\");\r\n        \r\n        setNodes(prevNodes => [...prevNodes, newNodeFromServer]);\r\n        \r\n        if (selectedFile) {\r\n          await api.addNodeToFile(selectedFile._id, newNodeFromServer._id);\r\n        }\r\n      } else if (!isNewNodeCreation) {\r\n        // For existing node updates, we might want to update just that node in local state\r\n        // for faster feedback, but loadFileData() will refresh anyway.\r\n      }\r\n      await loadFileData();\r\n    } catch (err) {\r\n      console.error('Save failed:', err);\r\n    } finally {\r\n      setSelectedNode(null);\r\n      setIsCreating(false);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      if (selectedFile) {\r\n        await api.removeNodeFromFile(selectedFile._id, id);\r\n      }\r\n      await api.deleteNode(id);\r\n      await loadFileData();\r\n\r\n      // If the deleted node was the selected one, clear selectedNode\r\n      if (selectedNode && selectedNode._id === id) {\r\n        setSelectedNode(null);\r\n        setIsEditing(false); // Also reset editing mode\r\n        // isCreating should already be false if we are deleting an existing node\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(`Deletion failed: ${err.response?.data?.message || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateEdge = async (sourceId, targetId) => {\r\n    try {\r\n      const existingEdge = edges.find(edge => (edge.source === sourceId && edge.target === targetId) || (edge.source === targetId && edge.target === sourceId));\r\n      if (existingEdge) return;\r\n      const newEdgeResponse = await api.createEdge({ source: sourceId, target: targetId });\r\n      await loadFileData();\r\n      setInteractionMode('select');\r\n    } catch (err) {\r\n      console.error('Edge creation error:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteEdge = async (edgeId) => {\r\n    try {\r\n      await api.deleteEdge(edgeId);\r\n      await loadFileData();\r\n    } catch (err) {\r\n      console.error(`Edge deletion failed: ${err.response?.data?.message || err.message}`);\r\n    }\r\n  };\r\n\r\n  // const handleEdgeAnimationEnd = (edgeId) => {\r\n  //   setAnimatedEdgeId(null);\r\n  //   console.log(\"Edge animation ended for:\", edgeId);\r\n  // };\r\n\r\n  // const handleNodeAppearAnimationEnd = (nodeId) => {\r\n  //   setAppearingNodeId(null);\r\n  //   console.log(\"Node appearance animation ended for:\", nodeId);\r\n  // };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    if (isCreating) {\r\n      setSelectedNode(null);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleStartEdit = () => setIsEditing(true);\r\n  const handleBackgroundClick = () => {\r\n    setSelectedNode(null);\r\n    setIsCreating(false);\r\n    setIsEditing(false);\r\n  };\r\n  const handleEditFile = () => setIsEditingFile(true);\r\n  const handleFileEditSave = async (updatedFile) => {\r\n    try {\r\n      const response = await api.updateFile(updatedFile._id, { name: updatedFile.name, description: updatedFile.description });\r\n      if (response.status === 200) {\r\n        setSelectedFile(response.data);\r\n        setIsEditingFile(false);\r\n      } else {\r\n        alert('Failed to update file. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      alert('Failed to update file: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n  const handleFileEditCancel = () => setIsEditingFile(false);\r\n  const handleFileDelete = async (fileId) => {\r\n    try {\r\n      const response = await api.deleteFile(fileId);\r\n      if (response.status === 200 || response.status === 204) {\r\n        setSelectedFile(null);\r\n        setIsEditingFile(false);\r\n      } else {\r\n        alert('Failed to delete file. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      alert('Failed to delete file: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const isEditorVisible = (selectedNode && isEditing) || isCreating;\r\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\r\n\r\n  return (\r\n    <div className={`app-container ${selectedFile ? 'graph-view-active' : ''}`}>\r\n      <div className=\"project-title-header\">\r\n        <img src={logo} alt=\"Mind Mosaic Logo\" className=\"project-logo\" />\r\n      </div>\r\n\r\n      {!selectedFile ? (\r\n        <FileList onFileSelect={handleFileSelect} />\r\n      ) : (\r\n        <div className=\"main-content\">\r\n          <div className=\"header\">\r\n            <button onClick={() => setSelectedFile(null)} className=\"back-btn\">\r\n              <BackArrowIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\r\n              Back to Files\r\n            </button>\r\n            <h2>{selectedFile.name}</h2>\r\n            <button onClick={handleEditFile} className=\"edit-file-btn\">\r\n              <PencilIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\r\n              Edit File\r\n            </button>\r\n          </div>\r\n          \r\n          {isEditingFile ? (\r\n            <div className=\"file-editor-container\">\r\n              <FileEditor\r\n                file={selectedFile}\r\n                onSave={handleFileEditSave}\r\n                onCancel={handleFileEditCancel}\r\n                onDelete={handleFileDelete}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"graph-container\">\r\n                <Graph\r\n                  nodes={nodes}\r\n                  edges={edges}\r\n                  onNodeClick={handleNodeClick}\r\n                  onNodeDoubleClick={handleNodeDoubleClick}\r\n                  onCreateNew={handleCreateNode}\r\n                  onCreateEdge={handleCreateEdge}\r\n                  onDeleteEdge={handleDeleteEdge}\r\n                  interactionMode={interactionMode}\r\n                  setInteractionMode={setInteractionMode}\r\n                  onBackgroundClick={handleBackgroundClick}\r\n                  isAnyPanelVisible={isAnyPanelVisible}\r\n                  // newlyCreatedEdgeId={animatedEdgeId}\r\n                  // onEdgeAnimationComplete={handleEdgeAnimationEnd}\r\n                  appearingNodeId={appearingNodeId}\r\n                  // onNodeAppearAnimationComplete={handleNodeAppearAnimationEnd}\r\n                />\r\n              </div>\r\n              <div className={`editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`}>\r\n                {isEditorVisible ? (\r\n                  <NodeEditor\r\n                    node={selectedNode || { title: '', content: '', tags: [] }}\r\n                    onSave={handleSave}\r\n                    onDelete={selectedNode ? () => handleDelete(selectedNode._id) : null}\r\n                    onCancel={handleCancel}\r\n                  />\r\n                ) : isViewerVisible ? (\r\n                  <NodeViewer\r\n                    node={selectedNode}\r\n                    onEdit={handleStartEdit}\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}