{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\client\\\\src\\\\components\\\\graph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  nodes = [],\n  edges = [],\n  onNodeClick,\n  onCreateNew,\n  onCreateEdge\n}) => {\n  _s();\n  const svgRef = useRef();\n  const linkingState = useRef({\n    sourceNode: null,\n    tempLink: null\n  });\n  console.log('Graph received:', {\n    nodeCount: nodes.length,\n    edgeCount: edges.length\n  });\n  useEffect(() => {\n    if (!nodes || nodes.length === 0) {\n      // Clear SVG if no nodes\n      d3.select(svgRef.current).selectAll('*').remove();\n      return;\n    }\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove(); // Clear previous elements\n    const width = svgRef.current.clientWidth;\n    const height = svgRef.current.clientHeight;\n\n    // Create a force simulation\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(edges).id(d => d.id).distance(100)) // Add link force\n    .force('charge', d3.forceManyBody().strength(-150)) // Adjusted strength\n    .force('center', d3.forceCenter(width / 2, height / 2));\n\n    // Draw edges\n    const linkElements = svg.append('g').attr('class', 'links').selectAll('line').data(edges).enter().append('line').attr('class', 'link'); // Use CSS class for styling\n\n    // Draw nodes\n    const nodeElements = svg.append('g').attr('class', 'nodes').selectAll('g') // Group for circle + text\n    .data(nodes).enter().append('g').attr('class', 'node').on('click', (event, d) => {\n      if (linkingState.current.sourceNode && linkingState.current.sourceNode !== d) {\n        // If in linking mode and clicked a different node, create edge\n        if (onCreateEdge) onCreateEdge(linkingState.current.sourceNode.id, d.id);\n        linkingState.current.sourceNode = null;\n        if (linkingState.current.tempLink) linkingState.current.tempLink.remove();\n        linkingState.current.tempLink = null;\n        svg.selectAll('.node circle').style('stroke', null); // Reset highlight\n      } else if (onNodeClick) {\n        onNodeClick(d);\n      }\n      event.stopPropagation(); // Prevent triggering SVG click if any\n    });\n    nodeElements.append('circle').attr('r', 10) // Default radius, can be styled via CSS\n    // .attr('fill', 'steelblue') // Use CSS for fill\n    .call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n    nodeElements.append('text').text(d => d.title || d.id).attr('x', 15).attr('y', 5);\n    function dragstarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n\n      // Start linking process\n      linkingState.current.sourceNode = d;\n      linkingState.current.tempLink = svg.append('line').attr('class', 'temp-link link') // Style like other links\n      .attr('x1', d.x).attr('y1', d.y).attr('x2', d.x).attr('y2', d.y).attr('stroke-dasharray', '5,5'); // Make it dashed\n\n      // Highlight source node\n      d3.select(this).select('circle').style('stroke', 'orange').style('stroke-width', '3px');\n      event.sourceEvent.stopPropagation();\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n      if (linkingState.current.tempLink) {\n        linkingState.current.tempLink.attr('x1', linkingState.current.sourceNode.x).attr('y1', linkingState.current.sourceNode.y).attr('x2', event.x).attr('y2', event.y);\n      }\n    }\n    function dragended(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n      if (linkingState.current.tempLink) {\n        linkingState.current.tempLink.remove();\n        linkingState.current.tempLink = null;\n      }\n\n      // Check if drag ended on another node\n      const targetElement = event.sourceEvent.target;\n      const targetDatum = d3.select(targetElement).datum() || d3.select(targetElement.parentNode).datum();\n      if (targetDatum && targetDatum.id && targetDatum.id !== linkingState.current.sourceNode.id) {\n        if (onCreateEdge) {\n          onCreateEdge(linkingState.current.sourceNode.id, targetDatum.id);\n        }\n      }\n      linkingState.current.sourceNode = null;\n      svg.selectAll('.node circle').style('stroke', null).style('stroke-width', null); // Reset highlight\n    }\n    simulation.on('tick', () => {\n      linkElements.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      nodeElements.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n    return () => {\n      simulation.stop();\n      if (linkingState.current.tempLink) linkingState.current.tempLink.remove();\n      linkingState.current.sourceNode = null;\n      linkingState.current.tempLink = null;\n    };\n  }, [nodes, edges, onNodeClick, onCreateEdge]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"600\",\n      height: \"600\",\n      className: \"graph-svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-btn\",\n      onClick: onCreateNew,\n      children: \"+ New Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"2G83SEjOKNyGzDb0X1IfSIAX97Y=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Graph","nodes","edges","onNodeClick","onCreateNew","onCreateEdge","_s","svgRef","linkingState","sourceNode","tempLink","console","log","nodeCount","length","edgeCount","select","current","selectAll","remove","svg","width","clientWidth","height","clientHeight","simulation","forceSimulation","force","forceLink","id","d","distance","forceManyBody","strength","forceCenter","linkElements","append","attr","data","enter","nodeElements","on","event","style","stopPropagation","call","drag","dragstarted","dragged","dragended","text","title","active","alphaTarget","restart","fx","x","fy","y","sourceEvent","targetElement","target","targetDatum","datum","parentNode","source","stop","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/client/src/components/graph.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './Graph.css';\r\n\r\nconst Graph = ({ nodes = [], edges = [], onNodeClick, onCreateNew, onCreateEdge }) => {\r\n  const svgRef = useRef();\r\n  const linkingState = useRef({ sourceNode: null, tempLink: null });\r\n\r\n  console.log('Graph received:', {\r\n    nodeCount: nodes.length,\r\n    edgeCount: edges.length\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!nodes || nodes.length === 0) {\r\n      // Clear SVG if no nodes\r\n      d3.select(svgRef.current).selectAll('*').remove();\r\n      return;\r\n    }\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove(); // Clear previous elements\r\n    const width = svgRef.current.clientWidth;\r\n    const height = svgRef.current.clientHeight;\r\n\r\n    // Create a force simulation\r\n    const simulation = d3.forceSimulation(nodes)\r\n      .force('link', d3.forceLink(edges).id(d => d.id).distance(100)) // Add link force\r\n      .force('charge', d3.forceManyBody().strength(-150)) // Adjusted strength\r\n      .force('center', d3.forceCenter(width / 2, height / 2));\r\n\r\n    // Draw edges\r\n    const linkElements = svg.append('g')\r\n      .attr('class', 'links')\r\n      .selectAll('line')\r\n      .data(edges)\r\n      .enter().append('line')\r\n      .attr('class', 'link'); // Use CSS class for styling\r\n\r\n    // Draw nodes\r\n    const nodeElements = svg.append('g')\r\n      .attr('class', 'nodes')\r\n      .selectAll('g') // Group for circle + text\r\n      .data(nodes)\r\n      .enter().append('g')\r\n      .attr('class', 'node')\r\n      .on('click', (event, d) => {\r\n        if (linkingState.current.sourceNode && linkingState.current.sourceNode !== d) {\r\n          // If in linking mode and clicked a different node, create edge\r\n          if (onCreateEdge) onCreateEdge(linkingState.current.sourceNode.id, d.id);\r\n          linkingState.current.sourceNode = null;\r\n          if (linkingState.current.tempLink) linkingState.current.tempLink.remove();\r\n          linkingState.current.tempLink = null;\r\n          svg.selectAll('.node circle').style('stroke', null); // Reset highlight\r\n        } else if (onNodeClick) {\r\n          onNodeClick(d);\r\n        }\r\n        event.stopPropagation(); // Prevent triggering SVG click if any\r\n      });\r\n\r\n    nodeElements.append('circle')\r\n      .attr('r', 10) // Default radius, can be styled via CSS\r\n      // .attr('fill', 'steelblue') // Use CSS for fill\r\n      .call(d3.drag()\r\n        .on('start', dragstarted)\r\n        .on('drag', dragged)\r\n        .on('end', dragended));\r\n    \r\n    nodeElements.append('text')\r\n      .text(d => d.title || d.id)\r\n      .attr('x', 15)\r\n      .attr('y', 5);\r\n\r\n    function dragstarted(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n\r\n      // Start linking process\r\n      linkingState.current.sourceNode = d;\r\n      linkingState.current.tempLink = svg.append('line')\r\n        .attr('class', 'temp-link link') // Style like other links\r\n        .attr('x1', d.x)\r\n        .attr('y1', d.y)\r\n        .attr('x2', d.x)\r\n        .attr('y2', d.y)\r\n        .attr('stroke-dasharray', '5,5'); // Make it dashed\r\n\r\n      // Highlight source node\r\n      d3.select(this).select('circle').style('stroke', 'orange').style('stroke-width', '3px');\r\n      event.sourceEvent.stopPropagation();\r\n    }\r\n\r\n    function dragged(event, d) {\r\n      d.fx = event.x;\r\n      d.fy = event.y;\r\n      if (linkingState.current.tempLink) {\r\n        linkingState.current.tempLink\r\n          .attr('x1', linkingState.current.sourceNode.x)\r\n          .attr('y1', linkingState.current.sourceNode.y)\r\n          .attr('x2', event.x)\r\n          .attr('y2', event.y);\r\n      }\r\n    }\r\n\r\n    function dragended(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n\r\n      if (linkingState.current.tempLink) {\r\n        linkingState.current.tempLink.remove();\r\n        linkingState.current.tempLink = null;\r\n      }\r\n      \r\n      // Check if drag ended on another node\r\n      const targetElement = event.sourceEvent.target;\r\n      const targetDatum = d3.select(targetElement).datum() || d3.select(targetElement.parentNode).datum();\r\n\r\n      if (targetDatum && targetDatum.id && targetDatum.id !== linkingState.current.sourceNode.id) {\r\n        if (onCreateEdge) {\r\n          onCreateEdge(linkingState.current.sourceNode.id, targetDatum.id);\r\n        }\r\n      }\r\n      \r\n      linkingState.current.sourceNode = null;\r\n      svg.selectAll('.node circle').style('stroke', null).style('stroke-width', null); // Reset highlight\r\n    }\r\n\r\n    simulation.on('tick', () => {\r\n      linkElements\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n\r\n      nodeElements\r\n        .attr('transform', d => `translate(${d.x},${d.y})`);\r\n    });\r\n\r\n    return () => {\r\n      simulation.stop();\r\n      if (linkingState.current.tempLink) linkingState.current.tempLink.remove();\r\n      linkingState.current.sourceNode = null;\r\n      linkingState.current.tempLink = null;\r\n    };\r\n  }, [nodes, edges, onNodeClick, onCreateEdge]);\r\n\r\n  return (\r\n    <div className=\"graph-wrapper\">\r\n      <svg ref={svgRef} width=\"600\" height=\"600\" className=\"graph-svg\" />\r\n      <button className=\"create-btn\" onClick={onCreateNew}>\r\n        + New Node\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}