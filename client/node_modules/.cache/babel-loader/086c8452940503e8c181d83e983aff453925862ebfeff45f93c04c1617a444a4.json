{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\client\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Graph from './components/graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport NodeViewer from './components/NodeViewer.js';\nimport FileList from './components/FileList.js';\nimport FileEditor from './components/FileEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [interactionMode, setInteractionMode] = useState('select');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingFile, setIsEditingFile] = useState(false);\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData();\n    }\n  }, [selectedFile]);\n  const loadFileData = async () => {\n    try {\n      console.log('Loading file data for:', selectedFile._id);\n      const response = await api.getFile(selectedFile._id);\n      console.log('File data received:', response.data);\n      if (!response.data.nodes) {\n        console.warn('No nodes array in file data');\n        setNodes([]);\n        setEdges([]);\n        return;\n      }\n\n      // Ensure all nodes have positions\n      const nodesWithPositions = response.data.nodes.map(node => {\n        if (!node.position || node.position.x === null && node.position.y === null) {\n          return {\n            ...node,\n            position: {\n              x: Math.random() * 600 + 100,\n              // Random position between 100 and 700\n              y: Math.random() * 400 + 100 // Random position between 100 and 500\n            }\n          };\n        }\n        return node;\n      });\n      console.log('Nodes with positions:', nodesWithPositions);\n      setNodes(nodesWithPositions);\n\n      // Load edges related to these nodes\n      const edgesResponse = await api.getEdges();\n      const relevantEdges = edgesResponse.data.filter(edge => response.data.nodes.some(node => node._id === edge.source) && response.data.nodes.some(node => node._id === edge.target));\n      console.log('Relevant edges:', relevantEdges);\n      setEdges(relevantEdges);\n    } catch (err) {\n      console.error('Error loading file data:', err);\n    }\n  };\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n  };\n  const handleNodeClick = node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(false);\n      setIsCreating(false);\n    }\n  };\n  const handleNodeDoubleClick = node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(true);\n      setIsCreating(false);\n    }\n  };\n  const handleCreateNode = async () => {\n    setSelectedNode(null);\n    setIsCreating(true);\n    setIsEditing(true);\n  };\n  const handleSave = async nodeData => {\n    try {\n      console.group('Saving Node Process');\n      console.log('Node data before save:', nodeData);\n      if (!nodeData._id) {\n        let avgX = 300,\n          avgY = 300;\n        if (nodes.length > 0) {\n          avgX = nodes.reduce((sum, node) => {\n            var _node$position;\n            return sum + (((_node$position = node.position) === null || _node$position === void 0 ? void 0 : _node$position.x) || 300);\n          }, 0) / nodes.length;\n          avgY = nodes.reduce((sum, node) => {\n            var _node$position2;\n            return sum + (((_node$position2 = node.position) === null || _node$position2 === void 0 ? void 0 : _node$position2.y) || 300);\n          }, 0) / nodes.length;\n        }\n        const offset = 50;\n        nodeData.position = {\n          x: avgX + (Math.random() - 0.5) * offset,\n          y: avgY + (Math.random() - 0.5) * offset\n        };\n      }\n      const response = nodeData._id ? await api.updateNode(nodeData._id, nodeData) : await api.createNode(nodeData);\n      console.log('Save response:', response.data);\n      if (!nodeData._id && selectedFile) {\n        const addToFileResponse = await api.addNodeToFile(selectedFile._id, response.data._id);\n        console.log('Added to file response:', addToFileResponse.data);\n      }\n      await loadFileData();\n    } catch (err) {\n      var _err$response;\n      console.error('Save failed:', {\n        error: err,\n        request: err.config,\n        response: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data\n      });\n    } finally {\n      console.groupEnd();\n      setSelectedNode(null);\n      setIsCreating(false);\n      setIsEditing(false);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      if (selectedFile) {\n        // First remove the node from the file\n        await api.removeNodeFromFile(selectedFile._id, id);\n      }\n      await api.deleteNode(id);\n      await loadFileData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(`Deletion failed: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message}`);\n    }\n  };\n  const handleCreateEdge = async (sourceId, targetId) => {\n    try {\n      console.log(`Creating edge from ${sourceId} to ${targetId}`);\n      const existingEdge = edges.find(edge => edge.source === sourceId && edge.target === targetId || edge.source === targetId && edge.target === sourceId);\n      if (existingEdge) {\n        console.log('An edge already exists between these nodes.');\n        return;\n      }\n      const response = await api.createEdge({\n        source: sourceId,\n        target: targetId\n      });\n      console.log('Edge created:', response.data);\n      await loadFileData();\n      setInteractionMode('select');\n    } catch (err) {\n      console.error('Edge creation error:', err);\n    }\n  };\n  const handleDeleteEdge = async edgeId => {\n    try {\n      await api.deleteEdge(edgeId);\n      await loadFileData();\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(`Edge deletion failed: ${((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message}`);\n    }\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (isCreating) {\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n  const handleStartEdit = () => {\n    setIsEditing(true);\n  };\n  const handleBackgroundClick = () => {\n    setSelectedNode(null);\n    setIsCreating(false);\n    setIsEditing(false);\n  };\n  const handleEditFile = () => {\n    setIsEditingFile(true);\n  };\n  const handleFileEditSave = async updatedFile => {\n    try {\n      const response = await api.updateFile(updatedFile._id, updatedFile);\n      setSelectedFile(response.data);\n      setIsEditingFile(false);\n    } catch (err) {\n      console.error('Failed to update file:', err);\n    }\n  };\n  const handleFileEditCancel = () => {\n    setIsEditingFile(false);\n  };\n  const handleFileDelete = async fileId => {\n    try {\n      console.log('Attempting to delete file:', fileId);\n      const response = await api.deleteFile(fileId);\n      console.log('File deletion response:', response);\n      if (response.status === 200 || response.status === 204) {\n        console.log('File deleted successfully');\n        setSelectedFile(null);\n        setIsEditingFile(false);\n      } else {\n        console.error('Unexpected response status:', response.status);\n        alert('Failed to delete file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Failed to delete file:', err);\n      alert('Failed to delete file: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  if (!selectedFile) {\n    return /*#__PURE__*/_jsxDEV(FileList, {\n      onFileSelect: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 12\n    }, this);\n  }\n  const isEditorVisible = selectedNode && isEditing || isCreating;\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedFile(null),\n        className: \"back-btn\",\n        children: \"Back to Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedFile.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditFile,\n        className: \"edit-file-btn\",\n        children: \"Edit File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: isEditingFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-editor-container\",\n        children: /*#__PURE__*/_jsxDEV(FileEditor, {\n          file: selectedFile,\n          onSave: handleFileEditSave,\n          onCancel: handleFileEditCancel,\n          onDelete: handleFileDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-container\",\n          children: /*#__PURE__*/_jsxDEV(Graph, {\n            nodes: nodes,\n            edges: edges,\n            onNodeClick: handleNodeClick,\n            onNodeDoubleClick: handleNodeDoubleClick,\n            onCreateNew: handleCreateNode,\n            onCreateEdge: handleCreateEdge,\n            onDeleteEdge: handleDeleteEdge,\n            interactionMode: interactionMode,\n            setInteractionMode: setInteractionMode,\n            onBackgroundClick: handleBackgroundClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`,\n          children: isEditorVisible ? /*#__PURE__*/_jsxDEV(NodeEditor, {\n            node: selectedNode || {\n              title: '',\n              content: '',\n              tags: []\n            },\n            onSave: handleSave,\n            onDelete: selectedNode ? () => handleDelete(selectedNode._id) : null,\n            onCancel: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this) : isViewerVisible ? /*#__PURE__*/_jsxDEV(NodeViewer, {\n            node: selectedNode,\n            onEdit: handleStartEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nFyysWhCPMBKMr3UCOsqXvAIwd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Graph","NodeEditor","NodeViewer","FileList","FileEditor","api","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","isCreating","setIsCreating","interactionMode","setInteractionMode","selectedFile","setSelectedFile","isEditing","setIsEditing","isEditingFile","setIsEditingFile","loadFileData","console","log","_id","response","getFile","data","warn","nodesWithPositions","map","node","position","x","y","Math","random","edgesResponse","getEdges","relevantEdges","filter","edge","some","source","target","err","error","handleFileSelect","file","handleNodeClick","handleNodeDoubleClick","handleCreateNode","handleSave","nodeData","group","avgX","avgY","length","reduce","sum","_node$position","_node$position2","offset","updateNode","createNode","addToFileResponse","addNodeToFile","_err$response","request","config","groupEnd","handleDelete","id","removeNodeFromFile","deleteNode","_err$response2","_err$response2$data","message","handleCreateEdge","sourceId","targetId","existingEdge","find","createEdge","handleDeleteEdge","edgeId","deleteEdge","_err$response3","_err$response3$data","handleCancel","handleStartEdit","handleBackgroundClick","handleEditFile","handleFileEditSave","updatedFile","updateFile","handleFileEditCancel","handleFileDelete","fileId","deleteFile","status","alert","_err$response4","_err$response4$data","onFileSelect","fileName","_jsxFileName","lineNumber","columnNumber","isEditorVisible","isViewerVisible","className","children","onClick","name","onSave","onCancel","onDelete","onNodeClick","onNodeDoubleClick","onCreateNew","onCreateEdge","onDeleteEdge","onBackgroundClick","title","content","tags","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/client/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Graph from './components/graph.js';\r\nimport NodeEditor from './components/NodeEditor.js';\r\nimport NodeViewer from './components/NodeViewer.js';\r\nimport FileList from './components/FileList.js';\r\nimport FileEditor from './components/FileEditor.js';\r\nimport api from './services/api.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [interactionMode, setInteractionMode] = useState('select');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingFile, setIsEditingFile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      loadFileData();\r\n    }\r\n  }, [selectedFile]);\r\n\r\n  const loadFileData = async () => {\r\n    try {\r\n      console.log('Loading file data for:', selectedFile._id);\r\n      const response = await api.getFile(selectedFile._id);\r\n      console.log('File data received:', response.data);\r\n      \r\n      if (!response.data.nodes) {\r\n        console.warn('No nodes array in file data');\r\n        setNodes([]);\r\n        setEdges([]);\r\n        return;\r\n      }\r\n\r\n      // Ensure all nodes have positions\r\n      const nodesWithPositions = response.data.nodes.map(node => {\r\n        if (!node.position || (node.position.x === null && node.position.y === null)) {\r\n          return {\r\n            ...node,\r\n            position: {\r\n              x: Math.random() * 600 + 100, // Random position between 100 and 700\r\n              y: Math.random() * 400 + 100  // Random position between 100 and 500\r\n            }\r\n          };\r\n        }\r\n        return node;\r\n      });\r\n\r\n      console.log('Nodes with positions:', nodesWithPositions);\r\n      setNodes(nodesWithPositions);\r\n\r\n      // Load edges related to these nodes\r\n      const edgesResponse = await api.getEdges();\r\n      const relevantEdges = edgesResponse.data.filter(edge => \r\n        response.data.nodes.some(node => node._id === edge.source) &&\r\n        response.data.nodes.some(node => node._id === edge.target)\r\n      );\r\n      console.log('Relevant edges:', relevantEdges);\r\n      setEdges(relevantEdges);\r\n    } catch (err) {\r\n      console.error('Error loading file data:', err);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (file) => {\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleNodeClick = (node) => {\r\n    if (interactionMode !== 'connect') {\r\n      setSelectedNode(node);\r\n      setIsEditing(false);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleNodeDoubleClick = (node) => {\r\n    if (interactionMode !== 'connect') {\r\n      setSelectedNode(node);\r\n      setIsEditing(true);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateNode = async () => {\r\n    setSelectedNode(null);\r\n    setIsCreating(true);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = async (nodeData) => {\r\n    try {\r\n      console.group('Saving Node Process');\r\n      console.log('Node data before save:', nodeData);\r\n      \r\n      if (!nodeData._id) {\r\n        let avgX = 300, avgY = 300;\r\n        if (nodes.length > 0) {\r\n          avgX = nodes.reduce((sum, node) => sum + (node.position?.x || 300), 0) / nodes.length;\r\n          avgY = nodes.reduce((sum, node) => sum + (node.position?.y || 300), 0) / nodes.length;\r\n        }\r\n\r\n        const offset = 50;\r\n        nodeData.position = {\r\n          x: avgX + (Math.random() - 0.5) * offset,\r\n          y: avgY + (Math.random() - 0.5) * offset\r\n        };\r\n      }\r\n      \r\n      const response = nodeData._id\r\n        ? await api.updateNode(nodeData._id, nodeData)\r\n        : await api.createNode(nodeData);\r\n\r\n      console.log('Save response:', response.data);\r\n\r\n      if (!nodeData._id && selectedFile) {\r\n        const addToFileResponse = await api.addNodeToFile(selectedFile._id, response.data._id);\r\n        console.log('Added to file response:', addToFileResponse.data);\r\n      }\r\n\r\n      await loadFileData();\r\n    } catch (err) {\r\n      console.error('Save failed:', {\r\n        error: err,\r\n        request: err.config,\r\n        response: err.response?.data\r\n      });\r\n    } finally {\r\n      console.groupEnd();\r\n      setSelectedNode(null);\r\n      setIsCreating(false);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      if (selectedFile) {\r\n        // First remove the node from the file\r\n        await api.removeNodeFromFile(selectedFile._id, id);\r\n      }\r\n      await api.deleteNode(id);\r\n      await loadFileData();\r\n    } catch (err) {\r\n      console.error(`Deletion failed: ${err.response?.data?.message || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateEdge = async (sourceId, targetId) => {\r\n    try {\r\n      console.log(`Creating edge from ${sourceId} to ${targetId}`);\r\n\r\n      const existingEdge = edges.find(\r\n        edge => (edge.source === sourceId && edge.target === targetId) ||\r\n                (edge.source === targetId && edge.target === sourceId)\r\n      );\r\n      if (existingEdge) {\r\n        console.log('An edge already exists between these nodes.');\r\n        return;\r\n      }\r\n\r\n      const response = await api.createEdge({ source: sourceId, target: targetId });\r\n      console.log('Edge created:', response.data);\r\n      await loadFileData();\r\n      setInteractionMode('select');\r\n    } catch (err) {\r\n      console.error('Edge creation error:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteEdge = async (edgeId) => {\r\n    try {\r\n      await api.deleteEdge(edgeId);\r\n      await loadFileData();\r\n    } catch (err) {\r\n      console.error(`Edge deletion failed: ${err.response?.data?.message || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    if (isCreating) {\r\n      setSelectedNode(null);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleStartEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleBackgroundClick = () => {\r\n    setSelectedNode(null);\r\n    setIsCreating(false);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleEditFile = () => {\r\n    setIsEditingFile(true);\r\n  };\r\n\r\n  const handleFileEditSave = async (updatedFile) => {\r\n    try {\r\n      const response = await api.updateFile(updatedFile._id, updatedFile);\r\n      setSelectedFile(response.data);\r\n      setIsEditingFile(false);\r\n    } catch (err) {\r\n      console.error('Failed to update file:', err);\r\n    }\r\n  };\r\n\r\n  const handleFileEditCancel = () => {\r\n    setIsEditingFile(false);\r\n  };\r\n\r\n  const handleFileDelete = async (fileId) => {\r\n    try {\r\n      console.log('Attempting to delete file:', fileId);\r\n      const response = await api.deleteFile(fileId);\r\n      console.log('File deletion response:', response);\r\n      \r\n      if (response.status === 200 || response.status === 204) {\r\n        console.log('File deleted successfully');\r\n        setSelectedFile(null);\r\n        setIsEditingFile(false);\r\n      } else {\r\n        console.error('Unexpected response status:', response.status);\r\n        alert('Failed to delete file. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to delete file:', err);\r\n      alert('Failed to delete file: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  if (!selectedFile) {\r\n    return <FileList onFileSelect={handleFileSelect} />;\r\n  }\r\n\r\n  const isEditorVisible = (selectedNode && isEditing) || isCreating;\r\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"header\">\r\n        <button onClick={() => setSelectedFile(null)} className=\"back-btn\">\r\n          Back to Files\r\n        </button>\r\n        <h2>{selectedFile.name}</h2>\r\n        <button onClick={handleEditFile} className=\"edit-file-btn\">\r\n          Edit File\r\n        </button>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        {isEditingFile ? (\r\n          <div className=\"file-editor-container\">\r\n            <FileEditor\r\n              file={selectedFile}\r\n              onSave={handleFileEditSave}\r\n              onCancel={handleFileEditCancel}\r\n              onDelete={handleFileDelete}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"graph-container\">\r\n              <Graph \r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodeClick={handleNodeClick}\r\n                onNodeDoubleClick={handleNodeDoubleClick}\r\n                onCreateNew={handleCreateNode}\r\n                onCreateEdge={handleCreateEdge}\r\n                onDeleteEdge={handleDeleteEdge}\r\n                interactionMode={interactionMode}\r\n                setInteractionMode={setInteractionMode}\r\n                onBackgroundClick={handleBackgroundClick}\r\n              />\r\n            </div>\r\n            <div className={`editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`}>\r\n              {isEditorVisible ? (\r\n                <NodeEditor\r\n                  node={selectedNode || { title: '', content: '', tags: [] }}\r\n                  onSave={handleSave}\r\n                  onDelete={selectedNode ? () => handleDelete(selectedNode._id) : null}\r\n                  onCancel={handleCancel}\r\n                />\r\n              ) : isViewerVisible ? (\r\n                <NodeViewer\r\n                  node={selectedNode}\r\n                  onEdit={handleStartEdit}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd,IAAIuB,YAAY,EAAE;MAChBM,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;EAElB,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAER,YAAY,CAACS,GAAG,CAAC;MACvD,MAAMC,QAAQ,GAAG,MAAM3B,GAAG,CAAC4B,OAAO,CAACX,YAAY,CAACS,GAAG,CAAC;MACpDF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,QAAQ,CAACE,IAAI,CAAC;MAEjD,IAAI,CAACF,QAAQ,CAACE,IAAI,CAACtB,KAAK,EAAE;QACxBiB,OAAO,CAACM,IAAI,CAAC,6BAA6B,CAAC;QAC3CtB,QAAQ,CAAC,EAAE,CAAC;QACZE,QAAQ,CAAC,EAAE,CAAC;QACZ;MACF;;MAEA;MACA,MAAMqB,kBAAkB,GAAGJ,QAAQ,CAACE,IAAI,CAACtB,KAAK,CAACyB,GAAG,CAACC,IAAI,IAAI;QACzD,IAAI,CAACA,IAAI,CAACC,QAAQ,IAAKD,IAAI,CAACC,QAAQ,CAACC,CAAC,KAAK,IAAI,IAAIF,IAAI,CAACC,QAAQ,CAACE,CAAC,KAAK,IAAK,EAAE;UAC5E,OAAO;YACL,GAAGH,IAAI;YACPC,QAAQ,EAAE;cACRC,CAAC,EAAEE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;cAAE;cAC9BF,CAAC,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAE;YAChC;UACF,CAAC;QACH;QACA,OAAOL,IAAI;MACb,CAAC,CAAC;MAEFT,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEM,kBAAkB,CAAC;MACxDvB,QAAQ,CAACuB,kBAAkB,CAAC;;MAE5B;MACA,MAAMQ,aAAa,GAAG,MAAMvC,GAAG,CAACwC,QAAQ,CAAC,CAAC;MAC1C,MAAMC,aAAa,GAAGF,aAAa,CAACV,IAAI,CAACa,MAAM,CAACC,IAAI,IAClDhB,QAAQ,CAACE,IAAI,CAACtB,KAAK,CAACqC,IAAI,CAACX,IAAI,IAAIA,IAAI,CAACP,GAAG,KAAKiB,IAAI,CAACE,MAAM,CAAC,IAC1DlB,QAAQ,CAACE,IAAI,CAACtB,KAAK,CAACqC,IAAI,CAACX,IAAI,IAAIA,IAAI,CAACP,GAAG,KAAKiB,IAAI,CAACG,MAAM,CAC3D,CAAC;MACDtB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEgB,aAAa,CAAC;MAC7C/B,QAAQ,CAAC+B,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZvB,OAAO,CAACwB,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAAC;IAChD;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIC,IAAI,IAAK;IACjChC,eAAe,CAACgC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,eAAe,GAAIlB,IAAI,IAAK;IAChC,IAAIlB,eAAe,KAAK,SAAS,EAAE;MACjCH,eAAe,CAACqB,IAAI,CAAC;MACrBb,YAAY,CAAC,KAAK,CAAC;MACnBN,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMsC,qBAAqB,GAAInB,IAAI,IAAK;IACtC,IAAIlB,eAAe,KAAK,SAAS,EAAE;MACjCH,eAAe,CAACqB,IAAI,CAAC;MACrBb,YAAY,CAAC,IAAI,CAAC;MAClBN,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMuC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCzC,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,IAAI,CAAC;IACnBM,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMkC,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACF/B,OAAO,CAACgC,KAAK,CAAC,qBAAqB,CAAC;MACpChC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE8B,QAAQ,CAAC;MAE/C,IAAI,CAACA,QAAQ,CAAC7B,GAAG,EAAE;QACjB,IAAI+B,IAAI,GAAG,GAAG;UAAEC,IAAI,GAAG,GAAG;QAC1B,IAAInD,KAAK,CAACoD,MAAM,GAAG,CAAC,EAAE;UACpBF,IAAI,GAAGlD,KAAK,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE5B,IAAI;YAAA,IAAA6B,cAAA;YAAA,OAAKD,GAAG,IAAI,EAAAC,cAAA,GAAA7B,IAAI,CAACC,QAAQ,cAAA4B,cAAA,uBAAbA,cAAA,CAAe3B,CAAC,KAAI,GAAG,CAAC;UAAA,GAAE,CAAC,CAAC,GAAG5B,KAAK,CAACoD,MAAM;UACrFD,IAAI,GAAGnD,KAAK,CAACqD,MAAM,CAAC,CAACC,GAAG,EAAE5B,IAAI;YAAA,IAAA8B,eAAA;YAAA,OAAKF,GAAG,IAAI,EAAAE,eAAA,GAAA9B,IAAI,CAACC,QAAQ,cAAA6B,eAAA,uBAAbA,eAAA,CAAe3B,CAAC,KAAI,GAAG,CAAC;UAAA,GAAE,CAAC,CAAC,GAAG7B,KAAK,CAACoD,MAAM;QACvF;QAEA,MAAMK,MAAM,GAAG,EAAE;QACjBT,QAAQ,CAACrB,QAAQ,GAAG;UAClBC,CAAC,EAAEsB,IAAI,GAAG,CAACpB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI0B,MAAM;UACxC5B,CAAC,EAAEsB,IAAI,GAAG,CAACrB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI0B;QACpC,CAAC;MACH;MAEA,MAAMrC,QAAQ,GAAG4B,QAAQ,CAAC7B,GAAG,GACzB,MAAM1B,GAAG,CAACiE,UAAU,CAACV,QAAQ,CAAC7B,GAAG,EAAE6B,QAAQ,CAAC,GAC5C,MAAMvD,GAAG,CAACkE,UAAU,CAACX,QAAQ,CAAC;MAElC/B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEE,QAAQ,CAACE,IAAI,CAAC;MAE5C,IAAI,CAAC0B,QAAQ,CAAC7B,GAAG,IAAIT,YAAY,EAAE;QACjC,MAAMkD,iBAAiB,GAAG,MAAMnE,GAAG,CAACoE,aAAa,CAACnD,YAAY,CAACS,GAAG,EAAEC,QAAQ,CAACE,IAAI,CAACH,GAAG,CAAC;QACtFF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE0C,iBAAiB,CAACtC,IAAI,CAAC;MAChE;MAEA,MAAMN,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOwB,GAAG,EAAE;MAAA,IAAAsB,aAAA;MACZ7C,OAAO,CAACwB,KAAK,CAAC,cAAc,EAAE;QAC5BA,KAAK,EAAED,GAAG;QACVuB,OAAO,EAAEvB,GAAG,CAACwB,MAAM;QACnB5C,QAAQ,GAAA0C,aAAA,GAAEtB,GAAG,CAACpB,QAAQ,cAAA0C,aAAA,uBAAZA,aAAA,CAAcxC;MAC1B,CAAC,CAAC;IACJ,CAAC,SAAS;MACRL,OAAO,CAACgD,QAAQ,CAAC,CAAC;MAClB5D,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,KAAK,CAAC;MACpBM,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMqD,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,IAAIzD,YAAY,EAAE;QAChB;QACA,MAAMjB,GAAG,CAAC2E,kBAAkB,CAAC1D,YAAY,CAACS,GAAG,EAAEgD,EAAE,CAAC;MACpD;MACA,MAAM1E,GAAG,CAAC4E,UAAU,CAACF,EAAE,CAAC;MACxB,MAAMnD,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOwB,GAAG,EAAE;MAAA,IAAA8B,cAAA,EAAAC,mBAAA;MACZtD,OAAO,CAACwB,KAAK,CAAC,oBAAoB,EAAA6B,cAAA,GAAA9B,GAAG,CAACpB,QAAQ,cAAAkD,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAchD,IAAI,cAAAiD,mBAAA,uBAAlBA,mBAAA,CAAoBC,OAAO,KAAIhC,GAAG,CAACgC,OAAO,EAAE,CAAC;IACjF;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACrD,IAAI;MACF1D,OAAO,CAACC,GAAG,CAAC,sBAAsBwD,QAAQ,OAAOC,QAAQ,EAAE,CAAC;MAE5D,MAAMC,YAAY,GAAG1E,KAAK,CAAC2E,IAAI,CAC7BzC,IAAI,IAAKA,IAAI,CAACE,MAAM,KAAKoC,QAAQ,IAAItC,IAAI,CAACG,MAAM,KAAKoC,QAAQ,IACpDvC,IAAI,CAACE,MAAM,KAAKqC,QAAQ,IAAIvC,IAAI,CAACG,MAAM,KAAKmC,QACvD,CAAC;MACD,IAAIE,YAAY,EAAE;QAChB3D,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;QAC1D;MACF;MAEA,MAAME,QAAQ,GAAG,MAAM3B,GAAG,CAACqF,UAAU,CAAC;QAAExC,MAAM,EAAEoC,QAAQ;QAAEnC,MAAM,EAAEoC;MAAS,CAAC,CAAC;MAC7E1D,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,QAAQ,CAACE,IAAI,CAAC;MAC3C,MAAMN,YAAY,CAAC,CAAC;MACpBP,kBAAkB,CAAC,QAAQ,CAAC;IAC9B,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACZvB,OAAO,CAACwB,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;IAC5C;EACF,CAAC;EAED,MAAMuC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAMvF,GAAG,CAACwF,UAAU,CAACD,MAAM,CAAC;MAC5B,MAAMhE,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOwB,GAAG,EAAE;MAAA,IAAA0C,cAAA,EAAAC,mBAAA;MACZlE,OAAO,CAACwB,KAAK,CAAC,yBAAyB,EAAAyC,cAAA,GAAA1C,GAAG,CAACpB,QAAQ,cAAA8D,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc5D,IAAI,cAAA6D,mBAAA,uBAAlBA,mBAAA,CAAoBX,OAAO,KAAIhC,GAAG,CAACgC,OAAO,EAAE,CAAC;IACtF;EACF,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBvE,YAAY,CAAC,KAAK,CAAC;IACnB,IAAIP,UAAU,EAAE;MACdD,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAM8E,eAAe,GAAGA,CAAA,KAAM;IAC5BxE,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMyE,qBAAqB,GAAGA,CAAA,KAAM;IAClCjF,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;IACpBM,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAM0E,cAAc,GAAGA,CAAA,KAAM;IAC3BxE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMyE,kBAAkB,GAAG,MAAOC,WAAW,IAAK;IAChD,IAAI;MACF,MAAMrE,QAAQ,GAAG,MAAM3B,GAAG,CAACiG,UAAU,CAACD,WAAW,CAACtE,GAAG,EAAEsE,WAAW,CAAC;MACnE9E,eAAe,CAACS,QAAQ,CAACE,IAAI,CAAC;MAC9BP,gBAAgB,CAAC,KAAK,CAAC;IACzB,CAAC,CAAC,OAAOyB,GAAG,EAAE;MACZvB,OAAO,CAACwB,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAMmD,oBAAoB,GAAGA,CAAA,KAAM;IACjC5E,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM6E,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF5E,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE2E,MAAM,CAAC;MACjD,MAAMzE,QAAQ,GAAG,MAAM3B,GAAG,CAACqG,UAAU,CAACD,MAAM,CAAC;MAC7C5E,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEE,QAAQ,CAAC;MAEhD,IAAIA,QAAQ,CAAC2E,MAAM,KAAK,GAAG,IAAI3E,QAAQ,CAAC2E,MAAM,KAAK,GAAG,EAAE;QACtD9E,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxCP,eAAe,CAAC,IAAI,CAAC;QACrBI,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLE,OAAO,CAACwB,KAAK,CAAC,6BAA6B,EAAErB,QAAQ,CAAC2E,MAAM,CAAC;QAC7DC,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC,CAAC,OAAOxD,GAAG,EAAE;MAAA,IAAAyD,cAAA,EAAAC,mBAAA;MACZjF,OAAO,CAACwB,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;MAC5CwD,KAAK,CAAC,yBAAyB,IAAI,EAAAC,cAAA,GAAAzD,GAAG,CAACpB,QAAQ,cAAA6E,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc3E,IAAI,cAAA4E,mBAAA,uBAAlBA,mBAAA,CAAoB1B,OAAO,KAAIhC,GAAG,CAACgC,OAAO,CAAC,CAAC;IACjF;EACF,CAAC;EAED,IAAI,CAAC9D,YAAY,EAAE;IACjB,oBAAOf,OAAA,CAACJ,QAAQ;MAAC4G,YAAY,EAAEzD;IAAiB;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrD;EAEA,MAAMC,eAAe,GAAIpG,YAAY,IAAIQ,SAAS,IAAKN,UAAU;EACjE,MAAMmG,eAAe,GAAGrG,YAAY,IAAI,CAACQ,SAAS,IAAI,CAACN,UAAU;EAEjE,oBACEX,OAAA;IAAK+G,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhH,OAAA;MAAK+G,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBhH,OAAA;QAAQiH,OAAO,EAAEA,CAAA,KAAMjG,eAAe,CAAC,IAAI,CAAE;QAAC+F,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAEnE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5G,OAAA;QAAAgH,QAAA,EAAKjG,YAAY,CAACmG;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5B5G,OAAA;QAAQiH,OAAO,EAAErB,cAAe;QAACmB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAE3D;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN5G,OAAA;MAAK+G,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B7F,aAAa,gBACZnB,OAAA;QAAK+G,SAAS,EAAC,uBAAuB;QAAAC,QAAA,eACpChH,OAAA,CAACH,UAAU;UACTmD,IAAI,EAAEjC,YAAa;UACnBoG,MAAM,EAAEtB,kBAAmB;UAC3BuB,QAAQ,EAAEpB,oBAAqB;UAC/BqB,QAAQ,EAAEpB;QAAiB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAEN5G,OAAA,CAAAE,SAAA;QAAA8G,QAAA,gBACEhH,OAAA;UAAK+G,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BhH,OAAA,CAACP,KAAK;YACJY,KAAK,EAAEA,KAAM;YACbE,KAAK,EAAEA,KAAM;YACb+G,WAAW,EAAErE,eAAgB;YAC7BsE,iBAAiB,EAAErE,qBAAsB;YACzCsE,WAAW,EAAErE,gBAAiB;YAC9BsE,YAAY,EAAE3C,gBAAiB;YAC/B4C,YAAY,EAAEtC,gBAAiB;YAC/BvE,eAAe,EAAEA,eAAgB;YACjCC,kBAAkB,EAAEA,kBAAmB;YACvC6G,iBAAiB,EAAEhC;UAAsB;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5G,OAAA;UAAK+G,SAAS,EAAE,oBAAoBF,eAAe,IAAIC,eAAe,GAAG,SAAS,GAAG,EAAE,EAAG;UAAAE,QAAA,EACvFH,eAAe,gBACd7G,OAAA,CAACN,UAAU;YACTqC,IAAI,EAAEtB,YAAY,IAAI;cAAEmH,KAAK,EAAE,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEC,IAAI,EAAE;YAAG,CAAE;YAC3DX,MAAM,EAAE/D,UAAW;YACnBiE,QAAQ,EAAE5G,YAAY,GAAG,MAAM8D,YAAY,CAAC9D,YAAY,CAACe,GAAG,CAAC,GAAG,IAAK;YACrE4F,QAAQ,EAAE3B;UAAa;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,GACAE,eAAe,gBACjB9G,OAAA,CAACL,UAAU;YACToC,IAAI,EAAEtB,YAAa;YACnBsH,MAAM,EAAErC;UAAgB;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,GACA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA,eACN;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxG,EAAA,CAtSQD,GAAG;AAAA6H,EAAA,GAAH7H,GAAG;AAwSZ,eAAeA,GAAG;AAAC,IAAA6H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}