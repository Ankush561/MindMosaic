{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  getNodes: () => api.get('/nodes'),\n  getNode: id => api.get(`/nodes/${id}`),\n  createNode: node => api.post('/nodes', node),\n  updateNode: (id, node) => api.patch(`/nodes/${id}`, node),\n  deleteNode: id => api.delete(`/nodes/${id}`),\n  deleteEdges: nodeId => api.delete(`/edges?nodeId=${nodeId}`),\n  // Optional,\n  getEdges: () => api.get('/edges'),\n  createEdge: edge => api.post('/edges', edge)\n  // Add other API calls as needed\n};\napi.interceptors.request.use(config => {\n  console.log('Outgoing Request to:', {\n    method: config.method.toUpperCase(),\n    url: config.url,\n    data: config.data\n  });\n  return config;\n});\napi.interceptors.response.use(response => {\n  console.log('Incoming Response from:', {\n    status: response.status,\n    url: response.config.url,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$config, _error$response;\n  console.error('API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\n\n// api.interceptors.request.use(request => {\n//   console.log('Starting Request', request);\n//   return request;\n// });\n\n// api.interceptors.response.use(response => {\n//   console.log('Response:', response);\n//   return response;\n// }, error => {\n//   console.error('API Error:', error);\n//   return Promise.reject(error);\n// });\nconst handleSave = async nodeData => {\n  console.group('Saving Node');\n  try {\n    console.log('Payload:', nodeData);\n    const response = nodeData._id ? await api.updateNode(nodeData._id, nodeData) : await api.createNode(nodeData);\n    console.log('Save successful:', response.data);\n    await fetchData();\n    return true;\n  } catch (err) {\n    console.error('Save failed:', {\n      error: err,\n      config: err.config,\n      response: err.response\n    });\n    return false;\n  } finally {\n    console.groupEnd();\n    setSelectedNode(null);\n    setIsCreating(false);\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","getNodes","get","getNode","id","createNode","node","post","updateNode","patch","deleteNode","delete","deleteEdges","nodeId","getEdges","createEdge","edge","interceptors","request","use","config","console","log","method","toUpperCase","url","data","response","status","error","_error$config","_error$response","message","Promise","reject","handleSave","nodeData","group","_id","fetchData","err","groupEnd","setSelectedNode","setIsCreating"],"sources":["C:/Users/user/Desktop/Project/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default {\r\n  getNodes: () => api.get('/nodes'),\r\n  getNode: (id) => api.get(`/nodes/${id}`),\r\n  createNode: (node) => api.post('/nodes', node),\r\n  updateNode: (id, node) => api.patch(`/nodes/${id}`, node),\r\n  deleteNode: (id) => api.delete(`/nodes/${id}`),\r\n  deleteEdges: (nodeId) => api.delete(`/edges?nodeId=${nodeId}`), // Optional,\r\n  getEdges: () => api.get('/edges'),\r\n  createEdge: (edge) => api.post('/edges', edge),\r\n  // Add other API calls as needed\r\n};\r\napi.interceptors.request.use(config => {\r\n  console.log('Outgoing Request to:', {\r\n    method: config.method.toUpperCase(),\r\n    url: config.url,\r\n    data: config.data\r\n  });\r\n  return config;\r\n});\r\n\r\napi.interceptors.response.use(response => {\r\n  console.log('Incoming Response from:', {\r\n    status: response.status,\r\n    url: response.config.url,\r\n    data: response.data\r\n  });\r\n  return response;\r\n}, error => {\r\n  console.error('API Error:', {\r\n    url: error.config?.url,\r\n    status: error.response?.status,\r\n    message: error.message\r\n  });\r\n  return Promise.reject(error);\r\n});\r\n\r\n// api.interceptors.request.use(request => {\r\n//   console.log('Starting Request', request);\r\n//   return request;\r\n// });\r\n\r\n// api.interceptors.response.use(response => {\r\n//   console.log('Response:', response);\r\n//   return response;\r\n// }, error => {\r\n//   console.error('API Error:', error);\r\n//   return Promise.reject(error);\r\n// });\r\nconst handleSave = async (nodeData) => {\r\n  console.group('Saving Node');\r\n  try {\r\n    console.log('Payload:', nodeData);\r\n    const response = nodeData._id \r\n      ? await api.updateNode(nodeData._id, nodeData)\r\n      : await api.createNode(nodeData);\r\n    \r\n    console.log('Save successful:', response.data);\r\n    await fetchData();\r\n    return true;\r\n  } catch (err) {\r\n    console.error('Save failed:', {\r\n      error: err,\r\n      config: err.config,\r\n      response: err.response\r\n    });\r\n    return false;\r\n  } finally {\r\n    console.groupEnd();\r\n    setSelectedNode(null);\r\n    setIsCreating(false);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}