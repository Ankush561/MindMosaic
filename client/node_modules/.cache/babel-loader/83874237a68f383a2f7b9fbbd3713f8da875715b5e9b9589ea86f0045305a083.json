{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mind Mosaic\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Graph from './components/graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport NodeViewer from './components/NodeViewer.js';\nimport FileList from './components/FileList.js';\nimport FileEditor from './components/FileEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport PencilIcon from './components/icons/PencilIcon.js';\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\nimport logo from './assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [interactionMode, setInteractionMode] = useState('select');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingFile, setIsEditingFile] = useState(false);\n  const [animatedEdgeId, setAnimatedEdgeId] = useState(null);\n\n  // Determine if any panel that affects graph layout is visible\n  const isAnyPanelVisible = selectedNode && isEditing || selectedNode && !isEditing && !isCreating || isEditingFile;\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData();\n    } else {\n      setNodes([]);\n      setEdges([]);\n    }\n  }, [selectedFile]);\n  const loadFileData = async () => {\n    setNodes([]);\n    setEdges([]);\n    try {\n      const response = await api.getFile(selectedFile._id);\n      if (!response.data.nodes) {\n        setNodes([]);\n        setEdges([]);\n        return;\n      }\n      const nodesWithPositions = response.data.nodes.map(node => {\n        if (!node.position || node.position.x === null && node.position.y === null) {\n          return {\n            ...node,\n            position: {\n              x: Math.random() * 600 + 100,\n              y: Math.random() * 400 + 100\n            }\n          };\n        }\n        return node;\n      });\n      setNodes(nodesWithPositions);\n      const edgesResponse = await api.getEdges();\n      const relevantEdges = edgesResponse.data.filter(edge => response.data.nodes.some(node => node._id === edge.source) && response.data.nodes.some(node => node._id === edge.target));\n      setEdges(relevantEdges);\n    } catch (err) {\n      console.error('Error loading file data:', err);\n    }\n  };\n  const handleFileSelect = file => {\n    setSelectedFile(file);\n  };\n  const handleNodeClick = node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(false);\n      setIsCreating(false);\n    }\n  };\n  const handleNodeDoubleClick = node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(true);\n      setIsCreating(false);\n    }\n  };\n  const handleCreateNode = async () => {\n    setSelectedNode(null);\n    setIsCreating(true);\n    setIsEditing(true);\n  };\n  const handleSave = async nodeData => {\n    try {\n      if (!nodeData._id) {\n        let avgX = 300,\n          avgY = 300;\n        if (nodes.length > 0) {\n          avgX = nodes.reduce((sum, n) => {\n            var _n$position;\n            return sum + (((_n$position = n.position) === null || _n$position === void 0 ? void 0 : _n$position.x) || 300);\n          }, 0) / nodes.length;\n          avgY = nodes.reduce((sum, n) => {\n            var _n$position2;\n            return sum + (((_n$position2 = n.position) === null || _n$position2 === void 0 ? void 0 : _n$position2.y) || 300);\n          }, 0) / nodes.length;\n        }\n        nodeData.position = {\n          x: avgX + (Math.random() - 0.5) * 50,\n          y: avgY + (Math.random() - 0.5) * 50\n        };\n      }\n      const response = nodeData._id ? await api.updateNode(nodeData._id, nodeData) : await api.createNode(nodeData);\n      if (!nodeData._id && selectedFile) {\n        await api.addNodeToFile(selectedFile._id, response.data._id);\n      }\n      await loadFileData();\n    } catch (err) {\n      console.error('Save failed:', err);\n    } finally {\n      setSelectedNode(null);\n      setIsCreating(false);\n      setIsEditing(false);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      if (selectedFile) {\n        await api.removeNodeFromFile(selectedFile._id, id);\n      }\n      await api.deleteNode(id);\n      await loadFileData();\n\n      // If the deleted node was the selected one, clear selectedNode\n      if (selectedNode && selectedNode._id === id) {\n        setSelectedNode(null);\n        setIsEditing(false); // Also reset editing mode\n        // isCreating should already be false if we are deleting an existing node\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(`Deletion failed: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n    }\n  };\n  const handleCreateEdge = async (sourceId, targetId) => {\n    try {\n      const existingEdge = edges.find(edge => edge.source === sourceId && edge.target === targetId || edge.source === targetId && edge.target === sourceId);\n      if (existingEdge) return;\n      const newEdgeResponse = await api.createEdge({\n        source: sourceId,\n        target: targetId\n      });\n      if (newEdgeResponse && newEdgeResponse.data && newEdgeResponse.data._id) {\n        setAnimatedEdgeId(newEdgeResponse.data._id);\n      }\n      await loadFileData();\n      setInteractionMode('select');\n    } catch (err) {\n      console.error('Edge creation error:', err);\n    }\n  };\n  const handleDeleteEdge = async edgeId => {\n    try {\n      await api.deleteEdge(edgeId);\n      await loadFileData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(`Edge deletion failed: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message}`);\n    }\n  };\n  const handleEdgeAnimationEnd = edgeId => {\n    setAnimatedEdgeId(null);\n    console.log(\"Edge animation ended for:\", edgeId);\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (isCreating) {\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n  const handleStartEdit = () => setIsEditing(true);\n  const handleBackgroundClick = () => {\n    setSelectedNode(null);\n    setIsCreating(false);\n    setIsEditing(false);\n  };\n  const handleEditFile = () => setIsEditingFile(true);\n  const handleFileEditSave = async updatedFile => {\n    try {\n      const response = await api.updateFile(updatedFile._id, {\n        name: updatedFile.name,\n        description: updatedFile.description\n      });\n      if (response.status === 200) {\n        setSelectedFile(response.data);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to update file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      alert('Failed to update file: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const handleFileEditCancel = () => setIsEditingFile(false);\n  const handleFileDelete = async fileId => {\n    try {\n      const response = await api.deleteFile(fileId);\n      if (response.status === 200 || response.status === 204) {\n        setSelectedFile(null);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to delete file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      alert('Failed to delete file: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  const isEditorVisible = selectedNode && isEditing || isCreating;\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${selectedFile ? 'graph-view-active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-title-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Mind Mosaic Logo\",\n        className: \"project-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), !selectedFile ? /*#__PURE__*/_jsxDEV(FileList, {\n      onFileSelect: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedFile(null),\n          className: \"back-btn\",\n          children: [/*#__PURE__*/_jsxDEV(BackArrowIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), \"Back to Files\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditFile,\n          className: \"edit-file-btn\",\n          children: [/*#__PURE__*/_jsxDEV(PencilIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), \"Edit File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: isEditingFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-editor-container\",\n          children: /*#__PURE__*/_jsxDEV(FileEditor, {\n            file: selectedFile,\n            onSave: handleFileEditSave,\n            onCancel: handleFileEditCancel,\n            onDelete: handleFileDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph-container\",\n            children: /*#__PURE__*/_jsxDEV(Graph, {\n              nodes: nodes,\n              edges: edges,\n              onNodeClick: handleNodeClick,\n              onNodeDoubleClick: handleNodeDoubleClick,\n              onCreateNew: handleCreateNode,\n              onCreateEdge: handleCreateEdge,\n              onDeleteEdge: handleDeleteEdge,\n              interactionMode: interactionMode,\n              setInteractionMode: setInteractionMode,\n              onBackgroundClick: handleBackgroundClick,\n              isAnyPanelVisible: isAnyPanelVisible,\n              newlyCreatedEdgeId: animatedEdgeId,\n              onEdgeAnimationComplete: handleEdgeAnimationEnd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`,\n            children: isEditorVisible ? /*#__PURE__*/_jsxDEV(NodeEditor, {\n              node: selectedNode || {\n                title: '',\n                content: '',\n                tags: []\n              },\n              onSave: handleSave,\n              onDelete: selectedNode ? () => handleDelete(selectedNode._id) : null,\n              onCancel: handleCancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this) : isViewerVisible ? /*#__PURE__*/_jsxDEV(NodeViewer, {\n              node: selectedNode,\n              onEdit: handleStartEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Evh/sIqGFQEEqZ062QAtSPbj7+g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Graph","NodeEditor","NodeViewer","FileList","FileEditor","api","PencilIcon","BackArrowIcon","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","isCreating","setIsCreating","interactionMode","setInteractionMode","selectedFile","setSelectedFile","isEditing","setIsEditing","isEditingFile","setIsEditingFile","animatedEdgeId","setAnimatedEdgeId","isAnyPanelVisible","loadFileData","response","getFile","_id","data","nodesWithPositions","map","node","position","x","y","Math","random","edgesResponse","getEdges","relevantEdges","filter","edge","some","source","target","err","console","error","handleFileSelect","file","handleNodeClick","handleNodeDoubleClick","handleCreateNode","handleSave","nodeData","avgX","avgY","length","reduce","sum","n","_n$position","_n$position2","updateNode","createNode","addNodeToFile","handleDelete","id","removeNodeFromFile","deleteNode","_err$response","_err$response$data","message","handleCreateEdge","sourceId","targetId","existingEdge","find","newEdgeResponse","createEdge","handleDeleteEdge","edgeId","deleteEdge","_err$response2","_err$response2$data","handleEdgeAnimationEnd","log","handleCancel","handleStartEdit","handleBackgroundClick","handleEditFile","handleFileEditSave","updatedFile","updateFile","name","description","status","alert","_err$response3","_err$response3$data","handleFileEditCancel","handleFileDelete","fileId","deleteFile","_err$response4","_err$response4$data","isEditorVisible","isViewerVisible","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","onClick","style","width","height","marginRight","onSave","onCancel","onDelete","onNodeClick","onNodeDoubleClick","onCreateNew","onCreateEdge","onDeleteEdge","onBackgroundClick","newlyCreatedEdgeId","onEdgeAnimationComplete","title","content","tags","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mind Mosaic/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Graph from './components/graph.js';\r\nimport NodeEditor from './components/NodeEditor.js';\r\nimport NodeViewer from './components/NodeViewer.js';\r\nimport FileList from './components/FileList.js';\r\nimport FileEditor from './components/FileEditor.js';\r\nimport api from './services/api.js';\r\nimport './App.css';\r\nimport PencilIcon from './components/icons/PencilIcon.js';\r\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\r\nimport logo from './assets/logo.png';\r\n\r\nfunction App() {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [interactionMode, setInteractionMode] = useState('select');\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isEditingFile, setIsEditingFile] = useState(false);\r\n  const [animatedEdgeId, setAnimatedEdgeId] = useState(null);\r\n\r\n  // Determine if any panel that affects graph layout is visible\r\n  const isAnyPanelVisible = (selectedNode && isEditing) || (selectedNode && !isEditing && !isCreating) || isEditingFile;\r\n\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      loadFileData();\r\n    } else {\r\n      setNodes([]);\r\n      setEdges([]);\r\n    }\r\n  }, [selectedFile]);\r\n\r\n  const loadFileData = async () => {\r\n    setNodes([]);\r\n    setEdges([]);\r\n    try {\r\n      const response = await api.getFile(selectedFile._id);\r\n      if (!response.data.nodes) {\r\n        setNodes([]);\r\n        setEdges([]);\r\n        return;\r\n      }\r\n      const nodesWithPositions = response.data.nodes.map(node => {\r\n        if (!node.position || (node.position.x === null && node.position.y === null)) {\r\n          return {\r\n            ...node,\r\n            position: {\r\n              x: Math.random() * 600 + 100,\r\n              y: Math.random() * 400 + 100\r\n            }\r\n          };\r\n        }\r\n        return node;\r\n      });\r\n      setNodes(nodesWithPositions);\r\n      const edgesResponse = await api.getEdges();\r\n      const relevantEdges = edgesResponse.data.filter(edge =>\r\n        response.data.nodes.some(node => node._id === edge.source) &&\r\n        response.data.nodes.some(node => node._id === edge.target)\r\n      );\r\n      setEdges(relevantEdges);\r\n    } catch (err) {\r\n      console.error('Error loading file data:', err);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (file) => {\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleNodeClick = (node) => {\r\n    if (interactionMode !== 'connect') {\r\n      setSelectedNode(node);\r\n      setIsEditing(false);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleNodeDoubleClick = (node) => {\r\n    if (interactionMode !== 'connect') {\r\n      setSelectedNode(node);\r\n      setIsEditing(true);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateNode = async () => {\r\n    setSelectedNode(null);\r\n    setIsCreating(true);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = async (nodeData) => {\r\n    try {\r\n      if (!nodeData._id) {\r\n        let avgX = 300, avgY = 300;\r\n        if (nodes.length > 0) {\r\n          avgX = nodes.reduce((sum, n) => sum + (n.position?.x || 300), 0) / nodes.length;\r\n          avgY = nodes.reduce((sum, n) => sum + (n.position?.y || 300), 0) / nodes.length;\r\n        }\r\n        nodeData.position = { x: avgX + (Math.random() - 0.5) * 50, y: avgY + (Math.random() - 0.5) * 50 };\r\n      }\r\n      const response = nodeData._id ? await api.updateNode(nodeData._id, nodeData) : await api.createNode(nodeData);\r\n      if (!nodeData._id && selectedFile) {\r\n        await api.addNodeToFile(selectedFile._id, response.data._id);\r\n      }\r\n      await loadFileData();\r\n    } catch (err) {\r\n      console.error('Save failed:', err);\r\n    } finally {\r\n      setSelectedNode(null);\r\n      setIsCreating(false);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      if (selectedFile) {\r\n        await api.removeNodeFromFile(selectedFile._id, id);\r\n      }\r\n      await api.deleteNode(id);\r\n      await loadFileData();\r\n\r\n      // If the deleted node was the selected one, clear selectedNode\r\n      if (selectedNode && selectedNode._id === id) {\r\n        setSelectedNode(null);\r\n        setIsEditing(false); // Also reset editing mode\r\n        // isCreating should already be false if we are deleting an existing node\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error(`Deletion failed: ${err.response?.data?.message || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCreateEdge = async (sourceId, targetId) => {\r\n    try {\r\n      const existingEdge = edges.find(edge => (edge.source === sourceId && edge.target === targetId) || (edge.source === targetId && edge.target === sourceId));\r\n      if (existingEdge) return;\r\n      const newEdgeResponse = await api.createEdge({ source: sourceId, target: targetId });\r\n      if (newEdgeResponse && newEdgeResponse.data && newEdgeResponse.data._id) {\r\n        setAnimatedEdgeId(newEdgeResponse.data._id);\r\n      }\r\n      await loadFileData();\r\n      setInteractionMode('select');\r\n    } catch (err) {\r\n      console.error('Edge creation error:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteEdge = async (edgeId) => {\r\n    try {\r\n      await api.deleteEdge(edgeId);\r\n      await loadFileData();\r\n    } catch (err) {\r\n      console.error(`Edge deletion failed: ${err.response?.data?.message || err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleEdgeAnimationEnd = (edgeId) => {\r\n    setAnimatedEdgeId(null);\r\n    console.log(\"Edge animation ended for:\", edgeId);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    if (isCreating) {\r\n      setSelectedNode(null);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  const handleStartEdit = () => setIsEditing(true);\r\n  const handleBackgroundClick = () => {\r\n    setSelectedNode(null);\r\n    setIsCreating(false);\r\n    setIsEditing(false);\r\n  };\r\n  const handleEditFile = () => setIsEditingFile(true);\r\n  const handleFileEditSave = async (updatedFile) => {\r\n    try {\r\n      const response = await api.updateFile(updatedFile._id, { name: updatedFile.name, description: updatedFile.description });\r\n      if (response.status === 200) {\r\n        setSelectedFile(response.data);\r\n        setIsEditingFile(false);\r\n      } else {\r\n        alert('Failed to update file. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      alert('Failed to update file: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n  const handleFileEditCancel = () => setIsEditingFile(false);\r\n  const handleFileDelete = async (fileId) => {\r\n    try {\r\n      const response = await api.deleteFile(fileId);\r\n      if (response.status === 200 || response.status === 204) {\r\n        setSelectedFile(null);\r\n        setIsEditingFile(false);\r\n      } else {\r\n        alert('Failed to delete file. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      alert('Failed to delete file: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const isEditorVisible = (selectedNode && isEditing) || isCreating;\r\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\r\n\r\n  return (\r\n    <div className={`app-container ${selectedFile ? 'graph-view-active' : ''}`}>\r\n      <div className=\"project-title-header\">\r\n        <img src={logo} alt=\"Mind Mosaic Logo\" className=\"project-logo\" />\r\n      </div>\r\n\r\n      {!selectedFile ? (\r\n        <FileList onFileSelect={handleFileSelect} />\r\n      ) : (\r\n        <>\r\n          <div className=\"header\">\r\n            <button onClick={() => setSelectedFile(null)} className=\"back-btn\">\r\n              <BackArrowIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\r\n              Back to Files\r\n            </button>\r\n            <h2>{selectedFile.name}</h2>\r\n            <button onClick={handleEditFile} className=\"edit-file-btn\">\r\n              <PencilIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\r\n              Edit File\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"main-content\">\r\n            {isEditingFile ? (\r\n              <div className=\"file-editor-container\">\r\n                <FileEditor\r\n                  file={selectedFile}\r\n                  onSave={handleFileEditSave}\r\n                  onCancel={handleFileEditCancel}\r\n                  onDelete={handleFileDelete}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"graph-container\">\r\n                  <Graph\r\n                    nodes={nodes}\r\n                    edges={edges}\r\n                    onNodeClick={handleNodeClick}\r\n                    onNodeDoubleClick={handleNodeDoubleClick}\r\n                    onCreateNew={handleCreateNode}\r\n                    onCreateEdge={handleCreateEdge}\r\n                    onDeleteEdge={handleDeleteEdge}\r\n                    interactionMode={interactionMode}\r\n                    setInteractionMode={setInteractionMode}\r\n                    onBackgroundClick={handleBackgroundClick}\r\n                    isAnyPanelVisible={isAnyPanelVisible}\r\n                    newlyCreatedEdgeId={animatedEdgeId}\r\n                    onEdgeAnimationComplete={handleEdgeAnimationEnd}\r\n                  />\r\n                </div>\r\n                <div className={`editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`}>\r\n                  {isEditorVisible ? (\r\n                    <NodeEditor\r\n                      node={selectedNode || { title: '', content: '', tags: [] }}\r\n                      onSave={handleSave}\r\n                      onDelete={selectedNode ? () => handleDelete(selectedNode._id) : null}\r\n                      onCancel={handleCancel}\r\n                    />\r\n                  ) : isViewerVisible ? (\r\n                    <NodeViewer\r\n                      node={selectedNode}\r\n                      onEdit={handleStartEdit}\r\n                    />\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}