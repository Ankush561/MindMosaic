{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projects\\\\Mind Mosaic\\\\client\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport './Graph.css';\nimport PlusIcon from './icons/PlusIcon';\nimport LinkIcon from './icons/LinkIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  nodes = [],\n  edges = [],\n  onNodeClick,\n  onNodeDoubleClick,\n  onCreateNew,\n  onCreateEdge,\n  onDeleteEdge,\n  interactionMode = 'select',\n  setInteractionMode,\n  onBackgroundClick\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [selectedEdge, setSelectedEdge] = useState(null);\n  const linkingState = useRef({\n    sourceNode: null,\n    tempLink: null,\n    isLinking: false\n  });\n  const simulationRef = useRef();\n  const graphDimensionsRef = useRef({\n    width: 600,\n    height: 400\n  });\n  const stableViewBoxDimensionsRef = useRef({\n    width: 600,\n    height: 400\n  });\n\n  // Connect button component\n  const ConnectButton = ({\n    interactionMode,\n    setInteractionMode,\n    linkingState,\n    svgRef\n  }) => {\n    const handleClick = () => {\n      const newMode = interactionMode === 'connect' ? 'select' : 'connect';\n      setInteractionMode(newMode); // Changed from setMode to setInteractionMode\n      if (newMode === 'select') {\n        d3.select(svgRef.current).selectAll('.temp-link').remove();\n        linkingState.current = {\n          sourceNode: null,\n          tempLink: null,\n          isLinking: false\n        };\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: `button accent ${interactionMode === 'connect' ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(LinkIcon, {\n        style: {\n          width: '1rem',\n          height: '1rem',\n          marginRight: '0.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), mode === 'connect' ? 'Stop Connecting' : 'Connect Nodes']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Drag behavior\n  const dragBehavior = useCallback((sim, svgInstance, containerWidth, containerHeight) => {\n    return d3.drag().on('start', function (event, d) {\n      if (interactionMode !== 'select') return;\n      if (!event.active) sim.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }).on('drag', function (event, d) {\n      if (interactionMode !== 'select') return;\n      d.fx = event.x;\n      d.fy = event.y;\n    }).on('end', function (event, d) {\n      if (interactionMode !== 'select') return;\n      if (!event.active) sim.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    });\n  }, [interactionMode]);\n\n  // Handle node click\n  const handleNodeClick = useCallback((event, d) => {\n    if (event.defaultPrevented) return;\n    if (interactionMode === 'select' && onNodeClick) {\n      onNodeClick(d);\n    }\n  }, [interactionMode, onNodeClick]);\n\n  // Handle node double click\n  const handleNodeDoubleClick = useCallback((event, d) => {\n    if (event.defaultPrevented) return;\n    if (interactionMode === 'select' && onNodeDoubleClick) {\n      onNodeDoubleClick(d);\n    }\n  }, [interactionMode, onNodeDoubleClick]);\n\n  // Handle edge click\n  const handleEdgeClick = useCallback((event, d) => {\n    event.stopPropagation();\n    if (interactionMode === 'select') {\n      d3.selectAll('.link').classed('selected', false);\n      d3.select(event.currentTarget).classed('selected', true);\n      setSelectedEdge(d);\n    }\n  }, [interactionMode]);\n\n  // Handle background click\n  const handleBackgroundClick = useCallback(event => {\n    if (event.target.classList.contains('background')) {\n      d3.selectAll('.link').classed('selected', false);\n      setSelectedEdge(null);\n      if (onBackgroundClick) {\n        onBackgroundClick();\n      }\n    }\n  }, [onBackgroundClick]);\n\n  // Main effect for D3 rendering and updates\n  useEffect(() => {\n    const currentSvg = svgRef.current;\n    if (!currentSvg) return;\n    const initialWidth = graphDimensionsRef.current.width;\n    const initialHeight = graphDimensionsRef.current.height;\n    if (!simulationRef.current) {\n      simulationRef.current = d3.forceSimulation(nodes).force('link', d3.forceLink(edges).id(d => d._id).distance(150)).force('charge', d3.forceManyBody().strength(-500)).force('center', d3.forceCenter(initialWidth / 2, initialHeight / 2));\n    } else {\n      simulationRef.current.nodes(nodes).force('link', d3.forceLink(edges).id(d => d._id).distance(150));\n    }\n    simulationRef.current.alpha(0.3).restart();\n    const svg = d3.select(currentSvg);\n    const simulation = simulationRef.current;\n    if (!simulation) return;\n    svg.on('click', handleBackgroundClick);\n    let linkGroup = svg.select('g.links-group');\n    if (linkGroup.empty()) {\n      linkGroup = svg.append('g').attr('class', 'links-group');\n    }\n    let nodeGroup = svg.select('g.nodes-group');\n    if (nodeGroup.empty()) {\n      nodeGroup = svg.append('g').attr('class', 'nodes-group');\n    }\n    let defs = svg.select('defs');\n    if (defs.empty()) {\n      defs = svg.append('defs');\n    }\n    if (defs.select('#arrow').empty()) {\n      defs.append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 20).attr(\"refY\", 0).attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"fill\", \"#A8C3A4\");\n    }\n    const liveContainerWidth = currentSvg.clientWidth;\n    const liveContainerHeight = currentSvg.clientHeight;\n    graphDimensionsRef.current = {\n      width: liveContainerWidth,\n      height: liveContainerHeight\n    };\n    if (stableViewBoxDimensionsRef.current.width === 0 && liveContainerWidth > 0) {\n      stableViewBoxDimensionsRef.current.width = liveContainerWidth;\n    }\n    if (stableViewBoxDimensionsRef.current.height === 0 && liveContainerHeight > 0) {\n      stableViewBoxDimensionsRef.current.height = liveContainerHeight;\n    }\n    const viewBoxWidth = stableViewBoxDimensionsRef.current.width > 0 ? stableViewBoxDimensionsRef.current.width : liveContainerWidth;\n    const viewBoxHeight = stableViewBoxDimensionsRef.current.height > 0 ? stableViewBoxDimensionsRef.current.height : liveContainerHeight;\n    svg.attr('viewBox', [0, 0, viewBoxWidth, viewBoxHeight]).attr('preserveAspectRatio', 'xMidYMid meet');\n    nodes.forEach(node => {\n      const hasValidPositionProp = node.position && typeof node.position.x === 'number' && typeof node.position.y === 'number';\n      if (hasValidPositionProp) {\n        node.x = node.position.x;\n        node.y = node.position.y;\n        node.fx = node.position.x;\n        node.fy = node.position.y;\n      } else {\n        node.x = typeof node.x === 'number' ? node.x : Math.random() * (liveContainerWidth - 100) + 50;\n        node.y = typeof node.y === 'number' ? node.y : Math.random() * (liveContainerHeight - 100) + 50;\n        node.fx = null;\n        node.fy = null;\n        node.position = {\n          x: node.x,\n          y: node.y\n        };\n      }\n    });\n\n    // Initialize drag behavior\n    const drag = dragBehavior(simulationRef.current, currentSvg, viewBoxWidth, viewBoxHeight);\n    const nodeMap = {};\n    nodes.forEach(node => {\n      if (node && node._id) {\n        nodeMap[node._id] = node;\n      }\n    });\n    const validEdges = edges.filter(edge => edge && edge.source && edge.target && nodeMap[edge.source] && nodeMap[edge.target]);\n    const processedEdges = validEdges.map(edge => ({\n      id: edge._id,\n      source: nodeMap[edge.source],\n      target: nodeMap[edge.target],\n      type: edge.type || 'related',\n      _id: edge._id\n    }));\n    simulationRef.current.force('link', d3.forceLink(processedEdges).id(d => d._id)).force('charge', d3.forceManyBody().strength(-500)).force('center', d3.forceCenter(viewBoxWidth / 2, viewBoxHeight / 2)).force('collision', d3.forceCollide().radius(40));\n    simulationRef.current.alpha(0.3).restart();\n    const link = linkGroup.selectAll('line').data(processedEdges);\n    link.exit().remove();\n    const linkEnter = link.enter().append('path').attr('class', 'link').attr('stroke', '#A8C3A4').attr('stroke-width', 2).attr('marker-end', 'url(#arrow)');\n    linkEnter.merge(link).attr('d', d => `M${d.source.x},${d.source.y}L${d.target.x},${d.target.y}`).on('click', handleEdgeClick);\n    const node = nodeGroup.selectAll('.node').data(nodes, d => d._id);\n    node.exit().remove();\n    const nodeEnter = node.enter().append('g').attr('class', 'node').call(dragBehavior(simulationRef.current, currentSvg, viewBoxWidth, viewBoxHeight));\n    nodeEnter.append('circle').attr('r', 20).attr('fill', '#1B5E20').attr('stroke', '#1B5E20').attr('stroke-width', 1.5);\n    nodeEnter.append('text').attr('dx', 25).attr('dy', 4).text(d => d.title || d._id).style('font-size', '12px').style('fill', 'white');\n    nodeEnter.merge(node).attr('transform', d => `translate(${d.x},${d.y})`).on('click', handleNodeClick).on('dblclick', handleNodeDoubleClick);\n    simulationRef.current.on('tick', () => {\n      link.attr('d', d => `M${d.source.x},${d.source.y}L${d.target.x},${d.target.y}`);\n      node.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n    return () => {\n      simulationRef.current.stop();\n    };\n  }, [nodes, edges, interactionMode, onNodeClick, onNodeDoubleClick, onBackgroundClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    style: {\n      width: '100%',\n      height: '100%',\n      padding: '1rem',\n      boxSizing: 'border-box',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      className: \"graph\",\n      style: {\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'all'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"marker\", {\n          id: \"arrow\",\n          markerWidth: \"10\",\n          markerHeight: \"10\",\n          refX: \"5\",\n          refY: \"5\",\n          orient: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M0,0 L0,10 L10,5 z\",\n            fill: \"#A8C3A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"links-group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"nodes-group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      style: {\n        position: 'absolute',\n        bottom: '1rem',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        display: 'flex',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCreateNew,\n        className: \"button primary\",\n        children: [/*#__PURE__*/_jsxDEV(PlusIcon, {\n          style: {\n            width: '1rem',\n            height: '1rem',\n            marginRight: '0.5rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), \"Create New Node\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n        interactionMode: interactionMode,\n        setInteractionMode: setInteractionMode,\n        linkingState: linkingState,\n        svgRef: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"3q65VYasPhC9IBy5thZVg5NavXo=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","d3","PlusIcon","LinkIcon","jsxDEV","_jsxDEV","Graph","nodes","edges","onNodeClick","onNodeDoubleClick","onCreateNew","onCreateEdge","onDeleteEdge","interactionMode","setInteractionMode","onBackgroundClick","_s","svgRef","selectedEdge","setSelectedEdge","linkingState","sourceNode","tempLink","isLinking","simulationRef","graphDimensionsRef","width","height","stableViewBoxDimensionsRef","ConnectButton","handleClick","newMode","select","current","selectAll","remove","onClick","className","children","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","mode","dragBehavior","sim","svgInstance","containerWidth","containerHeight","drag","on","event","d","active","alphaTarget","restart","fx","x","fy","y","handleNodeClick","defaultPrevented","handleNodeDoubleClick","handleEdgeClick","stopPropagation","classed","currentTarget","handleBackgroundClick","target","classList","contains","currentSvg","initialWidth","initialHeight","forceSimulation","force","forceLink","id","_id","distance","forceManyBody","strength","forceCenter","alpha","svg","simulation","linkGroup","empty","append","attr","nodeGroup","defs","liveContainerWidth","clientWidth","liveContainerHeight","clientHeight","viewBoxWidth","viewBoxHeight","forEach","node","hasValidPositionProp","position","Math","random","nodeMap","validEdges","filter","edge","source","processedEdges","map","type","forceCollide","radius","link","data","exit","linkEnter","enter","merge","nodeEnter","call","text","title","stop","padding","boxSizing","ref","pointerEvents","markerWidth","markerHeight","refX","refY","orient","fill","bottom","left","transform","display","gap","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Projects/Mind Mosaic/client/src/components/Graph.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport * as d3 from 'd3';\nimport './Graph.css';\nimport PlusIcon from './icons/PlusIcon';\nimport LinkIcon from './icons/LinkIcon';\n\nconst Graph = ({ \n  nodes = [], \n  edges = [], \n  onNodeClick, \n  onNodeDoubleClick, \n  onCreateNew, \n  onCreateEdge, \n  onDeleteEdge, \n  interactionMode = 'select', \n  setInteractionMode, \n  onBackgroundClick\n}) => {\n  const svgRef = useRef(null);\n  const [selectedEdge, setSelectedEdge] = useState(null);\n  const linkingState = useRef({ \n    sourceNode: null, \n    tempLink: null, \n    isLinking: false \n  });\n  const simulationRef = useRef();\n  const graphDimensionsRef = useRef({ width: 600, height: 400 });\n  const stableViewBoxDimensionsRef = useRef({ width: 600, height: 400 });\n\n  // Connect button component\n  const ConnectButton = ({ interactionMode, setInteractionMode, linkingState, svgRef }) => {\n  const handleClick = () => {\n    const newMode = interactionMode === 'connect' ? 'select' : 'connect';\n    setInteractionMode(newMode);  // Changed from setMode to setInteractionMode\n    if (newMode === 'select') {\n      d3.select(svgRef.current).selectAll('.temp-link').remove();\n      linkingState.current = { sourceNode: null, tempLink: null, isLinking: false };\n    }\n  };\n\n    return (\n      <button\n        onClick={handleClick}\n        className={`button accent ${interactionMode === 'connect' ? 'active' : ''}`}\n      >\n        <LinkIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\n        {mode === 'connect' ? 'Stop Connecting' : 'Connect Nodes'}\n      </button>\n    );\n  };\n\n  // Drag behavior\n  const dragBehavior = useCallback((sim, svgInstance, containerWidth, containerHeight) => {\n    return d3.drag()\n      .on('start', function (event, d) {\n        if (interactionMode !== 'select') return;\n        if (!event.active) sim.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      })\n      .on('drag', function (event, d) {\n        if (interactionMode !== 'select') return;\n        d.fx = event.x;\n        d.fy = event.y;\n      })\n      .on('end', function (event, d) {\n        if (interactionMode !== 'select') return;\n        if (!event.active) sim.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      });\n  }, [interactionMode]);\n\n  // Handle node click\n  const handleNodeClick = useCallback((event, d) => {\n    if (event.defaultPrevented) return;\n    if (interactionMode === 'select' && onNodeClick) {\n      onNodeClick(d);\n    }\n  }, [interactionMode, onNodeClick]);\n\n  // Handle node double click\n  const handleNodeDoubleClick = useCallback((event, d) => {\n    if (event.defaultPrevented) return;\n    if (interactionMode === 'select' && onNodeDoubleClick) {\n      onNodeDoubleClick(d);\n    }\n  }, [interactionMode, onNodeDoubleClick]);\n\n  // Handle edge click\n  const handleEdgeClick = useCallback((event, d) => {\n    event.stopPropagation();\n    if (interactionMode === 'select') {\n      d3.selectAll('.link').classed('selected', false);\n      d3.select(event.currentTarget).classed('selected', true);\n      setSelectedEdge(d);\n    }\n  }, [interactionMode]);\n\n  // Handle background click\n  const handleBackgroundClick = useCallback((event) => {\n    if (event.target.classList.contains('background')) {\n      d3.selectAll('.link').classed('selected', false);\n      setSelectedEdge(null);\n      if (onBackgroundClick) {\n        onBackgroundClick();\n      }\n    }\n  }, [onBackgroundClick]);\n\n  // Main effect for D3 rendering and updates\n  useEffect(() => {\n    const currentSvg = svgRef.current;\n    if (!currentSvg) return;\n\n    const initialWidth = graphDimensionsRef.current.width;\n    const initialHeight = graphDimensionsRef.current.height;\n\n    if (!simulationRef.current) {\n      simulationRef.current = d3.forceSimulation(nodes)\n        .force('link', d3.forceLink(edges).id(d => d._id).distance(150))\n        .force('charge', d3.forceManyBody().strength(-500))\n        .force('center', d3.forceCenter(initialWidth / 2, initialHeight / 2));\n    } else {\n      simulationRef.current\n        .nodes(nodes)\n        .force('link', d3.forceLink(edges).id(d => d._id).distance(150));\n    }\n\n    simulationRef.current.alpha(0.3).restart();\n\n    const svg = d3.select(currentSvg);\n    const simulation = simulationRef.current;\n\n    if (!simulation) return;\n\n    svg.on('click', handleBackgroundClick);\n\n    let linkGroup = svg.select('g.links-group');\n    if (linkGroup.empty()) {\n      linkGroup = svg.append('g').attr('class', 'links-group');\n    }\n\n    let nodeGroup = svg.select('g.nodes-group');\n    if (nodeGroup.empty()) {\n      nodeGroup = svg.append('g').attr('class', 'nodes-group');\n    }\n\n    let defs = svg.select('defs');\n    if (defs.empty()) {\n      defs = svg.append('defs');\n    }\n    if (defs.select('#arrow').empty()) {\n      defs.append(\"marker\")\n        .attr(\"id\", \"arrow\")\n        .attr(\"viewBox\", \"0 -5 10 10\")\n        .attr(\"refX\", 20)\n        .attr(\"refY\", 0)\n        .attr(\"markerWidth\", 6)\n        .attr(\"markerHeight\", 6)\n        .attr(\"orient\", \"auto\")\n        .append(\"path\")\n        .attr(\"d\", \"M0,-5L10,0L0,5\")\n        .attr(\"fill\", \"#A8C3A4\");\n    }\n\n    const liveContainerWidth = currentSvg.clientWidth;\n    const liveContainerHeight = currentSvg.clientHeight;\n    graphDimensionsRef.current = { width: liveContainerWidth, height: liveContainerHeight };\n\n    if (stableViewBoxDimensionsRef.current.width === 0 && liveContainerWidth > 0) {\n      stableViewBoxDimensionsRef.current.width = liveContainerWidth;\n    }\n    if (stableViewBoxDimensionsRef.current.height === 0 && liveContainerHeight > 0) {\n      stableViewBoxDimensionsRef.current.height = liveContainerHeight;\n    }\n\n    const viewBoxWidth = stableViewBoxDimensionsRef.current.width > 0 ? stableViewBoxDimensionsRef.current.width : liveContainerWidth;\n    const viewBoxHeight = stableViewBoxDimensionsRef.current.height > 0 ? stableViewBoxDimensionsRef.current.height : liveContainerHeight;\n\n    svg\n      .attr('viewBox', [0, 0, viewBoxWidth, viewBoxHeight])\n      .attr('preserveAspectRatio', 'xMidYMid meet');\n\n    nodes.forEach(node => {\n      const hasValidPositionProp = node.position && typeof node.position.x === 'number' && typeof node.position.y === 'number';\n\n      if (hasValidPositionProp) {\n        node.x = node.position.x;\n        node.y = node.position.y;\n        node.fx = node.position.x;\n        node.fy = node.position.y;\n      } else {\n        node.x = typeof node.x === 'number' ? node.x : (Math.random() * (liveContainerWidth - 100) + 50);\n        node.y = typeof node.y === 'number' ? node.y : (Math.random() * (liveContainerHeight - 100) + 50);\n        node.fx = null;\n        node.fy = null;\n        node.position = { x: node.x, y: node.y };\n      }\n    });\n\n    // Initialize drag behavior\n    const drag = dragBehavior(simulationRef.current, currentSvg, viewBoxWidth, viewBoxHeight);\n\n    const nodeMap = {};\n    nodes.forEach(node => {\n      if (node && node._id) {\n        nodeMap[node._id] = node;\n      }\n    });\n\n    const validEdges = edges.filter(edge =>\n      edge &&\n      edge.source &&\n      edge.target &&\n      nodeMap[edge.source] &&\n      nodeMap[edge.target]\n    );\n\n    const processedEdges = validEdges.map(edge => ({\n      id: edge._id,\n      source: nodeMap[edge.source],\n      target: nodeMap[edge.target],\n      type: edge.type || 'related',\n      _id: edge._id\n    }));\n\n    simulationRef.current\n      .force('link', d3.forceLink(processedEdges).id(d => d._id))\n      .force('charge', d3.forceManyBody().strength(-500))\n      .force('center', d3.forceCenter(viewBoxWidth / 2, viewBoxHeight / 2))\n      .force('collision', d3.forceCollide().radius(40));\n\n    simulationRef.current.alpha(0.3).restart();\n\n    const link = linkGroup.selectAll('line').data(processedEdges);\n\n    link.exit().remove();\n\n    const linkEnter = link.enter().append('path')\n      .attr('class', 'link')\n      .attr('stroke', '#A8C3A4')\n      .attr('stroke-width', 2)\n      .attr('marker-end', 'url(#arrow)');\n\n    linkEnter.merge(link)\n      .attr('d', d => `M${d.source.x},${d.source.y}L${d.target.x},${d.target.y}`)\n      .on('click', handleEdgeClick);\n\n    const node = nodeGroup.selectAll('.node')\n      .data(nodes, d => d._id);\n\n    node.exit().remove();\n\n    const nodeEnter = node.enter().append('g')\n      .attr('class', 'node')\n      .call(dragBehavior(simulationRef.current, currentSvg, viewBoxWidth, viewBoxHeight));\n\n    nodeEnter.append('circle')\n      .attr('r', 20)\n      .attr('fill', '#1B5E20')\n      .attr('stroke', '#1B5E20')\n      .attr('stroke-width', 1.5);\n\n    nodeEnter.append('text')\n      .attr('dx', 25)\n      .attr('dy', 4)\n      .text(d => d.title || d._id)\n      .style('font-size', '12px')\n      .style('fill', 'white');\n\n    nodeEnter.merge(node)\n      .attr('transform', d => `translate(${d.x},${d.y})`)\n      .on('click', handleNodeClick)\n      .on('dblclick', handleNodeDoubleClick);\n\n    simulationRef.current.on('tick', () => {\n      link.attr('d', d => `M${d.source.x},${d.source.y}L${d.target.x},${d.target.y}`);\n      node.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n\n    return () => {\n      simulationRef.current.stop();\n    };\n  }, [nodes, edges, interactionMode, onNodeClick, onNodeDoubleClick, onBackgroundClick]);\n\n  return (\n    <div className=\"graph-container\" style={{ width: '100%', height: '100%', padding: '1rem', boxSizing: 'border-box', position: 'relative' }}>\n      <svg ref={svgRef} className=\"graph\" style={{\n        width: '100%',\n        height: '100%',\n        pointerEvents: 'all'\n      }}>\n        <defs>\n          <marker id=\"arrow\" markerWidth=\"10\" markerHeight=\"10\" refX=\"5\" refY=\"5\" orient=\"auto\">\n            <path d=\"M0,0 L0,10 L10,5 z\" fill=\"#A8C3A4\" />\n          </marker>\n        </defs>\n        <g className=\"links-group\"></g>\n        <g className=\"nodes-group\"></g>\n      </svg>\n      <div className=\"controls\" style={{\n        position: 'absolute',\n        bottom: '1rem',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        display: 'flex',\n        gap: '1rem'\n      }}>\n        <button\n          onClick={onCreateNew}\n          className=\"button primary\"\n        >\n          <PlusIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\n          Create New Node\n        </button>\n        <ConnectButton\n          interactionMode={interactionMode}\n          setInteractionMode={setInteractionMode}\n          linkingState={linkingState}\n          svgRef={svgRef}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Graph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}