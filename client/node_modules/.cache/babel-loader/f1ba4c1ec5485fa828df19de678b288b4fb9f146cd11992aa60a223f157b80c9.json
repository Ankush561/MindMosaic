{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Mind Mosaic\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Graph from './components/graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport NodeViewer from './components/NodeViewer.js';\nimport FileList from './components/FileList.js';\nimport FileEditor from './components/FileEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport PencilIcon from './components/icons/PencilIcon.js';\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\nimport logo from './assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [interactionMode, setInteractionMode] = useState('select');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingFile, setIsEditingFile] = useState(false);\n  const [newNodeInitialPositionArgs, setNewNodeInitialPositionArgs] = useState(null);\n\n  // Determine if any panel that affects graph layout is visible\n  const isAnyPanelVisible = selectedNode && isEditing || selectedNode && !isEditing && !isCreating || isEditingFile;\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData();\n    } else {\n      setNodes([]);\n      setEdges([]);\n    }\n  }, [selectedFile]);\n  const loadFileData = useCallback(async () => {\n    if (!selectedFile) return;\n    try {\n      // First load nodes\n      const response = await api.getFile(selectedFile._id);\n      if (!response.data.nodes) {\n        setNodes([]);\n        setEdges([]);\n        return;\n      }\n\n      // Process nodes and set them\n      const nodesWithPositions = response.data.nodes.map(node => {\n        if (!node.position || node.position.x === null && node.position.y === null) {\n          return {\n            ...node,\n            position: {\n              x: Math.random() * 600 + 100,\n              y: Math.random() * 400 + 100\n            }\n          };\n        }\n        return node;\n      });\n      setNodes(nodesWithPositions);\n\n      // Load and filter edges\n      const allEdges = await api.getEdges();\n      const filteredEdges = allEdges.data.filter(edge => response.data.nodes.some(node => node._id === edge.source) && response.data.nodes.some(node => node._id === edge.target));\n      setEdges(filteredEdges);\n    } catch (err) {\n      console.error('Error loading file data:', err);\n    }\n  }, [selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile._id]);\n  const handleFileSelect = useCallback(file => {\n    setSelectedFile(file);\n  }, []);\n  const handleNodeClick = useCallback(node => {\n    console.log(\"[App.js handleNodeClick] Clicked node:\", node === null || node === void 0 ? void 0 : node._id, \"Current interactionMode:\", interactionMode);\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(false);\n      setIsCreating(false);\n    } else {\n      // In connect mode, we rely on the drag behavior to handle connections\n      console.log(\"Ignoring click in connect mode - connection handled by drag\");\n    }\n  }, [interactionMode]);\n  const handleNodeDoubleClick = useCallback(node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(true);\n      setIsCreating(false);\n    }\n  }, [interactionMode]);\n  const handleCreateNode = useCallback(async graphDimensions => {\n    if (graphDimensions) {\n      setNewNodeInitialPositionArgs(graphDimensions);\n    }\n    setSelectedNode(null);\n    setIsCreating(true);\n    setIsEditing(true);\n  }, []);\n  const handleSave = async nodeData => {\n    try {\n      if (!nodeData._id) {\n        let initialX = 300,\n          initialY = 300;\n        const minDistance = 100;\n        const padding = 50;\n        if (newNodeInitialPositionArgs && newNodeInitialPositionArgs.graphWidth && newNodeInitialPositionArgs.graphHeight) {\n          const {\n            graphWidth,\n            graphHeight\n          } = newNodeInitialPositionArgs;\n          let targetX = graphWidth * 0.70;\n          let targetY = graphHeight * 0.40;\n          let positionFound = false;\n          for (let attempt = 0; attempt < 30; attempt++) {\n            let currentX = targetX;\n            let currentY = targetY;\n            if (attempt > 0) {\n              const angle = Math.random() * 2 * Math.PI;\n              const radius = 25 * Math.ceil(attempt / 8);\n              currentX = targetX + radius * Math.cos(angle);\n              currentY = targetY + radius * Math.sin(angle);\n            }\n            currentX = Math.max(padding, Math.min(graphWidth - padding, currentX));\n            currentY = Math.max(padding, Math.min(graphHeight - padding, currentY));\n            let collision = false;\n            for (const node of nodes) {\n              if (node.position) {\n                const dist = Math.sqrt(Math.pow(node.position.x - currentX, 2) + Math.pow(node.position.y - currentY, 2));\n                if (dist < minDistance) {\n                  collision = true;\n                  break;\n                }\n              }\n            }\n            if (!collision) {\n              initialX = currentX;\n              initialY = currentY;\n              positionFound = true;\n              break;\n            }\n          }\n          if (!positionFound) {\n            console.warn(\"Could not find an empty spot for new node, using last attempted or default.\");\n            initialX = Math.max(padding, Math.min(graphWidth - padding, targetX));\n            initialY = Math.max(padding, Math.min(graphHeight - padding, targetY));\n          }\n          setNewNodeInitialPositionArgs(null);\n        } else {\n          console.warn(\"Graph dimensions not available for new node positioning, using defaults.\");\n        }\n        nodeData.position = {\n          x: initialX,\n          y: initialY\n        };\n      }\n      const isNewNodeCreation = !nodeData._id;\n      const response = isNewNodeCreation ? await api.createNode(nodeData) : await api.updateNode(nodeData._id, nodeData);\n      if (isNewNodeCreation && response.data && response.data._id) {\n        const newNodeFromServer = response.data;\n\n        // Ensure the position we calculated is on the node object\n        newNodeFromServer.position = nodeData.position; // Calculated position is in nodeData.position\n        // **Also explicitly set x and y for D3's initial understanding**\n        // newNodeFromServer.x = nodeData.position.x;\n        // newNodeFromServer.y = nodeData.position.y;\n\n        // The console.warn for server position mismatch can be removed or adjusted\n        // if we now prioritize the calculated position by setting x, y directly.\n        // console.warn(\"Server response for new node didn't match calculated position. Using calculated one for initial render.\");\n\n        // setNodes(prevNodes => [...prevNodes, newNodeFromServer]);\n\n        if (selectedFile) {\n          await api.addNodeToFile(selectedFile._id, newNodeFromServer._id);\n        }\n      } else if (!isNewNodeCreation) {\n        // For existing node updates, we might want to update just that node in local state\n        // for faster feedback, but loadFileData() will refresh anyway.\n      }\n      await loadFileData();\n    } catch (err) {\n      console.error('Save failed:', err);\n    } finally {\n      setSelectedNode(null);\n      setIsCreating(false);\n      setIsEditing(false);\n    }\n  };\n  const handleCreateEdge = async edgeData => {\n    try {\n      console.log('Creating edge:', edgeData);\n      const response = await api.createEdge(edgeData);\n      console.log('Edge created:', response.data);\n      await loadFileData();\n    } catch (err) {\n      console.error('Failed to create edge:', err);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      if (selectedFile) {\n        await api.removeNodeFromFile(selectedFile._id, id);\n      }\n      await api.deleteNode(id);\n      await loadFileData();\n\n      // If the deleted node was the selected one, clear selectedNode\n      if (selectedNode && selectedNode._id === id) {\n        setSelectedNode(null);\n        setIsEditing(false); // Also reset editing mode\n        // isCreating should already be false if we are deleting an existing node\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(`Deletion failed: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n    }\n  };\n  const handleDeleteEdge = useCallback(async edgeId => {\n    try {\n      await api.deleteEdge(edgeId);\n      await loadFileData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(`Edge deletion failed: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message}`);\n    }\n  }, [loadFileData]);\n\n  // const handleEdgeAnimationEnd = (edgeId) => {\n  //   setAnimatedEdgeId(null);\n  //   console.log(\"Edge animation ended for:\", edgeId);\n  // };\n\n  // const handleNodeAppearAnimationEnd = (nodeId) => {\n  //   setAppearingNodeId(null);\n  //   console.log(\"Node appearance animation ended for:\", nodeId);\n  // };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (isCreating) {\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n  const handleStartEdit = () => setIsEditing(true);\n  const handleBackgroundClick = useCallback(() => {\n    setSelectedNode(null);\n    setIsCreating(false);\n    setIsEditing(false);\n  }, []);\n  const handleEditFile = () => setIsEditingFile(true);\n  const handleFileEditSave = async updatedFile => {\n    try {\n      const response = await api.updateFile(updatedFile._id, {\n        name: updatedFile.name,\n        description: updatedFile.description\n      });\n      if (response.status === 200) {\n        setSelectedFile(response.data);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to update file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      alert('Failed to update file: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const handleFileEditCancel = () => setIsEditingFile(false);\n  const handleFileDelete = async fileId => {\n    try {\n      const response = await api.deleteFile(fileId);\n      if (response.status === 200 || response.status === 204) {\n        setSelectedFile(null);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to delete file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      alert('Failed to delete file: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  const isEditorVisible = selectedNode && isEditing || isCreating;\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${selectedFile ? 'graph-view-active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-title-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Mind Mosaic Logo\",\n        className: \"project-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), !selectedFile ? /*#__PURE__*/_jsxDEV(FileList, {\n      onFileSelect: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedFile(null),\n          className: \"back-btn\",\n          children: [/*#__PURE__*/_jsxDEV(BackArrowIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), \"Back to Files\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditFile,\n          className: \"edit-file-btn\",\n          children: [/*#__PURE__*/_jsxDEV(PencilIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), \"Edit File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: isEditingFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-editor-container\",\n          children: /*#__PURE__*/_jsxDEV(FileEditor, {\n            file: selectedFile,\n            onSave: handleFileEditSave,\n            onCancel: handleFileEditCancel,\n            onDelete: handleFileDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph-container\",\n            children: /*#__PURE__*/_jsxDEV(Graph, {\n              nodes: nodes,\n              edges: edges,\n              onNodeClick: handleNodeClick,\n              onNodeDoubleClick: handleNodeDoubleClick,\n              onCreateNew: handleCreateNode,\n              onCreateEdge: handleCreateEdge,\n              onDeleteEdge: handleDeleteEdge,\n              interactionMode: interactionMode,\n              setInteractionMode: setInteractionMode,\n              onBackgroundClick: handleBackgroundClick,\n              isAnyPanelVisible: isAnyPanelVisible\n              // newlyCreatedEdgeId={animatedEdgeId}\n              // onEdgeAnimationComplete={handleEdgeAnimationEnd}\n              // appearingNodeId={appearingNodeId}\n              // onNodeAppearAnimationComplete={handleNodeAppearAnimationEnd}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`,\n            children: isEditorVisible ? /*#__PURE__*/_jsxDEV(NodeEditor, {\n              node: selectedNode || {\n                title: '',\n                content: '',\n                tags: []\n              },\n              onSave: handleSave,\n              onDelete: selectedNode ? () => handleDelete(selectedNode._id) : null,\n              onCancel: handleCancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 21\n            }, this) : isViewerVisible ? /*#__PURE__*/_jsxDEV(NodeViewer, {\n              node: selectedNode,\n              onEdit: handleStartEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZcS1bykyi9Ezp3qz6rtNkiFvutI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Graph","NodeEditor","NodeViewer","FileList","FileEditor","api","PencilIcon","BackArrowIcon","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","isCreating","setIsCreating","interactionMode","setInteractionMode","selectedFile","setSelectedFile","isEditing","setIsEditing","isEditingFile","setIsEditingFile","newNodeInitialPositionArgs","setNewNodeInitialPositionArgs","isAnyPanelVisible","loadFileData","response","getFile","_id","data","nodesWithPositions","map","node","position","x","y","Math","random","allEdges","getEdges","filteredEdges","filter","edge","some","source","target","err","console","error","handleFileSelect","file","handleNodeClick","log","handleNodeDoubleClick","handleCreateNode","graphDimensions","handleSave","nodeData","initialX","initialY","minDistance","padding","graphWidth","graphHeight","targetX","targetY","positionFound","attempt","currentX","currentY","angle","PI","radius","ceil","cos","sin","max","min","collision","dist","sqrt","pow","warn","isNewNodeCreation","createNode","updateNode","newNodeFromServer","addNodeToFile","handleCreateEdge","edgeData","createEdge","handleDelete","id","removeNodeFromFile","deleteNode","_err$response","_err$response$data","message","handleDeleteEdge","edgeId","deleteEdge","_err$response2","_err$response2$data","handleCancel","handleStartEdit","handleBackgroundClick","handleEditFile","handleFileEditSave","updatedFile","updateFile","name","description","status","alert","_err$response3","_err$response3$data","handleFileEditCancel","handleFileDelete","fileId","deleteFile","_err$response4","_err$response4$data","isEditorVisible","isViewerVisible","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","onClick","style","width","height","marginRight","onSave","onCancel","onDelete","onNodeClick","onNodeDoubleClick","onCreateNew","onCreateEdge","onDeleteEdge","onBackgroundClick","title","content","tags","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Mind Mosaic/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Graph from './components/graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport NodeViewer from './components/NodeViewer.js';\nimport FileList from './components/FileList.js';\nimport FileEditor from './components/FileEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport PencilIcon from './components/icons/PencilIcon.js';\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\nimport logo from './assets/logo.png';\n\nfunction App() {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [interactionMode, setInteractionMode] = useState('select');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingFile, setIsEditingFile] = useState(false);\n  const [newNodeInitialPositionArgs, setNewNodeInitialPositionArgs] = useState(null);\n\n  // Determine if any panel that affects graph layout is visible\n  const isAnyPanelVisible = (selectedNode && isEditing) || (selectedNode && !isEditing && !isCreating) || isEditingFile;\n\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData();\n    } else {\n      setNodes([]);\n      setEdges([]);\n    }\n  }, [selectedFile]);\n\n  const loadFileData = useCallback(async () => {\n    if (!selectedFile) return;\n    try {\n      // First load nodes\n      const response = await api.getFile(selectedFile._id);\n      if (!response.data.nodes) {\n        setNodes([]);\n        setEdges([]);\n        return;\n      }\n\n      // Process nodes and set them\n      const nodesWithPositions = response.data.nodes.map(node => {\n        if (!node.position || (node.position.x === null && node.position.y === null)) {\n          return {\n            ...node,\n            position: {\n              x: Math.random() * 600 + 100,\n              y: Math.random() * 400 + 100\n            }\n          };\n        }\n        return node;\n      });\n      setNodes(nodesWithPositions);\n\n      // Load and filter edges\n      const allEdges = await api.getEdges();\n      const filteredEdges = allEdges.data.filter(edge =>\n        response.data.nodes.some(node => node._id === edge.source) &&\n        response.data.nodes.some(node => node._id === edge.target)\n      );\n      setEdges(filteredEdges);\n    } catch (err) {\n      console.error('Error loading file data:', err);\n    }\n  }, [selectedFile?._id]);\n\n  const handleFileSelect = useCallback((file) => {\n    setSelectedFile(file);\n  }, []);\n\n  const handleNodeClick = useCallback((node) => {\n    console.log(\"[App.js handleNodeClick] Clicked node:\", node?._id, \"Current interactionMode:\", interactionMode);\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(false);\n      setIsCreating(false);\n    }\n    else {\n    // In connect mode, we rely on the drag behavior to handle connections\n    console.log(\"Ignoring click in connect mode - connection handled by drag\");\n  }\n  }, [interactionMode]);\n\n  const handleNodeDoubleClick = useCallback((node) => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(true);\n      setIsCreating(false);\n    }\n  }, [interactionMode]);\n\n  const handleCreateNode = useCallback(async (graphDimensions) => {\n    if (graphDimensions) {\n      setNewNodeInitialPositionArgs(graphDimensions);\n    }\n    setSelectedNode(null);\n    setIsCreating(true);\n    setIsEditing(true);\n  }, []);\n\n  const handleSave = async (nodeData) => {\n    try {\n      if (!nodeData._id) {\n        let initialX = 300, initialY = 300;\n        const minDistance = 100;\n        const padding = 50;\n\n        if (newNodeInitialPositionArgs && newNodeInitialPositionArgs.graphWidth && newNodeInitialPositionArgs.graphHeight) {\n          const { graphWidth, graphHeight } = newNodeInitialPositionArgs;\n          let targetX = graphWidth * 0.70;\n          let targetY = graphHeight * 0.40;\n\n          let positionFound = false;\n          for (let attempt = 0; attempt < 30; attempt++) {\n            let currentX = targetX;\n            let currentY = targetY;\n\n            if (attempt > 0) {\n              const angle = Math.random() * 2 * Math.PI;\n              const radius = 25 * Math.ceil(attempt / 8);\n              currentX = targetX + radius * Math.cos(angle);\n              currentY = targetY + radius * Math.sin(angle);\n            }\n\n            currentX = Math.max(padding, Math.min(graphWidth - padding, currentX));\n            currentY = Math.max(padding, Math.min(graphHeight - padding, currentY));\n\n            let collision = false;\n            for (const node of nodes) {\n              if (node.position) {\n                const dist = Math.sqrt(Math.pow(node.position.x - currentX, 2) + Math.pow(node.position.y - currentY, 2));\n                if (dist < minDistance) {\n                  collision = true;\n                  break;\n                }\n              }\n            }\n\n            if (!collision) {\n              initialX = currentX;\n              initialY = currentY;\n              positionFound = true;\n              break;\n            }\n          }\n          if (!positionFound) {\n            console.warn(\"Could not find an empty spot for new node, using last attempted or default.\");\n            initialX = Math.max(padding, Math.min(graphWidth - padding, targetX));\n            initialY = Math.max(padding, Math.min(graphHeight - padding, targetY));\n          }\n          setNewNodeInitialPositionArgs(null);\n        } else {\n          console.warn(\"Graph dimensions not available for new node positioning, using defaults.\");\n        }\n        nodeData.position = { x: initialX, y: initialY };\n      }\n      \n      const isNewNodeCreation = !nodeData._id;\n\n      const response = isNewNodeCreation ? await api.createNode(nodeData) : await api.updateNode(nodeData._id, nodeData);\n      \n      if (isNewNodeCreation && response.data && response.data._id) { \n        const newNodeFromServer = response.data;\n        \n        // Ensure the position we calculated is on the node object\n        newNodeFromServer.position = nodeData.position; // Calculated position is in nodeData.position\n        // **Also explicitly set x and y for D3's initial understanding**\n        // newNodeFromServer.x = nodeData.position.x;\n        // newNodeFromServer.y = nodeData.position.y;\n\n        // The console.warn for server position mismatch can be removed or adjusted\n        // if we now prioritize the calculated position by setting x, y directly.\n        // console.warn(\"Server response for new node didn't match calculated position. Using calculated one for initial render.\");\n        \n        // setNodes(prevNodes => [...prevNodes, newNodeFromServer]);\n        \n        if (selectedFile) {\n          await api.addNodeToFile(selectedFile._id, newNodeFromServer._id);\n        }\n      } else if (!isNewNodeCreation) {\n        // For existing node updates, we might want to update just that node in local state\n        // for faster feedback, but loadFileData() will refresh anyway.\n      }\n      await loadFileData();\n    } catch (err) {\n      console.error('Save failed:', err);\n    } finally {\n      setSelectedNode(null);\n      setIsCreating(false);\n      setIsEditing(false);\n    }\n  };\n\n  const handleCreateEdge = async (edgeData) => {\n    try {\n      console.log('Creating edge:', edgeData);\n      const response = await api.createEdge(edgeData);\n      console.log('Edge created:', response.data);\n      await loadFileData();\n    } catch (err) {\n      console.error('Failed to create edge:', err);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      if (selectedFile) {\n        await api.removeNodeFromFile(selectedFile._id, id);\n      }\n      await api.deleteNode(id);\n      await loadFileData();\n\n      // If the deleted node was the selected one, clear selectedNode\n      if (selectedNode && selectedNode._id === id) {\n        setSelectedNode(null);\n        setIsEditing(false); // Also reset editing mode\n        // isCreating should already be false if we are deleting an existing node\n      }\n\n    } catch (err) {\n      console.error(`Deletion failed: ${err.response?.data?.message || err.message}`);\n    }\n  };\n\n\n\n  const handleDeleteEdge = useCallback(async (edgeId) => {\n    try {\n      await api.deleteEdge(edgeId);\n      await loadFileData();\n    } catch (err) {\n      console.error(`Edge deletion failed: ${err.response?.data?.message || err.message}`);\n    }\n  }, [loadFileData]);\n\n  // const handleEdgeAnimationEnd = (edgeId) => {\n  //   setAnimatedEdgeId(null);\n  //   console.log(\"Edge animation ended for:\", edgeId);\n  // };\n\n  // const handleNodeAppearAnimationEnd = (nodeId) => {\n  //   setAppearingNodeId(null);\n  //   console.log(\"Node appearance animation ended for:\", nodeId);\n  // };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (isCreating) {\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n\n  const handleStartEdit = () => setIsEditing(true);\n  const handleBackgroundClick = useCallback(() => {\n    setSelectedNode(null);\n    setIsCreating(false);\n    setIsEditing(false);\n  }, []);\n  const handleEditFile = () => setIsEditingFile(true);\n  const handleFileEditSave = async (updatedFile) => {\n    try {\n      const response = await api.updateFile(updatedFile._id, { name: updatedFile.name, description: updatedFile.description });\n      if (response.status === 200) {\n        setSelectedFile(response.data);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to update file. Please try again.');\n      }\n    } catch (err) {\n      alert('Failed to update file: ' + (err.response?.data?.message || err.message));\n    }\n  };\n  const handleFileEditCancel = () => setIsEditingFile(false);\n  const handleFileDelete = async (fileId) => {\n    try {\n      const response = await api.deleteFile(fileId);\n      if (response.status === 200 || response.status === 204) {\n        setSelectedFile(null);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to delete file. Please try again.');\n      }\n    } catch (err) {\n      alert('Failed to delete file: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const isEditorVisible = (selectedNode && isEditing) || isCreating;\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\n\n  return (\n    <div className={`app-container ${selectedFile ? 'graph-view-active' : ''}`}>\n      <div className=\"project-title-header\">\n        <img src={logo} alt=\"Mind Mosaic Logo\" className=\"project-logo\" />\n      </div>\n\n      {!selectedFile ? (\n        <FileList onFileSelect={handleFileSelect} />\n      ) : (\n        <>\n          <div className=\"header\">\n            <button onClick={() => setSelectedFile(null)} className=\"back-btn\">\n              <BackArrowIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\n              Back to Files\n            </button>\n            <h2>{selectedFile.name}</h2>\n            <button onClick={handleEditFile} className=\"edit-file-btn\">\n              <PencilIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\n              Edit File\n            </button>\n          </div>\n          <div className=\"main-content\">\n            {isEditingFile ? (\n              <div className=\"file-editor-container\">\n                <FileEditor\n                  file={selectedFile}\n                  onSave={handleFileEditSave}\n                  onCancel={handleFileEditCancel}\n                  onDelete={handleFileDelete}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"graph-container\">\n                  <Graph\n                    nodes={nodes}\n                    edges={edges}\n                    onNodeClick={handleNodeClick}\n                    onNodeDoubleClick={handleNodeDoubleClick}\n                    onCreateNew={handleCreateNode}\n                    onCreateEdge={handleCreateEdge}\n                    onDeleteEdge={handleDeleteEdge}\n                    interactionMode={interactionMode}\n                    setInteractionMode={setInteractionMode}\n                    onBackgroundClick={handleBackgroundClick}\n                    isAnyPanelVisible={isAnyPanelVisible}\n                    // newlyCreatedEdgeId={animatedEdgeId}\n                    // onEdgeAnimationComplete={handleEdgeAnimationEnd}\n                    // appearingNodeId={appearingNodeId}\n                    // onNodeAppearAnimationComplete={handleNodeAppearAnimationEnd}\n                  />\n                </div>\n                <div className={`editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`}>\n                  {isEditorVisible ? (\n                    <NodeEditor\n                      node={selectedNode || { title: '', content: '', tags: [] }}\n                      onSave={handleSave}\n                      onDelete={selectedNode ? () => handleDelete(selectedNode._id) : null}\n                      onCancel={handleCancel}\n                    />\n                  ) : isViewerVisible ? (\n                    <NodeViewer\n                      node={selectedNode}\n                      onEdit={handleStartEdit}\n                    />\n                  ) : null}\n                </div>\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}