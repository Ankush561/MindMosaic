{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\client\\\\src\\\\components\\\\graph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  nodes = [],\n  edges = [],\n  onNodeClick,\n  onCreateNew\n}) => {\n  _s();\n  const svgRef = useRef();\n  console.log('Graph received:', {\n    nodeCount: nodes.length,\n    edgeCount: edges.length\n  });\n  useEffect(() => {\n    if (!nodes || nodes.length === 0) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = svgRef.current.clientWidth;\n    const height = svgRef.current.clientHeight;\n\n    // Create a force simulation\n    const simulation = d3.forceSimulation(nodes).force('charge', d3.forceManyBody().strength(-100)).force('center', d3.forceCenter(width / 2, height / 2));\n\n    // Draw edges (if any)\n    if (edges.length > 0) {\n      svg.selectAll('line').data(edges).enter().append('line').attr('stroke', 'gray').attr('stroke-width', 2);\n    }\n\n    // Draw nodes\n    const nodeElements = svg.selectAll('circle').data(nodes).enter().append('circle').attr('r', 10).attr('fill', 'steelblue').on('click', (event, d) => {\n      if (onNodeClick) onNodeClick(d);\n    });\n    simulation.on('tick', () => {\n      nodeElements.attr('cx', d => d.x).attr('cy', d => d.y);\n      svg.selectAll('line').attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n    });\n    return () => simulation.stop();\n  }, [nodes, edges, onNodeClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"600\",\n      height: \"600\",\n      className: \"graph-svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-btn\",\n      onClick: onCreateNew,\n      children: \"+ New Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Graph","nodes","edges","onNodeClick","onCreateNew","_s","svgRef","console","log","nodeCount","length","edgeCount","svg","select","current","selectAll","remove","width","clientWidth","height","clientHeight","simulation","forceSimulation","force","forceManyBody","strength","forceCenter","data","enter","append","attr","nodeElements","on","event","d","x","y","source","target","stop","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/client/src/components/graph.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './Graph.css';\r\n\r\nconst Graph = ({ nodes = [], edges = [], onNodeClick, onCreateNew }) => {\r\n  const svgRef = useRef();\r\n\r\n  console.log('Graph received:', { \r\n    nodeCount: nodes.length,\r\n    edgeCount: edges.length \r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!nodes || nodes.length === 0) return;\r\n    \r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n    const width = svgRef.current.clientWidth;\r\n    const height = svgRef.current.clientHeight;\r\n\r\n    // Create a force simulation\r\n    const simulation = d3.forceSimulation(nodes)\r\n      .force('charge', d3.forceManyBody().strength(-100))\r\n      .force('center', d3.forceCenter(width / 2, height / 2));\r\n\r\n    // Draw edges (if any)\r\n    if (edges.length > 0) {\r\n      svg.selectAll('line')\r\n        .data(edges)\r\n        .enter()\r\n        .append('line')\r\n        .attr('stroke', 'gray')\r\n        .attr('stroke-width', 2);\r\n    }\r\n\r\n    // Draw nodes\r\n    const nodeElements = svg.selectAll('circle')\r\n      .data(nodes)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('r', 10)\r\n      .attr('fill', 'steelblue')\r\n      .on('click', (event, d) => {\r\n        if (onNodeClick) onNodeClick(d);\r\n      });\r\n\r\n    simulation.on('tick', () => {\r\n      nodeElements\r\n        .attr('cx', d => d.x)\r\n        .attr('cy', d => d.y);\r\n\r\n      svg.selectAll('line')\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n    });\r\n\r\n    return () => simulation.stop();\r\n  }, [nodes, edges, onNodeClick]);\r\n\r\n  return (\r\n    <div className=\"graph-wrapper\">\r\n      <svg ref={svgRef} width=\"600\" height=\"600\" className=\"graph-svg\" />\r\n      <button className=\"create-btn\" onClick={onCreateNew}>\r\n        + New Node\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}