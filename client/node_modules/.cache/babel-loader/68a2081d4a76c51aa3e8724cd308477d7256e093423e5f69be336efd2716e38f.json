{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\client\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport './Graph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  nodes,\n  edges,\n  onNodeClick\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!nodes.length || !edges.length) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = svgRef.current.clientWidth;\n    const height = svgRef.current.clientHeight;\n\n    // Create simulation\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(edges).id(d => d._id).distance(100)).force('charge', d3.forceManyBody().strength(-300)).force('center', d3.forceCenter(width / 2, height / 2));\n\n    // Draw edges\n    const link = svg.append('g').selectAll('line').data(edges).join('line').attr('stroke', '#999').attr('stroke-opacity', 0.6).attr('stroke-width', d => Math.sqrt(d.weight));\n\n    // Draw nodes\n    const node = svg.append('g').selectAll('circle').data(nodes).join('circle').attr('r', 10).attr('fill', '#69b3a2').call(drag(simulation)).on('click', (event, d) => onNodeClick(d));\n\n    // Add labels\n    const label = svg.append('g').selectAll('text').data(nodes).join('text').text(d => d.title).attr('font-size', 12).attr('dx', 15).attr('dy', 4);\n\n    // Update positions on simulation tick\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      label.attr('x', d => d.x).attr('y', d => d.y);\n    });\n    function drag(simulation) {\n      function dragstarted(event) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        event.subject.fx = event.subject.x;\n        event.subject.fy = event.subject.y;\n      }\n      function dragged(event) {\n        event.subject.fx = event.x;\n        event.subject.fy = event.y;\n      }\n      function dragended(event) {\n        if (!event.active) simulation.alphaTarget(0);\n        event.subject.fx = null;\n        event.subject.fy = null;\n      }\n      return d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended);\n    }\n    return () => {\n      simulation.stop();\n    };\n  }, [nodes, edges]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    className: \"graph-svg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_s(Graph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Graph","nodes","edges","onNodeClick","_s","svgRef","length","svg","select","current","selectAll","remove","width","clientWidth","height","clientHeight","simulation","forceSimulation","force","forceLink","id","d","_id","distance","forceManyBody","strength","forceCenter","link","append","data","join","attr","Math","sqrt","weight","node","call","drag","on","event","label","text","title","source","x","y","target","dragstarted","active","alphaTarget","restart","subject","fx","fy","dragged","dragended","stop","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/client/src/components/Graph.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './Graph.css';\r\n\r\nconst Graph = ({ nodes, edges, onNodeClick }) => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!nodes.length || !edges.length) return;\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n\r\n    const width = svgRef.current.clientWidth;\r\n    const height = svgRef.current.clientHeight;\r\n\r\n    // Create simulation\r\n    const simulation = d3.forceSimulation(nodes)\r\n      .force('link', d3.forceLink(edges).id(d => d._id).distance(100))\r\n      .force('charge', d3.forceManyBody().strength(-300))\r\n      .force('center', d3.forceCenter(width / 2, height / 2));\r\n\r\n    // Draw edges\r\n    const link = svg.append('g')\r\n      .selectAll('line')\r\n      .data(edges)\r\n      .join('line')\r\n      .attr('stroke', '#999')\r\n      .attr('stroke-opacity', 0.6)\r\n      .attr('stroke-width', d => Math.sqrt(d.weight));\r\n\r\n    // Draw nodes\r\n    const node = svg.append('g')\r\n      .selectAll('circle')\r\n      .data(nodes)\r\n      .join('circle')\r\n      .attr('r', 10)\r\n      .attr('fill', '#69b3a2')\r\n      .call(drag(simulation))\r\n      .on('click', (event, d) => onNodeClick(d));\r\n\r\n    // Add labels\r\n    const label = svg.append('g')\r\n      .selectAll('text')\r\n      .data(nodes)\r\n      .join('text')\r\n      .text(d => d.title)\r\n      .attr('font-size', 12)\r\n      .attr('dx', 15)\r\n      .attr('dy', 4);\r\n\r\n    // Update positions on simulation tick\r\n    simulation.on('tick', () => {\r\n      link\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n\r\n      node\r\n        .attr('cx', d => d.x)\r\n        .attr('cy', d => d.y);\r\n\r\n      label\r\n        .attr('x', d => d.x)\r\n        .attr('y', d => d.y);\r\n    });\r\n\r\n    function drag(simulation) {\r\n      function dragstarted(event) {\r\n        if (!event.active) simulation.alphaTarget(0.3).restart();\r\n        event.subject.fx = event.subject.x;\r\n        event.subject.fy = event.subject.y;\r\n      }\r\n      \r\n      function dragged(event) {\r\n        event.subject.fx = event.x;\r\n        event.subject.fy = event.y;\r\n      }\r\n      \r\n      function dragended(event) {\r\n        if (!event.active) simulation.alphaTarget(0);\r\n        event.subject.fx = null;\r\n        event.subject.fy = null;\r\n      }\r\n      \r\n      return d3.drag()\r\n        .on('start', dragstarted)\r\n        .on('drag', dragged)\r\n        .on('end', dragended);\r\n    }\r\n\r\n    return () => {\r\n      simulation.stop();\r\n    };\r\n  }, [nodes, edges]);\r\n\r\n  return <svg ref={svgRef} className=\"graph-svg\" />;\r\n};\r\n\r\nexport default Graph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}