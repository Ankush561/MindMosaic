{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\client\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Graph from './components/graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const [nodesRes, edgesRes] = await Promise.all([api.getNodes(), api.getEdges()]);\n      setNodes([...nodesRes.data]);\n      setEdges([...edgesRes.data]);\n      console.log('Data refreshed:', {\n        nodes: nodesRes.data.length,\n        edges: edgesRes.data.length\n      });\n    } catch (err) {\n      console.error('Refresh failed:', err);\n    }\n  };\n  /*#__PURE__*/_jsxDEV(NodeEditor, {\n    onDelete: () => handleDelete(selectedNode._id)\n    // ... other props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n  const handleDelete = async id => {\n    try {\n      await api.deleteNode(id);\n      setNotification({\n        type: 'success',\n        message: 'Node deleted successfully'\n      });\n      await fetchData(); // Refresh graph data\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setNotification({\n        type: 'error',\n        message: `Deletion failed: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`\n      });\n    }\n  };\n  const handleCreateNew = () => {\n    setSelectedNode(null);\n    setIsCreating(true);\n  };\n\n  // const handleSave = async (nodeData) => {\n  //   try {\n  //     console.log('Saving node:', nodeData); // Debug log\n\n  //     if (nodeData._id) {\n  //       // Update existing node\n  //       await api.updateNode(nodeData._id, {\n  //         title: nodeData.title,\n  //         content: nodeData.content,\n  //         tags: nodeData.tags\n  //       });\n  //     } else {\n  //       // Create new node\n  //       await api.createNode({\n  //         title: nodeData.title,\n  //         content: nodeData.content,\n  //         tags: nodeData.tags\n  //       });\n  //     }\n\n  //     // Refresh data and reset UI\n  //     await fetchData();\n  //     setSelectedNode(null);\n  //     setIsCreating(false);\n\n  //   } catch (err) {\n  //     console.error('Save failed:', err.response?.data || err.message);\n  //     alert(`Save failed: ${err.response?.data?.message || err.message}`);\n  //   }\n  // };\n  const handleSave = async nodeData => {\n    console.group('Saving Node Process');\n    try {\n      console.log('Final payload:', JSON.stringify(nodeData, null, 2));\n      const response = nodeData._id ? await api.updateNode(nodeData._id, nodeData) : await api.createNode(nodeData);\n      alert(`âœ… Node ${nodeData._id ? 'updated' : 'created'}! ID: ${response.data._id}`);\n      console.log('Save successful!', response.data);\n      await fetchData();\n    } catch (err) {\n      var _err$response2;\n      console.error('Save failed:', {\n        error: err,\n        request: err.config,\n        response: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data\n      });\n    } finally {\n      console.groupEnd();\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        nodes: nodes || [] // Fallback empty array\n        ,\n        edges: edges || [] // Fallback empty array\n        ,\n        onNodeClick: setSelectedNode,\n        onCreateNew: handleCreateNew\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: selectedNode || isCreating ? /*#__PURE__*/_jsxDEV(NodeEditor, {\n        node: selectedNode || {\n          title: '',\n          content: '',\n          tags: []\n        },\n        onSave: handleSave,\n        onDelete: selectedNode ? () => handleDelete(selectedNode._id) : null,\n        onCancel: () => {\n          setSelectedNode(null);\n          setIsCreating(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a node or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateNew,\n          children: \"Create New Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    const testSave = async () => {\n      const testNode = {\n        title: \"Test Node\",\n        content: \"Test Content\",\n        tags: [\"test\"]\n      };\n      console.log(\"Testing API...\");\n      await api.createNode(testNode);\n    };\n    testSave();\n  }, []);\n\n  // Pass to NodeEditor:\n}\n// Temporary test in App.js\n_s(App, \"WigOQ619F8pExJy632OXmZ5a6UA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Graph","NodeEditor","api","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","isCreating","setIsCreating","fetchData","nodesRes","edgesRes","Promise","all","getNodes","getEdges","data","console","log","length","err","error","onDelete","handleDelete","_id","fileName","_jsxFileName","lineNumber","columnNumber","id","deleteNode","setNotification","type","message","_err$response","_err$response$data","response","handleCreateNew","handleSave","nodeData","group","JSON","stringify","updateNode","createNode","alert","_err$response2","request","config","groupEnd","className","children","onNodeClick","onCreateNew","node","title","content","tags","onSave","onCancel","onClick","testSave","testNode","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/client/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Graph from './components/graph.js';\r\nimport NodeEditor from './components/NodeEditor.js';\r\nimport api from './services/api.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n\r\n  useEffect(() => { fetchData(); }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [nodesRes, edgesRes] = await Promise.all([\r\n        api.getNodes(),\r\n        api.getEdges()\r\n      ]);\r\n      setNodes([...nodesRes.data]);\r\n      setEdges([...edgesRes.data]);\r\n      \r\n      console.log('Data refreshed:', {\r\n        nodes: nodesRes.data.length,\r\n        edges: edgesRes.data.length\r\n      });\r\n    } catch (err) {\r\n      console.error('Refresh failed:', err);\r\n    }\r\n  };\r\n  <NodeEditor\r\n    onDelete={() => handleDelete(selectedNode._id)}\r\n    // ... other props\r\n  />\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.deleteNode(id);\r\n      setNotification({\r\n        type: 'success',\r\n        message: 'Node deleted successfully'\r\n      });\r\n      await fetchData(); // Refresh graph data\r\n    } catch (err) {\r\n      setNotification({\r\n        type: 'error',\r\n        message: `Deletion failed: ${err.response?.data?.message || err.message}`\r\n      });\r\n    }\r\n  };\r\n  const handleCreateNew = () => {\r\n    setSelectedNode(null);\r\n    setIsCreating(true);\r\n  };\r\n  \r\n  // const handleSave = async (nodeData) => {\r\n  //   try {\r\n  //     console.log('Saving node:', nodeData); // Debug log\r\n      \r\n  //     if (nodeData._id) {\r\n  //       // Update existing node\r\n  //       await api.updateNode(nodeData._id, {\r\n  //         title: nodeData.title,\r\n  //         content: nodeData.content,\r\n  //         tags: nodeData.tags\r\n  //       });\r\n  //     } else {\r\n  //       // Create new node\r\n  //       await api.createNode({\r\n  //         title: nodeData.title,\r\n  //         content: nodeData.content,\r\n  //         tags: nodeData.tags\r\n  //       });\r\n  //     }\r\n      \r\n  //     // Refresh data and reset UI\r\n  //     await fetchData();\r\n  //     setSelectedNode(null);\r\n  //     setIsCreating(false);\r\n      \r\n  //   } catch (err) {\r\n  //     console.error('Save failed:', err.response?.data || err.message);\r\n  //     alert(`Save failed: ${err.response?.data?.message || err.message}`);\r\n  //   }\r\n  // };\r\n  const handleSave = async (nodeData) => {\r\n    console.group('Saving Node Process');\r\n    try {\r\n      console.log('Final payload:', JSON.stringify(nodeData, null, 2));\r\n      \r\n      const response = nodeData._id\r\n        ? await api.updateNode(nodeData._id, nodeData)\r\n        : await api.createNode(nodeData);\r\n\r\n        alert(`âœ… Node ${nodeData._id ? 'updated' : 'created'}! ID: ${response.data._id}`);\r\n\r\n      console.log('Save successful!', response.data);\r\n      await fetchData();\r\n    } catch (err) {\r\n      console.error('Save failed:', {\r\n        error: err,\r\n        request: err.config,\r\n        response: err.response?.data\r\n      });\r\n    } finally {\r\n      console.groupEnd();\r\n      setSelectedNode(null);\r\n      setIsCreating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"graph-container\">\r\n        <Graph \r\n          nodes={nodes || []}       // Fallback empty array\r\n          edges={edges || []}       // Fallback empty array\r\n          onNodeClick={setSelectedNode}\r\n          onCreateNew={handleCreateNew}\r\n        />\r\n      </div>\r\n      <div className=\"editor-container\">\r\n        {(selectedNode || isCreating) ? (\r\n          <NodeEditor \r\n            node={selectedNode || { title: '', content: '', tags: [] }}\r\n            onSave={handleSave}\r\n            onDelete={selectedNode ? () => handleDelete(selectedNode._id) : null}\r\n            onCancel={() => {\r\n              setSelectedNode(null);\r\n              setIsCreating(false);\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"empty-state\">\r\n            <p>Select a node or</p>\r\n            <button onClick={handleCreateNew}>Create New Node</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  useEffect(() => {\r\n    const testSave = async () => {\r\n      const testNode = {\r\n        title: \"Test Node\",\r\n        content: \"Test Content\",\r\n        tags: [\"test\"]\r\n      };\r\n      console.log(\"Testing API...\");\r\n      await api.createNode(testNode);\r\n    };\r\n    testSave();\r\n  }, []);\r\n  \r\n  \r\n  // Pass to NodeEditor:\r\n  \r\n}\r\n// Temporary test in App.js\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}