{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Graph from './components/Graph';\nimport NodeEditor from './components/NodeEditor';\nimport api from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const [nodesRes, edgesRes] = await Promise.all([api.getNodes(), api.getEdges()]);\n      setNodes(nodesRes.data);\n      setEdges(edgesRes.data);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: /*#__PURE__*/_jsxDEV(Graph, {\n        nodes: nodes,\n        edges: edges,\n        onNodeClick: setSelectedNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: /*#__PURE__*/_jsxDEV(NodeEditor, {\n        node: selectedNode,\n        onSave: fetchData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yZQ8kvy4rp3WwXChUZOkLPbMWSw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Graph","NodeEditor","api","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","fetchData","nodesRes","edgesRes","Promise","all","getNodes","getEdges","data","err","console","error","className","children","onNodeClick","fileName","_jsxFileName","lineNumber","columnNumber","node","onSave","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Graph from './components/Graph';\r\nimport NodeEditor from './components/NodeEditor';\r\nimport api from './services/api';\r\n\r\nfunction App() {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const [nodesRes, edgesRes] = await Promise.all([\r\n        api.getNodes(),\r\n        api.getEdges()\r\n      ]);\r\n      setNodes(nodesRes.data);\r\n      setEdges(edgesRes.data);\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"graph-container\">\r\n        <Graph \r\n          nodes={nodes} \r\n          edges={edges} \r\n          onNodeClick={setSelectedNode}\r\n        />\r\n      </div>\r\n      <div className=\"editor-container\">\r\n        <NodeEditor \r\n          node={selectedNode} \r\n          onSave={fetchData}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,GAAG,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC7Cf,GAAG,CAACgB,QAAQ,CAAC,CAAC,EACdhB,GAAG,CAACiB,QAAQ,CAAC,CAAC,CACf,CAAC;MACFX,QAAQ,CAACM,QAAQ,CAACM,IAAI,CAAC;MACvBV,QAAQ,CAACK,QAAQ,CAACK,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC5C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BrB,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BrB,OAAA,CAACJ,KAAK;QACJO,KAAK,EAAEA,KAAM;QACbE,KAAK,EAAEA,KAAM;QACbiB,WAAW,EAAEd;MAAgB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BrB,OAAA,CAACH,UAAU;QACT8B,IAAI,EAAEpB,YAAa;QACnBqB,MAAM,EAAEnB;MAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAvCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}