{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projects\\\\Mind Mosaic\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Graph from './components/Graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport NodeViewer from './components/NodeViewer.js';\nimport FileList from './components/FileList.js';\nimport FileEditor from './components/FileEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport PencilIcon from './components/icons/PencilIcon.js';\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\nimport logo from './assets/logo.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [interactionMode, setInteractionMode] = useState('select');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingFile, setIsEditingFile] = useState(false);\n  const [newNodeInitialPositionArgs, setNewNodeInitialPositionArgs] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Determine if any panel that affects graph layout is visible\n  const isAnyPanelVisible = selectedNode && isEditing || selectedNode && !isEditing && !isCreating || isEditingFile;\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData();\n    } else {\n      setNodes([]);\n      setEdges([]);\n    }\n  }, [selectedFile]);\n  const loadFileData = useCallback(async () => {\n    if (!selectedFile) return;\n    setIsLoading(true);\n    try {\n      // First load nodes\n      const response = await api.getFile(selectedFile._id);\n      if (!response.data.nodes) {\n        setNodes([]);\n        setEdges([]);\n        setIsLoading(false);\n        return;\n      }\n\n      // Process nodes and set them\n      const nodesWithPositions = response.data.nodes.map(node => {\n        if (!node.position || node.position.x === null && node.position.y === null) {\n          return {\n            ...node,\n            position: {\n              x: Math.random() * 600 + 100,\n              y: Math.random() * 400 + 100\n            }\n          };\n        }\n        return node;\n      });\n      setNodes(nodesWithPositions);\n\n      // Load and filter edges (robust to populated or unpopulated edge refs)\n      const allEdges = await api.getEdges();\n      const nodeIds = new Set(response.data.nodes.map(n => n._id));\n      const filteredEdges = allEdges.data.filter(edge => {\n        var _edge$source, _edge$target;\n        const s = typeof edge.source === 'object' ? (_edge$source = edge.source) === null || _edge$source === void 0 ? void 0 : _edge$source._id : edge.source;\n        const t = typeof edge.target === 'object' ? (_edge$target = edge.target) === null || _edge$target === void 0 ? void 0 : _edge$target._id : edge.target;\n        return nodeIds.has(s) && nodeIds.has(t);\n      });\n      setEdges(filteredEdges);\n    } catch (err) {\n      console.error('Error loading file data:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile === null || selectedFile === void 0 ? void 0 : selectedFile._id]);\n  const handleFileSelect = useCallback(file => {\n    setSelectedFile(file);\n  }, []);\n  const handleNodeClick = useCallback(node => {\n    // In connect mode, the Graph component handles the click. This function is for select mode only.\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(false);\n      setIsCreating(false);\n    }\n  }, [interactionMode]);\n  const handleNodeDoubleClick = useCallback(node => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(true);\n      setIsCreating(false);\n    }\n  }, [interactionMode]);\n  const handleCreateNode = useCallback(graphDimensions => {\n    if (graphDimensions) {\n      setNewNodeInitialPositionArgs(graphDimensions);\n    }\n    setSelectedNode(null);\n    setIsCreating(true);\n    setIsEditing(true);\n  }, []);\n  const handleSave = async nodeData => {\n    try {\n      if (!nodeData._id) {\n        let initialX = 300,\n          initialY = 300;\n        const minDistance = 100;\n        const padding = 50;\n        if (newNodeInitialPositionArgs && newNodeInitialPositionArgs.graphWidth && newNodeInitialPositionArgs.graphHeight) {\n          const {\n            graphWidth,\n            graphHeight\n          } = newNodeInitialPositionArgs;\n          let targetX = graphWidth * 0.70;\n          let targetY = graphHeight * 0.40;\n          let positionFound = false;\n          for (let attempt = 0; attempt < 30; attempt++) {\n            let currentX = targetX;\n            let currentY = targetY;\n            if (attempt > 0) {\n              const angle = Math.random() * 2 * Math.PI;\n              const radius = 25 * Math.ceil(attempt / 8);\n              currentX = targetX + radius * Math.cos(angle);\n              currentY = targetY + radius * Math.sin(angle);\n            }\n            currentX = Math.max(padding, Math.min(graphWidth - padding, currentX));\n            currentY = Math.max(padding, Math.min(graphHeight - padding, currentY));\n            let collision = false;\n            for (const node of nodes) {\n              if (node.position) {\n                const dist = Math.sqrt(Math.pow(node.position.x - currentX, 2) + Math.pow(node.position.y - currentY, 2));\n                if (dist < minDistance) {\n                  collision = true;\n                  break;\n                }\n              }\n            }\n            if (!collision) {\n              initialX = currentX;\n              initialY = currentY;\n              positionFound = true;\n              break;\n            }\n          }\n          if (!positionFound) {\n            console.warn(\"Could not find an empty spot for new node, using last attempted or default.\");\n            initialX = Math.max(padding, Math.min(graphWidth - padding, targetX));\n            initialY = Math.max(padding, Math.min(graphHeight - padding, targetY));\n          }\n          setNewNodeInitialPositionArgs(null);\n        } else {\n          console.warn(\"Graph dimensions not available for new node positioning, using defaults.\");\n        }\n        nodeData.position = {\n          x: initialX,\n          y: initialY\n        };\n      }\n      const isNewNodeCreation = !nodeData._id;\n      const response = isNewNodeCreation ? await api.createNode(nodeData) : await api.updateNode(nodeData._id, nodeData);\n      if (isNewNodeCreation && response.data && response.data._id) {\n        const newNodeFromServer = response.data;\n\n        // Ensure the position we calculated is on the node object\n        newNodeFromServer.position = nodeData.position;\n        if (selectedFile) {\n          await api.addNodeToFile(selectedFile._id, newNodeFromServer._id);\n        }\n      }\n      await loadFileData();\n    } catch (err) {\n      console.error('Save failed:', err);\n    } finally {\n      setSelectedNode(null);\n      setIsCreating(false);\n      setIsEditing(false);\n    }\n  };\n  const handleCreateEdge = async edgeData => {\n    try {\n      console.log('Creating edge:', edgeData);\n      const response = await api.createEdge(edgeData);\n      console.log('Edge created:', response.data);\n      await loadFileData();\n    } catch (err) {\n      console.error('Failed to create edge:', err);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      if (selectedFile) {\n        await api.removeNodeFromFile(selectedFile._id, id);\n      }\n      await api.deleteNode(id);\n      await loadFileData();\n\n      // If the deleted node was the selected one, clear selectedNode\n      if (selectedNode && selectedNode._id === id) {\n        setSelectedNode(null);\n        setIsEditing(false); // Also reset editing mode\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(`Deletion failed: ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n    }\n  };\n  const handleDeleteEdge = useCallback(async edgeId => {\n    try {\n      await api.deleteEdge(edgeId);\n      await loadFileData();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(`Edge deletion failed: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message}`);\n    }\n  }, [loadFileData]);\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (isCreating) {\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n  const handleStartEdit = () => setIsEditing(true);\n  const handleBackgroundClick = useCallback(() => {\n    setSelectedNode(null);\n    setIsCreating(false);\n    setIsEditing(false);\n  }, []);\n  const handleEditFile = () => setIsEditingFile(true);\n  const handleFileEditSave = async updatedFile => {\n    try {\n      const response = await api.updateFile(updatedFile._id, {\n        name: updatedFile.name,\n        description: updatedFile.description\n      });\n      if (response.status === 200) {\n        setSelectedFile(response.data);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to update file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      alert('Failed to update file: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const handleFileEditCancel = () => setIsEditingFile(false);\n  const handleFileDelete = async fileId => {\n    try {\n      const response = await api.deleteFile(fileId);\n      if (response.status === 200 || response.status === 204) {\n        setSelectedFile(null);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to delete file. Please try again.');\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      alert('Failed to delete file: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  const isEditorVisible = selectedNode && isEditing || isCreating;\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${selectedFile ? 'graph-view-active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-title-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Mind Mosaic Logo\",\n        className: \"project-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), !selectedFile ? /*#__PURE__*/_jsxDEV(FileList, {\n      onFileSelect: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedFile(null),\n          className: \"back-btn\",\n          children: [/*#__PURE__*/_jsxDEV(BackArrowIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), \"Back to Files\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditFile,\n          className: \"edit-file-btn\",\n          children: [/*#__PURE__*/_jsxDEV(PencilIcon, {\n            style: {\n              width: '1rem',\n              height: '1rem',\n              marginRight: '0.5rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), \"Edit File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: isEditingFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-editor-container\",\n          children: /*#__PURE__*/_jsxDEV(FileEditor, {\n            file: selectedFile,\n            onSave: handleFileEditSave,\n            onCancel: handleFileEditCancel,\n            onDelete: handleFileDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"graph-container\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-state\",\n              children: \"Loading graph data...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Graph, {\n              nodes: nodes,\n              edges: edges,\n              onNodeClick: handleNodeClick,\n              onNodeDoubleClick: handleNodeDoubleClick,\n              onCreateNew: handleCreateNode,\n              onCreateEdge: handleCreateEdge,\n              onDeleteEdge: handleDeleteEdge,\n              interactionMode: interactionMode,\n              setInteractionMode: setInteractionMode,\n              onBackgroundClick: handleBackgroundClick,\n              isAnyPanelVisible: isAnyPanelVisible\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`,\n            children: isEditorVisible ? /*#__PURE__*/_jsxDEV(NodeEditor, {\n              node: selectedNode || {\n                title: '',\n                content: '',\n                tags: []\n              },\n              onSave: handleSave,\n              onDelete: selectedNode ? () => handleDelete(selectedNode._id) : null,\n              onCancel: handleCancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 21\n            }, this) : isViewerVisible ? /*#__PURE__*/_jsxDEV(NodeViewer, {\n              node: selectedNode,\n              onEdit: handleStartEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EbVFYAV7O3gxdcxHBfFUegQvxuk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Graph","NodeEditor","NodeViewer","FileList","FileEditor","api","PencilIcon","BackArrowIcon","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","isCreating","setIsCreating","interactionMode","setInteractionMode","selectedFile","setSelectedFile","isEditing","setIsEditing","isEditingFile","setIsEditingFile","newNodeInitialPositionArgs","setNewNodeInitialPositionArgs","isLoading","setIsLoading","isAnyPanelVisible","loadFileData","response","getFile","_id","data","nodesWithPositions","map","node","position","x","y","Math","random","allEdges","getEdges","nodeIds","Set","n","filteredEdges","filter","edge","_edge$source","_edge$target","s","source","t","target","has","err","console","error","handleFileSelect","file","handleNodeClick","handleNodeDoubleClick","handleCreateNode","graphDimensions","handleSave","nodeData","initialX","initialY","minDistance","padding","graphWidth","graphHeight","targetX","targetY","positionFound","attempt","currentX","currentY","angle","PI","radius","ceil","cos","sin","max","min","collision","dist","sqrt","pow","warn","isNewNodeCreation","createNode","updateNode","newNodeFromServer","addNodeToFile","handleCreateEdge","edgeData","log","createEdge","handleDelete","id","removeNodeFromFile","deleteNode","_err$response","_err$response$data","message","handleDeleteEdge","edgeId","deleteEdge","_err$response2","_err$response2$data","handleCancel","handleStartEdit","handleBackgroundClick","handleEditFile","handleFileEditSave","updatedFile","updateFile","name","description","status","alert","_err$response3","_err$response3$data","handleFileEditCancel","handleFileDelete","fileId","deleteFile","_err$response4","_err$response4$data","isEditorVisible","isViewerVisible","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onFileSelect","onClick","style","width","height","marginRight","onSave","onCancel","onDelete","onNodeClick","onNodeDoubleClick","onCreateNew","onCreateEdge","onDeleteEdge","onBackgroundClick","title","content","tags","onEdit","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Projects/Mind Mosaic/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport Graph from './components/Graph.js';\nimport NodeEditor from './components/NodeEditor.js';\nimport NodeViewer from './components/NodeViewer.js';\nimport FileList from './components/FileList.js';\nimport FileEditor from './components/FileEditor.js';\nimport api from './services/api.js';\nimport './App.css';\nimport PencilIcon from './components/icons/PencilIcon.js';\nimport BackArrowIcon from './components/icons/BackArrowIcon.js';\nimport logo from './assets/logo.png';\n\nfunction App() {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [interactionMode, setInteractionMode] = useState('select');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isEditingFile, setIsEditingFile] = useState(false);\n  const [newNodeInitialPositionArgs, setNewNodeInitialPositionArgs] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Determine if any panel that affects graph layout is visible\n  const isAnyPanelVisible = (selectedNode && isEditing) || (selectedNode && !isEditing && !isCreating) || isEditingFile;\n\n  useEffect(() => {\n    if (selectedFile) {\n      loadFileData();\n    } else {\n      setNodes([]);\n      setEdges([]);\n    }\n  }, [selectedFile]);\n\n  const loadFileData = useCallback(async () => {\n    if (!selectedFile) return;\n    setIsLoading(true);\n    try {\n      // First load nodes\n      const response = await api.getFile(selectedFile._id);\n      if (!response.data.nodes) {\n        setNodes([]);\n        setEdges([]);\n        setIsLoading(false);\n        return;\n      }\n\n      // Process nodes and set them\n      const nodesWithPositions = response.data.nodes.map(node => {\n        if (!node.position || (node.position.x === null && node.position.y === null)) {\n          return {\n            ...node,\n            position: {\n              x: Math.random() * 600 + 100,\n              y: Math.random() * 400 + 100\n            }\n          };\n        }\n        return node;\n      });\n      setNodes(nodesWithPositions);\n\n      // Load and filter edges (robust to populated or unpopulated edge refs)\n      const allEdges = await api.getEdges();\n      const nodeIds = new Set(response.data.nodes.map(n => n._id));\n      const filteredEdges = allEdges.data.filter(edge => {\n        const s = typeof edge.source === 'object' ? edge.source?._id : edge.source;\n        const t = typeof edge.target === 'object' ? edge.target?._id : edge.target;\n        return nodeIds.has(s) && nodeIds.has(t);\n      });\n      setEdges(filteredEdges);\n    } catch (err) {\n      console.error('Error loading file data:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedFile?._id]);\n\n  const handleFileSelect = useCallback((file) => {\n    setSelectedFile(file);\n  }, []);\n\n  const handleNodeClick = useCallback((node) => {\n    // In connect mode, the Graph component handles the click. This function is for select mode only.\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(false);\n      setIsCreating(false);\n    }\n  }, [interactionMode]);\n\n  const handleNodeDoubleClick = useCallback((node) => {\n    if (interactionMode !== 'connect') {\n      setSelectedNode(node);\n      setIsEditing(true);\n      setIsCreating(false);\n    }\n  }, [interactionMode]);\n\n  const handleCreateNode = useCallback((graphDimensions) => {\n    if (graphDimensions) {\n      setNewNodeInitialPositionArgs(graphDimensions);\n    }\n    setSelectedNode(null);\n    setIsCreating(true);\n    setIsEditing(true);\n  }, []);\n\n  const handleSave = async (nodeData) => {\n    try {\n      if (!nodeData._id) {\n        let initialX = 300, initialY = 300;\n        const minDistance = 100;\n        const padding = 50;\n\n        if (newNodeInitialPositionArgs && newNodeInitialPositionArgs.graphWidth && newNodeInitialPositionArgs.graphHeight) {\n          const { graphWidth, graphHeight } = newNodeInitialPositionArgs;\n          let targetX = graphWidth * 0.70;\n          let targetY = graphHeight * 0.40;\n\n          let positionFound = false;\n          for (let attempt = 0; attempt < 30; attempt++) {\n            let currentX = targetX;\n            let currentY = targetY;\n\n            if (attempt > 0) {\n              const angle = Math.random() * 2 * Math.PI;\n              const radius = 25 * Math.ceil(attempt / 8);\n              currentX = targetX + radius * Math.cos(angle);\n              currentY = targetY + radius * Math.sin(angle);\n            }\n\n            currentX = Math.max(padding, Math.min(graphWidth - padding, currentX));\n            currentY = Math.max(padding, Math.min(graphHeight - padding, currentY));\n\n            let collision = false;\n            for (const node of nodes) {\n              if (node.position) {\n                const dist = Math.sqrt(Math.pow(node.position.x - currentX, 2) + Math.pow(node.position.y - currentY, 2));\n                if (dist < minDistance) {\n                  collision = true;\n                  break;\n                }\n              }\n            }\n\n            if (!collision) {\n              initialX = currentX;\n              initialY = currentY;\n              positionFound = true;\n              break;\n            }\n          }\n          if (!positionFound) {\n            console.warn(\"Could not find an empty spot for new node, using last attempted or default.\");\n            initialX = Math.max(padding, Math.min(graphWidth - padding, targetX));\n            initialY = Math.max(padding, Math.min(graphHeight - padding, targetY));\n          }\n          setNewNodeInitialPositionArgs(null);\n        } else {\n          console.warn(\"Graph dimensions not available for new node positioning, using defaults.\");\n        }\n        nodeData.position = { x: initialX, y: initialY };\n      }\n\n      const isNewNodeCreation = !nodeData._id;\n\n      const response = isNewNodeCreation ? await api.createNode(nodeData) : await api.updateNode(nodeData._id, nodeData);\n\n      if (isNewNodeCreation && response.data && response.data._id) {\n        const newNodeFromServer = response.data;\n\n        // Ensure the position we calculated is on the node object\n        newNodeFromServer.position = nodeData.position;\n        if (selectedFile) {\n          await api.addNodeToFile(selectedFile._id, newNodeFromServer._id);\n        }\n      }\n      await loadFileData();\n    } catch (err) {\n      console.error('Save failed:', err);\n    } finally {\n      setSelectedNode(null);\n      setIsCreating(false);\n      setIsEditing(false);\n    }\n  };\n\n  const handleCreateEdge = async (edgeData) => {\n    try {\n      console.log('Creating edge:', edgeData);\n      const response = await api.createEdge(edgeData);\n      console.log('Edge created:', response.data);\n      await loadFileData();\n    } catch (err) {\n      console.error('Failed to create edge:', err);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      if (selectedFile) {\n        await api.removeNodeFromFile(selectedFile._id, id);\n      }\n      await api.deleteNode(id);\n      await loadFileData();\n\n      // If the deleted node was the selected one, clear selectedNode\n      if (selectedNode && selectedNode._id === id) {\n        setSelectedNode(null);\n        setIsEditing(false); // Also reset editing mode\n      }\n\n    } catch (err) {\n      console.error(`Deletion failed: ${err.response?.data?.message || err.message}`);\n    }\n  };\n\n  const handleDeleteEdge = useCallback(async (edgeId) => {\n    try {\n      await api.deleteEdge(edgeId);\n      await loadFileData();\n    } catch (err) {\n      console.error(`Edge deletion failed: ${err.response?.data?.message || err.message}`);\n    }\n  }, [loadFileData]);\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    if (isCreating) {\n      setSelectedNode(null);\n      setIsCreating(false);\n    }\n  };\n\n  const handleStartEdit = () => setIsEditing(true);\n  const handleBackgroundClick = useCallback(() => {\n    setSelectedNode(null);\n    setIsCreating(false);\n    setIsEditing(false);\n  }, []);\n  const handleEditFile = () => setIsEditingFile(true);\n  const handleFileEditSave = async (updatedFile) => {\n    try {\n      const response = await api.updateFile(updatedFile._id, { name: updatedFile.name, description: updatedFile.description });\n      if (response.status === 200) {\n        setSelectedFile(response.data);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to update file. Please try again.');\n      }\n    } catch (err) {\n      alert('Failed to update file: ' + (err.response?.data?.message || err.message));\n    }\n  };\n  const handleFileEditCancel = () => setIsEditingFile(false);\n  const handleFileDelete = async (fileId) => {\n    try {\n      const response = await api.deleteFile(fileId);\n      if (response.status === 200 || response.status === 204) {\n        setSelectedFile(null);\n        setIsEditingFile(false);\n      } else {\n        alert('Failed to delete file. Please try again.');\n      }\n    } catch (err) {\n      alert('Failed to delete file: ' + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const isEditorVisible = (selectedNode && isEditing) || isCreating;\n  const isViewerVisible = selectedNode && !isEditing && !isCreating;\n\n  return (\n    <div className={`app-container ${selectedFile ? 'graph-view-active' : ''}`}>\n      <div className=\"project-title-header\">\n        <img src={logo} alt=\"Mind Mosaic Logo\" className=\"project-logo\" />\n      </div>\n\n      {!selectedFile ? (\n        <FileList onFileSelect={handleFileSelect} />\n      ) : (\n        <>\n          <div className=\"header\">\n            <button onClick={() => setSelectedFile(null)} className=\"back-btn\">\n              <BackArrowIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\n              Back to Files\n            </button>\n            <h2>{selectedFile.name}</h2>\n            <button onClick={handleEditFile} className=\"edit-file-btn\">\n              <PencilIcon style={{ width: '1rem', height: '1rem', marginRight: '0.5rem' }} />\n              Edit File\n            </button>\n          </div>\n          <div className=\"main-content\">\n            {isEditingFile ? (\n              <div className=\"file-editor-container\">\n                <FileEditor\n                  file={selectedFile}\n                  onSave={handleFileEditSave}\n                  onCancel={handleFileEditCancel}\n                  onDelete={handleFileDelete}\n                />\n              </div>\n            ) : (\n              <>\n                <div className=\"graph-container\">\n                  {isLoading ? (\n                    <div className=\"loading-state\">\n                      Loading graph data...\n                    </div>\n                  ) : (\n                    <Graph\n                      nodes={nodes}\n                      edges={edges}\n                      onNodeClick={handleNodeClick}\n                      onNodeDoubleClick={handleNodeDoubleClick}\n                      onCreateNew={handleCreateNode}\n                      onCreateEdge={handleCreateEdge}\n                      onDeleteEdge={handleDeleteEdge}\n                      interactionMode={interactionMode}\n                      setInteractionMode={setInteractionMode}\n                      onBackgroundClick={handleBackgroundClick}\n                      isAnyPanelVisible={isAnyPanelVisible}\n                    />\n                  )}\n                </div>\n                <div className={`editor-container ${isEditorVisible || isViewerVisible ? 'visible' : ''}`}>\n                  {isEditorVisible ? (\n                    <NodeEditor\n                      node={selectedNode || { title: '', content: '', tags: [] }}\n                      onSave={handleSave}\n                      onDelete={selectedNode ? () => handleDelete(selectedNode._id) : null}\n                      onCancel={handleCancel}\n                    />\n                  ) : isViewerVisible ? (\n                    <NodeViewer\n                      node={selectedNode}\n                      onEdit={handleStartEdit}\n                    />\n                  ) : null}\n                </div>\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,CAAC;EAChE,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkC,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAClF,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMsC,iBAAiB,GAAIhB,YAAY,IAAIQ,SAAS,IAAMR,YAAY,IAAI,CAACQ,SAAS,IAAI,CAACN,UAAW,IAAIQ,aAAa;EAErH/B,SAAS,CAAC,MAAM;IACd,IAAI2B,YAAY,EAAE;MAChBW,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLpB,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC,EAAE,CAACO,YAAY,CAAC,CAAC;EAElB,MAAMW,YAAY,GAAGrC,WAAW,CAAC,YAAY;IAC3C,IAAI,CAAC0B,YAAY,EAAE;IACnBS,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF;MACA,MAAMG,QAAQ,GAAG,MAAMhC,GAAG,CAACiC,OAAO,CAACb,YAAY,CAACc,GAAG,CAAC;MACpD,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACzB,KAAK,EAAE;QACxBC,QAAQ,CAAC,EAAE,CAAC;QACZE,QAAQ,CAAC,EAAE,CAAC;QACZgB,YAAY,CAAC,KAAK,CAAC;QACnB;MACF;;MAEA;MACA,MAAMO,kBAAkB,GAAGJ,QAAQ,CAACG,IAAI,CAACzB,KAAK,CAAC2B,GAAG,CAACC,IAAI,IAAI;QACzD,IAAI,CAACA,IAAI,CAACC,QAAQ,IAAKD,IAAI,CAACC,QAAQ,CAACC,CAAC,KAAK,IAAI,IAAIF,IAAI,CAACC,QAAQ,CAACE,CAAC,KAAK,IAAK,EAAE;UAC5E,OAAO;YACL,GAAGH,IAAI;YACPC,QAAQ,EAAE;cACRC,CAAC,EAAEE,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG;cAC5BF,CAAC,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;YAC3B;UACF,CAAC;QACH;QACA,OAAOL,IAAI;MACb,CAAC,CAAC;MACF3B,QAAQ,CAACyB,kBAAkB,CAAC;;MAE5B;MACA,MAAMQ,QAAQ,GAAG,MAAM5C,GAAG,CAAC6C,QAAQ,CAAC,CAAC;MACrC,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAACf,QAAQ,CAACG,IAAI,CAACzB,KAAK,CAAC2B,GAAG,CAACW,CAAC,IAAIA,CAAC,CAACd,GAAG,CAAC,CAAC;MAC5D,MAAMe,aAAa,GAAGL,QAAQ,CAACT,IAAI,CAACe,MAAM,CAACC,IAAI,IAAI;QAAA,IAAAC,YAAA,EAAAC,YAAA;QACjD,MAAMC,CAAC,GAAG,OAAOH,IAAI,CAACI,MAAM,KAAK,QAAQ,IAAAH,YAAA,GAAGD,IAAI,CAACI,MAAM,cAAAH,YAAA,uBAAXA,YAAA,CAAalB,GAAG,GAAGiB,IAAI,CAACI,MAAM;QAC1E,MAAMC,CAAC,GAAG,OAAOL,IAAI,CAACM,MAAM,KAAK,QAAQ,IAAAJ,YAAA,GAAGF,IAAI,CAACM,MAAM,cAAAJ,YAAA,uBAAXA,YAAA,CAAanB,GAAG,GAAGiB,IAAI,CAACM,MAAM;QAC1E,OAAOX,OAAO,CAACY,GAAG,CAACJ,CAAC,CAAC,IAAIR,OAAO,CAACY,GAAG,CAACF,CAAC,CAAC;MACzC,CAAC,CAAC;MACF3C,QAAQ,CAACoC,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;IAChD,CAAC,SAAS;MACR9B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACT,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEc,GAAG,CAAC,CAAC;EAEvB,MAAM4B,gBAAgB,GAAGpE,WAAW,CAAEqE,IAAI,IAAK;IAC7C1C,eAAe,CAAC0C,IAAI,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGtE,WAAW,CAAE4C,IAAI,IAAK;IAC5C;IACA,IAAIpB,eAAe,KAAK,SAAS,EAAE;MACjCH,eAAe,CAACuB,IAAI,CAAC;MACrBf,YAAY,CAAC,KAAK,CAAC;MACnBN,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACC,eAAe,CAAC,CAAC;EAErB,MAAM+C,qBAAqB,GAAGvE,WAAW,CAAE4C,IAAI,IAAK;IAClD,IAAIpB,eAAe,KAAK,SAAS,EAAE;MACjCH,eAAe,CAACuB,IAAI,CAAC;MACrBf,YAAY,CAAC,IAAI,CAAC;MAClBN,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACC,eAAe,CAAC,CAAC;EAErB,MAAMgD,gBAAgB,GAAGxE,WAAW,CAAEyE,eAAe,IAAK;IACxD,IAAIA,eAAe,EAAE;MACnBxC,6BAA6B,CAACwC,eAAe,CAAC;IAChD;IACApD,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,IAAI,CAAC;IACnBM,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM6C,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACF,IAAI,CAACA,QAAQ,CAACnC,GAAG,EAAE;QACjB,IAAIoC,QAAQ,GAAG,GAAG;UAAEC,QAAQ,GAAG,GAAG;QAClC,MAAMC,WAAW,GAAG,GAAG;QACvB,MAAMC,OAAO,GAAG,EAAE;QAElB,IAAI/C,0BAA0B,IAAIA,0BAA0B,CAACgD,UAAU,IAAIhD,0BAA0B,CAACiD,WAAW,EAAE;UACjH,MAAM;YAAED,UAAU;YAAEC;UAAY,CAAC,GAAGjD,0BAA0B;UAC9D,IAAIkD,OAAO,GAAGF,UAAU,GAAG,IAAI;UAC/B,IAAIG,OAAO,GAAGF,WAAW,GAAG,IAAI;UAEhC,IAAIG,aAAa,GAAG,KAAK;UACzB,KAAK,IAAIC,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG,EAAE,EAAEA,OAAO,EAAE,EAAE;YAC7C,IAAIC,QAAQ,GAAGJ,OAAO;YACtB,IAAIK,QAAQ,GAAGJ,OAAO;YAEtB,IAAIE,OAAO,GAAG,CAAC,EAAE;cACf,MAAMG,KAAK,GAAGxC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAGD,IAAI,CAACyC,EAAE;cACzC,MAAMC,MAAM,GAAG,EAAE,GAAG1C,IAAI,CAAC2C,IAAI,CAACN,OAAO,GAAG,CAAC,CAAC;cAC1CC,QAAQ,GAAGJ,OAAO,GAAGQ,MAAM,GAAG1C,IAAI,CAAC4C,GAAG,CAACJ,KAAK,CAAC;cAC7CD,QAAQ,GAAGJ,OAAO,GAAGO,MAAM,GAAG1C,IAAI,CAAC6C,GAAG,CAACL,KAAK,CAAC;YAC/C;YAEAF,QAAQ,GAAGtC,IAAI,CAAC8C,GAAG,CAACf,OAAO,EAAE/B,IAAI,CAAC+C,GAAG,CAACf,UAAU,GAAGD,OAAO,EAAEO,QAAQ,CAAC,CAAC;YACtEC,QAAQ,GAAGvC,IAAI,CAAC8C,GAAG,CAACf,OAAO,EAAE/B,IAAI,CAAC+C,GAAG,CAACd,WAAW,GAAGF,OAAO,EAAEQ,QAAQ,CAAC,CAAC;YAEvE,IAAIS,SAAS,GAAG,KAAK;YACrB,KAAK,MAAMpD,IAAI,IAAI5B,KAAK,EAAE;cACxB,IAAI4B,IAAI,CAACC,QAAQ,EAAE;gBACjB,MAAMoD,IAAI,GAAGjD,IAAI,CAACkD,IAAI,CAAClD,IAAI,CAACmD,GAAG,CAACvD,IAAI,CAACC,QAAQ,CAACC,CAAC,GAAGwC,QAAQ,EAAE,CAAC,CAAC,GAAGtC,IAAI,CAACmD,GAAG,CAACvD,IAAI,CAACC,QAAQ,CAACE,CAAC,GAAGwC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBACzG,IAAIU,IAAI,GAAGnB,WAAW,EAAE;kBACtBkB,SAAS,GAAG,IAAI;kBAChB;gBACF;cACF;YACF;YAEA,IAAI,CAACA,SAAS,EAAE;cACdpB,QAAQ,GAAGU,QAAQ;cACnBT,QAAQ,GAAGU,QAAQ;cACnBH,aAAa,GAAG,IAAI;cACpB;YACF;UACF;UACA,IAAI,CAACA,aAAa,EAAE;YAClBlB,OAAO,CAACkC,IAAI,CAAC,6EAA6E,CAAC;YAC3FxB,QAAQ,GAAG5B,IAAI,CAAC8C,GAAG,CAACf,OAAO,EAAE/B,IAAI,CAAC+C,GAAG,CAACf,UAAU,GAAGD,OAAO,EAAEG,OAAO,CAAC,CAAC;YACrEL,QAAQ,GAAG7B,IAAI,CAAC8C,GAAG,CAACf,OAAO,EAAE/B,IAAI,CAAC+C,GAAG,CAACd,WAAW,GAAGF,OAAO,EAAEI,OAAO,CAAC,CAAC;UACxE;UACAlD,6BAA6B,CAAC,IAAI,CAAC;QACrC,CAAC,MAAM;UACLiC,OAAO,CAACkC,IAAI,CAAC,0EAA0E,CAAC;QAC1F;QACAzB,QAAQ,CAAC9B,QAAQ,GAAG;UAAEC,CAAC,EAAE8B,QAAQ;UAAE7B,CAAC,EAAE8B;QAAS,CAAC;MAClD;MAEA,MAAMwB,iBAAiB,GAAG,CAAC1B,QAAQ,CAACnC,GAAG;MAEvC,MAAMF,QAAQ,GAAG+D,iBAAiB,GAAG,MAAM/F,GAAG,CAACgG,UAAU,CAAC3B,QAAQ,CAAC,GAAG,MAAMrE,GAAG,CAACiG,UAAU,CAAC5B,QAAQ,CAACnC,GAAG,EAAEmC,QAAQ,CAAC;MAElH,IAAI0B,iBAAiB,IAAI/D,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACD,GAAG,EAAE;QAC3D,MAAMgE,iBAAiB,GAAGlE,QAAQ,CAACG,IAAI;;QAEvC;QACA+D,iBAAiB,CAAC3D,QAAQ,GAAG8B,QAAQ,CAAC9B,QAAQ;QAC9C,IAAInB,YAAY,EAAE;UAChB,MAAMpB,GAAG,CAACmG,aAAa,CAAC/E,YAAY,CAACc,GAAG,EAAEgE,iBAAiB,CAAChE,GAAG,CAAC;QAClE;MACF;MACA,MAAMH,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC,OAAO4B,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;IACpC,CAAC,SAAS;MACR5C,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,KAAK,CAAC;MACpBM,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM6E,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACFzC,OAAO,CAAC0C,GAAG,CAAC,gBAAgB,EAAED,QAAQ,CAAC;MACvC,MAAMrE,QAAQ,GAAG,MAAMhC,GAAG,CAACuG,UAAU,CAACF,QAAQ,CAAC;MAC/CzC,OAAO,CAAC0C,GAAG,CAAC,eAAe,EAAEtE,QAAQ,CAACG,IAAI,CAAC;MAC3C,MAAMJ,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC,OAAO4B,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC9C;EACF,CAAC;EAED,MAAM6C,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,IAAIrF,YAAY,EAAE;QAChB,MAAMpB,GAAG,CAAC0G,kBAAkB,CAACtF,YAAY,CAACc,GAAG,EAAEuE,EAAE,CAAC;MACpD;MACA,MAAMzG,GAAG,CAAC2G,UAAU,CAACF,EAAE,CAAC;MACxB,MAAM1E,YAAY,CAAC,CAAC;;MAEpB;MACA,IAAIjB,YAAY,IAAIA,YAAY,CAACoB,GAAG,KAAKuE,EAAE,EAAE;QAC3C1F,eAAe,CAAC,IAAI,CAAC;QACrBQ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IAEF,CAAC,CAAC,OAAOoC,GAAG,EAAE;MAAA,IAAAiD,aAAA,EAAAC,kBAAA;MACZjD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAA+C,aAAA,GAAAjD,GAAG,CAAC3B,QAAQ,cAAA4E,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAczE,IAAI,cAAA0E,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAInD,GAAG,CAACmD,OAAO,EAAE,CAAC;IACjF;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGrH,WAAW,CAAC,MAAOsH,MAAM,IAAK;IACrD,IAAI;MACF,MAAMhH,GAAG,CAACiH,UAAU,CAACD,MAAM,CAAC;MAC5B,MAAMjF,YAAY,CAAC,CAAC;IACtB,CAAC,CAAC,OAAO4B,GAAG,EAAE;MAAA,IAAAuD,cAAA,EAAAC,mBAAA;MACZvD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAAqD,cAAA,GAAAvD,GAAG,CAAC3B,QAAQ,cAAAkF,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc/E,IAAI,cAAAgF,mBAAA,uBAAlBA,mBAAA,CAAoBL,OAAO,KAAInD,GAAG,CAACmD,OAAO,EAAE,CAAC;IACtF;EACF,CAAC,EAAE,CAAC/E,YAAY,CAAC,CAAC;EAElB,MAAMqF,YAAY,GAAGA,CAAA,KAAM;IACzB7F,YAAY,CAAC,KAAK,CAAC;IACnB,IAAIP,UAAU,EAAE;MACdD,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMoG,eAAe,GAAGA,CAAA,KAAM9F,YAAY,CAAC,IAAI,CAAC;EAChD,MAAM+F,qBAAqB,GAAG5H,WAAW,CAAC,MAAM;IAC9CqB,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;IACpBM,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMgG,cAAc,GAAGA,CAAA,KAAM9F,gBAAgB,CAAC,IAAI,CAAC;EACnD,MAAM+F,kBAAkB,GAAG,MAAOC,WAAW,IAAK;IAChD,IAAI;MACF,MAAMzF,QAAQ,GAAG,MAAMhC,GAAG,CAAC0H,UAAU,CAACD,WAAW,CAACvF,GAAG,EAAE;QAAEyF,IAAI,EAAEF,WAAW,CAACE,IAAI;QAAEC,WAAW,EAAEH,WAAW,CAACG;MAAY,CAAC,CAAC;MACxH,IAAI5F,QAAQ,CAAC6F,MAAM,KAAK,GAAG,EAAE;QAC3BxG,eAAe,CAACW,QAAQ,CAACG,IAAI,CAAC;QAC9BV,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLqG,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC,CAAC,OAAOnE,GAAG,EAAE;MAAA,IAAAoE,cAAA,EAAAC,mBAAA;MACZF,KAAK,CAAC,yBAAyB,IAAI,EAAAC,cAAA,GAAApE,GAAG,CAAC3B,QAAQ,cAAA+F,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc5F,IAAI,cAAA6F,mBAAA,uBAAlBA,mBAAA,CAAoBlB,OAAO,KAAInD,GAAG,CAACmD,OAAO,CAAC,CAAC;IACjF;EACF,CAAC;EACD,MAAMmB,oBAAoB,GAAGA,CAAA,KAAMxG,gBAAgB,CAAC,KAAK,CAAC;EAC1D,MAAMyG,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,IAAI;MACF,MAAMnG,QAAQ,GAAG,MAAMhC,GAAG,CAACoI,UAAU,CAACD,MAAM,CAAC;MAC7C,IAAInG,QAAQ,CAAC6F,MAAM,KAAK,GAAG,IAAI7F,QAAQ,CAAC6F,MAAM,KAAK,GAAG,EAAE;QACtDxG,eAAe,CAAC,IAAI,CAAC;QACrBI,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLqG,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC,CAAC,OAAOnE,GAAG,EAAE;MAAA,IAAA0E,cAAA,EAAAC,mBAAA;MACZR,KAAK,CAAC,yBAAyB,IAAI,EAAAO,cAAA,GAAA1E,GAAG,CAAC3B,QAAQ,cAAAqG,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAclG,IAAI,cAAAmG,mBAAA,uBAAlBA,mBAAA,CAAoBxB,OAAO,KAAInD,GAAG,CAACmD,OAAO,CAAC,CAAC;IACjF;EACF,CAAC;EAED,MAAMyB,eAAe,GAAIzH,YAAY,IAAIQ,SAAS,IAAKN,UAAU;EACjE,MAAMwH,eAAe,GAAG1H,YAAY,IAAI,CAACQ,SAAS,IAAI,CAACN,UAAU;EAEjE,oBACEX,OAAA;IAAKoI,SAAS,EAAE,iBAAiBrH,YAAY,GAAG,mBAAmB,GAAG,EAAE,EAAG;IAAAsH,QAAA,gBACzErI,OAAA;MAAKoI,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCrI,OAAA;QAAKsI,GAAG,EAAExI,IAAK;QAACyI,GAAG,EAAC,kBAAkB;QAACH,SAAS,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,EAEL,CAAC5H,YAAY,gBACZf,OAAA,CAACP,QAAQ;MAACmJ,YAAY,EAAEnF;IAAiB;MAAA+E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5C3I,OAAA,CAAAE,SAAA;MAAAmI,QAAA,gBACErI,OAAA;QAAKoI,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBrI,OAAA;UAAQ6I,OAAO,EAAEA,CAAA,KAAM7H,eAAe,CAAC,IAAI,CAAE;UAACoH,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAChErI,OAAA,CAACH,aAAa;YAACiJ,KAAK,EAAE;cAAEC,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE,MAAM;cAAEC,WAAW,EAAE;YAAS;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,iBAEpF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT3I,OAAA;UAAAqI,QAAA,EAAKtH,YAAY,CAACuG;QAAI;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5B3I,OAAA;UAAQ6I,OAAO,EAAE3B,cAAe;UAACkB,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACxDrI,OAAA,CAACJ,UAAU;YAACkJ,KAAK,EAAE;cAAEC,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE,MAAM;cAAEC,WAAW,EAAE;YAAS;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,aAEjF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN3I,OAAA;QAAKoI,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BlH,aAAa,gBACZnB,OAAA;UAAKoI,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpCrI,OAAA,CAACN,UAAU;YACTgE,IAAI,EAAE3C,YAAa;YACnBmI,MAAM,EAAE/B,kBAAmB;YAC3BgC,QAAQ,EAAEvB,oBAAqB;YAC/BwB,QAAQ,EAAEvB;UAAiB;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN3I,OAAA,CAAAE,SAAA;UAAAmI,QAAA,gBACErI,OAAA;YAAKoI,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC7B9G,SAAS,gBACRvB,OAAA;cAAKoI,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAE/B;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBAEN3I,OAAA,CAACV,KAAK;cACJe,KAAK,EAAEA,KAAM;cACbE,KAAK,EAAEA,KAAM;cACb8I,WAAW,EAAE1F,eAAgB;cAC7B2F,iBAAiB,EAAE1F,qBAAsB;cACzC2F,WAAW,EAAE1F,gBAAiB;cAC9B2F,YAAY,EAAEzD,gBAAiB;cAC/B0D,YAAY,EAAE/C,gBAAiB;cAC/B7F,eAAe,EAAEA,eAAgB;cACjCC,kBAAkB,EAAEA,kBAAmB;cACvC4I,iBAAiB,EAAEzC,qBAAsB;cACzCxF,iBAAiB,EAAEA;YAAkB;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACN3I,OAAA;YAAKoI,SAAS,EAAE,oBAAoBF,eAAe,IAAIC,eAAe,GAAG,SAAS,GAAG,EAAE,EAAG;YAAAE,QAAA,EACvFH,eAAe,gBACdlI,OAAA,CAACT,UAAU;cACT0C,IAAI,EAAExB,YAAY,IAAI;gBAAEkJ,KAAK,EAAE,EAAE;gBAAEC,OAAO,EAAE,EAAE;gBAAEC,IAAI,EAAE;cAAG,CAAE;cAC3DX,MAAM,EAAEnF,UAAW;cACnBqF,QAAQ,EAAE3I,YAAY,GAAG,MAAM0F,YAAY,CAAC1F,YAAY,CAACoB,GAAG,CAAC,GAAG,IAAK;cACrEsH,QAAQ,EAAEpC;YAAa;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC,GACAR,eAAe,gBACjBnI,OAAA,CAACR,UAAU;cACTyC,IAAI,EAAExB,YAAa;cACnBqJ,MAAM,EAAE9C;YAAgB;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,GACA;UAAI;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA,eACN;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvI,EAAA,CAnVQD,GAAG;AAAA4J,EAAA,GAAH5J,GAAG;AAqVZ,eAAeA,GAAG;AAAC,IAAA4J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}