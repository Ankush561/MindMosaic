{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default {\n  getNodes: () => api.get('/nodes'),\n  getNode: id => api.get(`/nodes/${id}`),\n  createNode: node => api.post('/nodes', node),\n  updateNode: (id, node) => api.patch(`/nodes/${id}`, node),\n  deleteNode: id => api.delete(`/nodes/${id}`),\n  getEdges: () => api.get('/edges'),\n  createEdge: edge => api.post('/edges', edge)\n  // Add other API calls as needed\n};\n// Add request/response interceptors\napi.interceptors.request.use(request => {\n  console.log('Starting Request', request);\n  return request;\n});\napi.interceptors.response.use(response => {\n  console.log('Response:', response);\n  return response;\n}, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\nconst handleSave = async nodeData => {\n  console.group('Saving Node');\n  try {\n    console.log('Payload:', nodeData);\n    const response = nodeData._id ? await api.updateNode(nodeData._id, nodeData) : await api.createNode(nodeData);\n    console.log('Save successful:', response.data);\n    await fetchData();\n    return true;\n  } catch (err) {\n    console.error('Save failed:', {\n      error: err,\n      config: err.config,\n      response: err.response\n    });\n    return false;\n  } finally {\n    console.groupEnd();\n    setSelectedNode(null);\n    setIsCreating(false);\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","getNodes","get","getNode","id","createNode","node","post","updateNode","patch","deleteNode","delete","getEdges","createEdge","edge","interceptors","request","use","console","log","response","error","Promise","reject","handleSave","nodeData","group","_id","data","fetchData","err","config","groupEnd","setSelectedNode","setIsCreating"],"sources":["C:/Users/user/Desktop/Project/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\nexport default {\r\n  getNodes: () => api.get('/nodes'),\r\n  getNode: (id) => api.get(`/nodes/${id}`),\r\n  createNode: (node) => api.post('/nodes', node),\r\n  updateNode: (id, node) => api.patch(`/nodes/${id}`, node),\r\n  deleteNode: (id) => api.delete(`/nodes/${id}`),\r\n  getEdges: () => api.get('/edges'),\r\n  createEdge: (edge) => api.post('/edges', edge),\r\n  // Add other API calls as needed\r\n};\r\n// Add request/response interceptors\r\napi.interceptors.request.use(request => {\r\n  console.log('Starting Request', request);\r\n  return request;\r\n});\r\n\r\napi.interceptors.response.use(response => {\r\n  console.log('Response:', response);\r\n  return response;\r\n}, error => {\r\n  console.error('API Error:', error);\r\n  return Promise.reject(error);\r\n});\r\nconst handleSave = async (nodeData) => {\r\n  console.group('Saving Node');\r\n  try {\r\n    console.log('Payload:', nodeData);\r\n    const response = nodeData._id \r\n      ? await api.updateNode(nodeData._id, nodeData)\r\n      : await api.createNode(nodeData);\r\n    \r\n    console.log('Save successful:', response.data);\r\n    await fetchData();\r\n    return true;\r\n  } catch (err) {\r\n    console.error('Save failed:', {\r\n      error: err,\r\n      config: err.config,\r\n      response: err.response\r\n    });\r\n    return false;\r\n  } finally {\r\n    console.groupEnd();\r\n    setSelectedNode(null);\r\n    setIsCreating(false);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AACF,eAAe;EACbC,QAAQ,EAAEA,CAAA,KAAMP,GAAG,CAACQ,GAAG,CAAC,QAAQ,CAAC;EACjCC,OAAO,EAAGC,EAAE,IAAKV,GAAG,CAACQ,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;EACxCC,UAAU,EAAGC,IAAI,IAAKZ,GAAG,CAACa,IAAI,CAAC,QAAQ,EAAED,IAAI,CAAC;EAC9CE,UAAU,EAAEA,CAACJ,EAAE,EAAEE,IAAI,KAAKZ,GAAG,CAACe,KAAK,CAAC,UAAUL,EAAE,EAAE,EAAEE,IAAI,CAAC;EACzDI,UAAU,EAAGN,EAAE,IAAKV,GAAG,CAACiB,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;EAC9CQ,QAAQ,EAAEA,CAAA,KAAMlB,GAAG,CAACQ,GAAG,CAAC,QAAQ,CAAC;EACjCW,UAAU,EAAGC,IAAI,IAAKpB,GAAG,CAACa,IAAI,CAAC,QAAQ,EAAEO,IAAI;EAC7C;AACF,CAAC;AACD;AACApB,GAAG,CAACqB,YAAY,CAACC,OAAO,CAACC,GAAG,CAACD,OAAO,IAAI;EACtCE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,OAAO,CAAC;EACxC,OAAOA,OAAO;AAChB,CAAC,CAAC;AAEFtB,GAAG,CAACqB,YAAY,CAACK,QAAQ,CAACH,GAAG,CAACG,QAAQ,IAAI;EACxCF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;EAClC,OAAOA,QAAQ;AACjB,CAAC,EAAEC,KAAK,IAAI;EACVH,OAAO,CAACG,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AACF,MAAMG,UAAU,GAAG,MAAOC,QAAQ,IAAK;EACrCP,OAAO,CAACQ,KAAK,CAAC,aAAa,CAAC;EAC5B,IAAI;IACFR,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEM,QAAQ,CAAC;IACjC,MAAML,QAAQ,GAAGK,QAAQ,CAACE,GAAG,GACzB,MAAMjC,GAAG,CAACc,UAAU,CAACiB,QAAQ,CAACE,GAAG,EAAEF,QAAQ,CAAC,GAC5C,MAAM/B,GAAG,CAACW,UAAU,CAACoB,QAAQ,CAAC;IAElCP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,QAAQ,CAACQ,IAAI,CAAC;IAC9C,MAAMC,SAAS,CAAC,CAAC;IACjB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZZ,OAAO,CAACG,KAAK,CAAC,cAAc,EAAE;MAC5BA,KAAK,EAAES,GAAG;MACVC,MAAM,EAAED,GAAG,CAACC,MAAM;MAClBX,QAAQ,EAAEU,GAAG,CAACV;IAChB,CAAC,CAAC;IACF,OAAO,KAAK;EACd,CAAC,SAAS;IACRF,OAAO,CAACc,QAAQ,CAAC,CAAC;IAClBC,eAAe,CAAC,IAAI,CAAC;IACrBC,aAAa,CAAC,KAAK,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}